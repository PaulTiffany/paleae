{
  "meta": {
    "tool": "paleae",
    "version": "1.2.0",
    "license": "MIT",
    "website": "https://paleae.com",
    "source": "https://github.com/PaulTiffany/paleae",
    "timestamp": "2025-09-16T07:29:19Z",
    "root_directory": "C:\\Users\\paulc\\Downloads\\chalk-main\\chalk-main",
    "ignore_file": {
      "file": ".paleaeignore",
      "present": false,
      "patterns": 0,
      "negations": 0
    },
    "summary": {
      "total_files": 33,
      "total_chars": 151511,
      "estimated_tokens": 37864
    }
  },
  "files": [
    {
      "path": ".editorconfig",
      "content": "root = true\n\n[*]\nindent_style = tab\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.yml]\nindent_style = space\nindent_size = 2\n",
      "size_chars": 175,
      "sha256": "a6c981d9e5f90048850a8a59e79372701b58489ba29cccb5c5d273db3b77c4a3",
      "estimated_tokens": 43
    },
    {
      "path": ".gitattributes",
      "content": "* text=auto eol=lf\n",
      "size_chars": 19,
      "sha256": "d60f352d0db1404c70afb4bb8b2ca3fd1c610572aa40720e8a0b7baa7885418c",
      "estimated_tokens": 4
    },
    {
      "path": ".github/funding.yml",
      "content": "github: [sindresorhus, Qix-]\nopen_collective: sindresorhus\ntidelift: npm/chalk\ncustom: https://sindresorhus.com/donate\n",
      "size_chars": 119,
      "sha256": "2b07725d9fe5d289d86c9be1819b5335c03e0ac4421612d925b93b43d62be092",
      "estimated_tokens": 29
    },
    {
      "path": ".github/security.md",
      "content": "# Security Policy\n\nTo report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security). Tidelift will coordinate the fix and disclosure.\n",
      "size_chars": 179,
      "sha256": "cf00ea7fd49f2efefb2ac6db9da3850915d1b2c8c9cc54d74eace54e9fede183",
      "estimated_tokens": 44
    },
    {
      "path": ".github/workflows/main.yml",
      "content": "name: CI\non:\n  - push\n  - pull_request\njobs:\n  test:\n    name: Node.js ${{ matrix.node-version }}\n    runs-on: ubuntu-latest\n    strategy:\n      fail-fast: false\n      matrix:\n        node-version:\n          - 18\n          - 16\n          - 14\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-node@v4\n        with:\n          node-version: ${{ matrix.node-version }}\n      - run: npm install\n      - run: npm test\n      - uses: codecov/codecov-action@v2\n        if: matrix.node-version == 16\n        with:\n          fail_ci_if_error: true\n",
      "size_chars": 561,
      "sha256": "1b516a2863e48da5dec84bd708a5c2e3e40a78972e0cae31d614f8d8906fd4b9",
      "estimated_tokens": 140
    },
    {
      "path": ".gitignore",
      "content": "node_modules\nyarn.lock\ncoverage\n.nyc_output\n",
      "size_chars": 44,
      "sha256": "c11a9e7e1a8a9150e6c076b7026b95ff8baca0438892fd3ef7c69fce2f3ea41c",
      "estimated_tokens": 11
    },
    {
      "path": ".npmrc",
      "content": "package-lock=false\n",
      "size_chars": 19,
      "sha256": "f3fc23758ab91be5f94a8c5eaff433d1ccd6a206cf1d381d332eb63716009337",
      "estimated_tokens": 4
    },
    {
      "path": "benchmark.js",
      "content": "/* globals suite, bench */\nimport chalk from './index.js';\n\nsuite('chalk', () => {\n\tconst chalkRed = chalk.red;\n\tconst chalkBgRed = chalk.bgRed;\n\tconst chalkBlueBgRed = chalk.blue.bgRed;\n\tconst chalkBlueBgRedBold = chalk.blue.bgRed.bold;\n\n\tconst blueStyledString = 'the fox jumps' + chalk.blue('over the lazy dog') + '!';\n\n\tbench('1 style', () => {\n\t\tchalk.red('the fox jumps over the lazy dog');\n\t});\n\n\tbench('2 styles', () => {\n\t\tchalk.blue.bgRed('the fox jumps over the lazy dog');\n\t});\n\n\tbench('3 styles', () => {\n\t\tchalk.blue.bgRed.bold('the fox jumps over the lazy dog');\n\t});\n\n\tbench('cached: 1 style', () => {\n\t\tchalkRed('the fox jumps over the lazy dog');\n\t});\n\n\tbench('cached: 2 styles', () => {\n\t\tchalkBlueBgRed('the fox jumps over the lazy dog');\n\t});\n\n\tbench('cached: 3 styles', () => {\n\t\tchalkBlueBgRedBold('the fox jumps over the lazy dog');\n\t});\n\n\tbench('cached: 1 style with newline', () => {\n\t\tchalkRed('the fox jumps\\nover the lazy dog');\n\t});\n\n\tbench('cached: 1 style nested intersecting', () => {\n\t\tchalkRed(blueStyledString);\n\t});\n\n\tbench('cached: 1 style nested non-intersecting', () => {\n\t\tchalkBgRed(blueStyledString);\n\t});\n\n\tbench('cached: 1 style template literal', () => {\n\t\t// eslint-disable-next-line no-unused-expressions\n\t\tchalkRed`the fox jumps over the lazy dog`;\n\t});\n\n\tbench('cached: nested styles template literal', () => {\n\t\t// eslint-disable-next-line no-unused-expressions\n\t\tchalkRed`the fox {bold jumps} over the {underline lazy} dog`;\n\t});\n});\n",
      "size_chars": 1486,
      "sha256": "af0dae9f220cb9b81add81281125e674ca361b7f00dc993d31e5b7b61d0612de",
      "estimated_tokens": 371
    },
    {
      "path": "code-of-conduct.md",
      "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at sindresorhus@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
      "size_chars": 3230,
      "sha256": "311554fc64b9bfdfd0676103ba413b0eb0e9703b09476b0908c4df04dc1bd1e9",
      "estimated_tokens": 807
    },
    {
      "path": "contributing.md",
      "content": "# Contributing to Chalk\n\nPlease note that this project is released with a [Contributor Code of Conduct](code-of-conduct.md). By participating in this project you agree to abide by its terms.\n",
      "size_chars": 191,
      "sha256": "4620cfabc8f5ef9aa783087d5210fa6d73a94d392fc0599f77e4ef3ae42a542d",
      "estimated_tokens": 47
    },
    {
      "path": "examples/rainbow.js",
      "content": "import {setTimeout as delay} from 'node:timers/promises';\nimport convertColor from 'color-convert';\nimport updateLog from 'log-update';\nimport chalk from '../source/index.js';\n\nconst ignoreChars = /[^!-~]/g;\n\nfunction rainbow(string, offset) {\n\tif (!string || string.length === 0) {\n\t\treturn string;\n\t}\n\n\tconst hueStep = 360 / string.replaceAll(ignoreChars, '').length;\n\n\tlet hue = offset % 360;\n\tconst characters = [];\n\tfor (const character of string) {\n\t\tif (ignoreChars.test(character)) {\n\t\t\tcharacters.push(character);\n\t\t} else {\n\t\t\tcharacters.push(chalk.hex(convertColor.hsl.hex(hue, 100, 50))(character));\n\t\t\thue = (hue + hueStep) % 360;\n\t\t}\n\t}\n\n\treturn characters.join('');\n}\n\nasync function animateString(string) {\n\tfor (let index = 0; index < 360 * 5; index++) {\n\t\tupdateLog(rainbow(string, index));\n\t\tawait delay(2); // eslint-disable-line no-await-in-loop\n\t}\n}\n\nconsole.log();\nawait animateString('We hope you enjoy Chalk! <3');\nconsole.log();\n",
      "size_chars": 955,
      "sha256": "13dc988a22991f33b31b06c2dee7883f1e1fee66ec2c1f3117d0a92ecffa07e7",
      "estimated_tokens": 238
    },
    {
      "path": "examples/screenshot.js",
      "content": "import process from 'node:process';\nimport styles from 'ansi-styles';\nimport chalk from '../source/index.js';\n\n// Generates screenshot\nfor (const key of Object.keys(styles)) {\n\tlet returnValue = key;\n\n\t// We skip `overline` as almost no terminal supports it so we cannot show it off.\n\tif (\n\t\tkey === 'reset'\n\t\t\t|| key === 'hidden'\n\t\t\t|| key === 'grey'\n\t\t\t|| key === 'bgGray'\n\t\t\t|| key === 'bgGrey'\n\t\t\t|| key === 'overline'\n\t\t\t|| key.endsWith('Bright')\n\t) {\n\t\tcontinue;\n\t}\n\n\tif (/^bg[^B]/.test(key)) {\n\t\treturnValue = chalk.black(returnValue);\n\t}\n\n\tprocess.stdout.write(chalk[key](returnValue) + ' ');\n}\n",
      "size_chars": 603,
      "sha256": "472ae0b2d0ccee0cb801302e9c7f2bc26d0a8dbfa5b47acd4c043044145a9c63",
      "estimated_tokens": 150
    },
    {
      "path": "license",
      "content": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "size_chars": 1117,
      "sha256": "5c932d88256b4ab958f64a856fa48e8bd1f55bc1d96b8149c65689e0c61789d3",
      "estimated_tokens": 279
    },
    {
      "path": "media/logo.svg",
      "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"500\" height=\"230\"><path fill=\"#ED8A8A\" d=\"M33.502 181.448l-8.538-5.68-3.547-5.124-8.936-12.332-1.31-3.88-2.49-5.812-4.86-16.065-1.71-9.146-.52-3.74-1.05-3.32v-4.86L0 107.76V86.845l3.023-23.55 1.574-3.32.79-6.096 2.758-6.79 1.052-4.29 2.496-5.41 2.103-3.74 3.02-6.37 5.653-7.07 1.44-2.08 5.12-5.4 3.02-2.08 6.17-5.12 4.59-1.39 7.62-2.63h7.09L61.88 0l4.862 2.078 7.093.97 5.124 2.218 2.23.828 1.84 1.8v4.848l-2.89 6.098-.92 4.57-2.37 4.982-.53 3.604-1.97 2.768-1.45 2.222h-1.57L64.5 33.38l-6.308-.82-4.73 1.66-2.89.83-1.97 3.325-3.68 1.388-1.575 4.294-3.024 2.076-.787 4.986-3.024 3.18-2.89 12.19-2.1 6.37-.53 7.06-.393 1.52-1.05 13.98v18.83l1.45 6.37.52 4.85.52 1.66 2.1 7.48 3.15 6.78 8.15 10.8 4.2 2.08 7.09.83 12.48-6.51H72l3.94 6.92 1.97 5.68 3.417 4.98.655 2.22 1.71 4.43-.92 2.07-2.365 1.53-4.73 4.43-4.598 2.49-6.7 1.39-4.34 2.21-4.6-.97-3.94 1.11-7.75-1.39-10.25-4.29zm25.096 3.046l3.547-1.525 7.225-1.11 5.125-3.05 4.464-3.89 1.97-1.66v-1.66l-1.98-4.29-.53-1.53-2.89-4.86-1.84-5.27-2.76-4.7-3.94.97-2.37 2.48 1.05 1.1h2.49l3.28 2.63 1.97 4.15 2.36 1.66.52 1.8-.92 1.11-1.58-1.11-.52-1.11-2.11-1.53.66-1.11-1.05.56-3.02-1.68v-2.63l-1.44.7-1.19-1.25h-.52v-2.22h-3.54l-3.02 1.11h-7.62l-3.53-1.22-3.81-2.63-6.44-9-3.55-7.48-3.02-9.15-1.05-2.77v-4.71l-.93-3.05-.66-5.68-.53-2.09V95.98l1.06-3.184V81.44l1.57-4.847V71.88L31 67.036l.53-2.22 1.58-4.845 1.97-7.34 2.49-2.77.79-4.85 3.15-2.21 1.71-3.74h-1.97l-1.58.84 1.05 1.8-.53.55h-1.97l-.66 2.08-6.046-4.71-1.97-2.21-9.2-7.48 1.05-1.11-.79-1.38 4.34-.97 4.73 4.02H31v-.83l-4.99-3.6v-2.5l1.97-2.21h1.05L31 24.11l3.68 3.74 9.33 6.65-.79 2.495v1.24l3.676-1.805 1.315-1.53-3.41-1.8-3.54-3.74-2.49-2.08-1.57-1.66-2.48-1.52-2.1-1.66-3.02-2.22.53-.417v-1.108l.53-1.107-.52-1.11h3.42l4.2 3.74 1.45 1.11 2.63 2.21 3.02 2.076 1.45 1.523 4.73 2.77.79.83-3.68 2.63 5.52-.97 3.28-2.77-4.99-.83-1.44-1.525-3.15-2.77-5.52-5.81-.79-1.53-1.84-.693-1.45-1.52-1.05.55h-.79l.79-1.66-1.97-2.08-7.09 4.57-3.16 4.99-5.13 5.95L10.65 45l-.39 2.076-1.57 4.85-.528 2.77-1.31 2.772-.66 3.6L5.14 65.37l-.535 4.29-1.313 5.395L2.5 86.29l-.92 3.186.52 3.324v14.96l1.183 4.152 3.286 2.91 1.57.414 1.05 1.113 4.07 3.73 1.97 2.21 2.1 1.11 4.59 3.74.92.55.52.56 5.12 4.29.78 2.35 3.28 3.46v2.36l-2.89-1.11-.66-1.25-2.11-1.11v-2.08h-1.44v-.56l-3.02-1.11-5.65-5.82h-.53v-.55H14.7l-2.495-2.77-1.576-.42-.4-.56-3.16-2.22h-.65l-1.31-2.07-1.05-1.1-1.05-3.19.52-.56-.52-.55-.79 1.66 2.1 6.64 1.32 1.38v.55H4.6v.41l2.89.69.656 1.52 2.104 1.1 1.97 2.08 3.545 2.21 1.05.97 1.054.55 3.02 2.77 5.52 3.89 2.36 3.73 11.43 9.56 3.54 3.74 3.15 1.1.39.42 2.1.56 2.36 1.24-1.18 1.24 8.01 6.65 1.18-1.24 1.84 1.24 1.05.55V170l-2.11-1.12H60l2.105 2.22H64.6l8.803 6.93H70.8l-.522.55-2.102 1.11h-1.44l-3.546-3.88V175l-2.1-.7-1.97-2.22-1.58-.96-2.102-2.22h-.92l-1.05-1.1-1.57-.553-1.707-1.806-3.81-2.49-2.1-2.08-1.97-1.1-2.36-2.35-2.23-.83-2.62-1.8-3.15-4.43-2.37-1.24-.52-.55-1.05-.56-1.06-1.11h-.39l-1.57-1.51-1.58-.56-2.49-2.77-1.58-.97V140l1.06-1.11-1.18-.696-1.84.69-3.02-2.07-.52-.556-1.58-1.11-3.02-3.188-1.58-.55-1.05-1.108v-3.745l-1.44-1.66v4.302L7 135.15l6.83 5.4 4.99 2.64 1.18 2.49 1.445.69 9.582 8.6 1.58 1.66 2.5 1.66 3.15 2.63 8.67 6.94.4.55 4.07 3.18 1.05 1.11 5.12 3.745 3.02 2.763 1.58.97v1.11l-1.05.553-1.71 1.25-2.364-1.24-4.597-4.85-2.62-1.38-3.42-2.9-2.1-1.11v-1.51l-1.05.55-3.55-2.22-2.496-2.08-4.6-3.32-5.653-5.81-3.02-2.22-.53-.96-4.33-2.35-2.237-3.61h-.92l-3.68-3.18h-.92l-.66-2.77-1.445-1.53.527-.55-2.63-3.46v.97l2.1 5.68 2.1 6.78 2.496 3.46v-2.21h.92l9.195 7.06 3.55 3.74 3.15 2.09.39.55 5.12 3.74 3.54 3.19 12.87 10.11-2.63.83-2.63-.69h-1.44v-.56H44.8l-3.155-.84-.918-1.8-1.97-1.11-4.6-3.74v-1.67H32.58L31 171.2l-.915-2.22h-.528l-1.968-1.39-1.05-2.36-1.32 1.39-1.84-1.946-1.97-1.66-.53-.402-1.58-.84-1.44-2.493-2.11-2.08-.53-1.67-.53-.55v2.22l.79 2.21 2.89 3.6 4.07 6.24 4.46 3.05.53-1.11 2.1 2.08 1.05.55 5.52 3.88v1.39l-1.98-1.52-3.55-1.8v.69l1.45 1.65 6.17 3.19 9.06 3.18h11.31zm-32.584-59.56l-.527-.554h-2.233l-8.54-6.926-1.97-2.218-2.103-.973-1.44-1.658-4.73-3.6-1.18-2.356.79-1.53.53-1.66 1.05.55H7.5l3.152 2.63v.56h-.392v1.65h1.97l1.053-.55-.79 1.52 8.937 7.61 1.966 2.21 2.1.97.528 1.11 1.973 2.22-1.316.55 1.32 2.08-.52.55-2.1-1.53.65-.69zm-2.63-22.576l-1.18.69-1.84-.69-1.052-.972-3.02-2.212-.525-1.11-2.364-1.108.918-.972v-.554l-1.18.554-2.49-1.66h-.39v-2.08h1.97l.53 1.11h.53l1.97 1.385v-1.95l-4.46-2.35-.52 1.24h-.53l-.52.55H7.75l-1.577-2.77-1.052-.42v-1.1l-1.31-2.08 1.45-3.05 8.02 6.23 1.05.97 6.57 5.4 3.55 3.74-2.89.55 1.84 1.11 2.1 2.08V104l-.52.56-.53 1.105-1.05-1.105v-2.214zm-.916 10.802l-1.05-.554-3.548-2.63-1.054-.555v-1.66l-.785.84-5.78-4.57-5.12-5.4V97.1l1.32-.69-1.84-2.08 2.37-.692 10.38 8.727.53.555 4.6 3.6v.696l-3.68-2.22v1.248l5.65 4.715v4.29l-1.97-2.08zM20.363 92.8l-1.575-1.663-1.444-.55v-.557l-2.104-.97-6.57-5.403-3.547-3.737.526-.558.52-1.106.65-.69-.92-1.942h1.71l1.58 1.526 1.97 1.11 6.7 5.4 1.44 1.11 1.05.97 4.6 3.876v2.082l-.53 1.663v3.18l-3.02-3.18-1.06-.55zm-10.115-2.492v-1.526l-4.6-2.908 1.313 2.77 3.29 1.664zm7.622-8.312l-6.177-5.4-1.97-2.08L6.57 72.86v-1.53h1.05l.525.553H9.46l2.76 2.08 3.02 2.214 4.47 3.743h1.182v-1.25l-5.125-3.602-6.57-7.06h.528L15.24 72.3l1.576.557v-.834l-7.62-6.23v-3.605L22.47 72.303h1.444v-1.107l-4.6-3.604-6.568-6.51-1.444-.69-.66-1.943-1.312-1.53 2.104-.69-1.184-2.63h.92l2.102 1.52 4.466 2.91 5.123 4.71 5.13 4.15v4.43l-1.44 1.52-1.58.55.52 1.1.53 1.66.53.97v2.21l-.52.55-1.05 2.08-.66.69 1.71 2.49-1.05 2.21-4.07-2.22-3.02-3.19zm-9.725 16.62v-.967h-1.05l1.05.96zM8.67 79.92h.527v-1.11H8.145l.526 1.11zm2.497 1.523h.526v-.555H10.64l.527.555zm9.724-23.546l-1.58-1.11-.52-.552-7.09-4.985v-1.39l2.11-.698V47.64l-.52-1.105h1.97l1.58 1.663 2.37 1.248 1.18 2.49h1.06l3.02 2.217.53.554 5.13 4.017v1.247l-1.58 1.67v3.05l-3.03-1.94-4.59-4.84zm-7.62 25.205h.53v-.552h-1.05l.53.552zM27.99 54.71l-2.5-2.213h-1.05v-2.634l-1.312.692L20.89 48.2v-1.11h-1.58l-1.44-1.52-.526-2.218-1.84 1.247-.79-2.78 1.576-1.66h.525v-2.07L30.35 49.03l2.76 2.907-.527 1.112.787 1.66-1.838.96v1.11l-.527.55-.654-1.53-2.36-1.11zM16.82 86.29h.788l-1.314-2.078H14.72v1.383l2.1.696zm15.767-36.98l-1.05-1.11-7.62-5.4-3.02-3.186-.53-1.11-2.1-.692-.918-1.938 1.96-1.11V32.69l-.53-1.11h1.57l3.02 3.182L26 36.425l7.093 5.818 4.333 4.572-3.02 3.325-.79-.83h-1.05zM18.79 55.125l1.05-.416h.524v-.56l-1.05-.55-.92 1.1.395.41zm2.102 44.05l1.05-.56-3.15-2.353v1.525l2.102 1.387zM19.314 89.06h.527v-.557l-.52.557zm3.156 1.525v-1.11h-1.58l-.527.553h1.054l1.05.557zm.39-9.144h.526l-.917-.97h-1.58l1.97.97zm.526-2.63h.528v-.55h-.528v.56zm.528-8.58h.524l-.524-.55v.56zm.524 38.09v.55l-.524-.55h.524zm.527 6.92h.522l1.055 1.12v.55h-.527l-1.05-1.1v-.55zM70.29 34.21h1.576l1.315-1.385 3.95-10.25.79-3.88 3.03-6.508V9.97l-4.99-3.6-8.15-2.22-4.99-1.66-1.71 1.107h-8.15l-5.12 1.105-9.07 3.188-3.15 3.324v.414h3.55l4.21 2.22L54 22.99l3.546 2.635 4.076 4.293-.526.552 5.518 1.107 3.678 2.63zm-32.058 2.772h.526l-.526-.56v.56zm29.036-6.512l-3.155-2.633 1.052-.56v-.556h-1.052l-.655.84-4.992-5.26-1.448.69-1.575-1.66-.393-1.52h-1.577l-4.073-3.6 1.58-.69-2.106-.69v-3.61l-1.97-1.1H42.83L44.802 9V7.2l2.102.69L47.3 9h2.1v1.664h1.58l4.464 3.74 1.575 1.105 2.49 2.63 6.83 4.98 1.84 1.94.79 1.66h1.57L72 29.78l-2.234 2.35-.524-.55-1.974-1.11zM43.75 178.122h1.05l-1.05-.552v.553zM49.4 13.298h1.05V12.19l-1.05 1.107zM52.422 161.5l.52.552h-.52l-.528-.553h.528zm6.7-147.65l-.525-.553.526-.556-2.63-.55v-.56l1.842-.96-1.317-.55-1.05-1.1-.657 1.52-2.89-2.07V7.9l2.1 1.11.53-.556.92-.555-.52-.97-1.31.69-1.7-2.36h3.55l6.7 5.4.53.96h.92v1.39l-2.49-1.39h-1.06v.56l2.37 2.63.66-1.52.53.55-.92 1.66H59.8l-.656-1.66zm13.663 161.084l-3.02-3.323-2.497-1.23-3.68-4.58v-2.77l-.92-.96-1.05-.55-1.053-1.1v2.23H58.6l-3.025-3.19 3.155-2.07 3.94 3.04 1.443 1.11 1.052 1.12 1.052.4 1.05 1.12 3.812 2.77h1.17l1.71 3.6 3.41 1.67v1.66l-3.02 1.66v-1.38l-1.58.83zM69.503 23.547l-.792-1.665 2.11-.69v-1.94h-1.05v1.525h-.79l-.79-1.524H65.7v-2.215l-.526-.557-.526.56H62.15l.523-.55h.92l.92-1.79 2.76.97-.527-1.25h1.05l1.972 2.08v1.94l1.575-.83 2.495 2.22v.42h-.52v.56h2.626V23l-1.576 1.522H72.79l-.92-.97h-2.36zm3.81-8.588h-.527l-.527.55h-1.45l-1.05-2.22-2.36-1.24-1.06-2.08-1.19.69v-1.1l-1.97-2.23h-.53v-.96l.66-.7-.92-1.94 5.77 2.08L71.33 9l.92 1.663 1.055.552.52.414 2.893 1.25.786 3.33-.916 1.93h-1.71l-1.57-1.67v-1.52zm-7.096-1.11h-1.052v-.56l1.052.55zm-1.052 151.39l.527-.56v-.55l-.527.55v.56zm8.15-157.35v-.56h2.626L77.39 9l.524 1.106 1.316 1.94-2.894-1.386-3.015-2.77z\"/><path fill=\"#A7D5A8\" d=\"M99.194 186.57l-1.974-2.076v-9.145l-.785-3.46.918-4.02-.786-8.18 1.05-9.7-1.182-4.71.785-4.17-.785-8.17 1.183-9.14-1.183-5.13.785-3.74-.653-8.59 1.05-9.56-1.182-4.57.785-4.29-.785-8.17 1.183-9.15-1.183-4.71.785-4.15-.653-8.45 1.05-9.7-1.182-4.58.785-4.29-.785-8.17 1.183-9.14-1.183-4.85.785-4.3V3.05l1.448-1.665 23.517-.83 3.155 1.66.918 2.91v9.14l.525 3.326-.525 2.63v20.37l.525 3.88-.525 2.5v20.5l.525 3.46-1.05 4.3 1.182 4.58h33.37l.658-19.53-.658-2.77.658-23.55-.658-3.32.658-23.13-.787-3.74 1.184-1.25 1.57-.55 3.29-1.4 20.364.83 2.364 1.67.92 2.63v177.15l-1.19 3.74h-5.385l-13.01.55-7.488-.56-1.97-2.07v-18.3l-.528-2.49.657-23.54-.657-3.32.66-24.8-1.05-1.1h-33.634v9.55l.525 3.33-.522 2.63v20.36l.525 3.88-.52 2.63v20.36l.53 3.6-.52 2.36-.65 6.24-4.46 1.25H113l-3.546-.55H99.19zm13.14-1.244l1.706-.832-2.627-.553-.395-.55h-2.103l-1.574-.56h-1.97v-1.65h-1.57l-1.44-.69v-3.6l.93-.55-1.44-2.08v-1.1h.92l4.21 3.74.92.56 2.89 2.22-.79 1.53 1.71-.84 4.47 4.16h7.09l.79-.97-1.06-4.16 1.97-3.04-.78-3.74v-14.97l-1.31-4.29 2.1-3.73-.78-3.74v-14.54l-1.05-4.71 1.7-3.74-.65-3.32v-10.8h15.37l8.15-.55 14.06.56 1.18 5.39v20.36l-.79 2.5.79 4.01v19.8l-.79 2.5.79 4.02v15.51l.79 1.67h19.58l3.02.42 1.05-.42v-3.32l.92-4.7-1.18-5.12.79-2.49V158.8l-.65-3.33.92-4.84-.92-5.95.66-2.64v-9.55l-.53-3.6.79-5.27-.92-5.815.66-2.5v-9.14l-.66-3.46 1.05-5.68-1.19-4.85.79-3.18v-9.7l-.53-3.462.79-5.4-.92-5.67.65-2.63v-9.7l-.65-3.19.92-4.98-.92-5.82.66-2.63v-9.7l-.66-3.47 1.05-5.4-1.05-5.12.66-2.63v-3.8l-.65-2.08-14.71-.69-9.6 1.107-.66.688.66 3.05v20.5l-.92 1.8.92 4.574v19.94l-.79 2.352.79 4.017v19.94l-.79.83-15.76.83-3.82-.69h-17.9l-.52-4.29-1.05-4.01 1.71-3.74-.65-3.46v-15.1l-1.05-4.02 1.7-3.73-.66-4.01V23.96l-1.45-3.045-.53 3.045h-1.05l-7.62-5.954-4.08-3.74-8.14-6.646v-.833h1.05l.53.55.4-1.658h2.62l4.08 2.07 4.07 3.32 1.44.97 6.17 4.84v2.22l1.05 1.1 2.23-3.32-.78-3.74-.53-9.14-1.05-1.11-5.52.55h-16.82L99.2 4.55v4.71l2.1.69 2.5 2.08 1.57 1.1 3.02 2.76 5.64 4.29.52.42 5.52 4.84.53 2.22 1.84 1.8-.92.97.65 2.07-1.31.69-3.55-2.77-.79-1.66-2.5-1.39v-.83l-2.1-.7v-.97H111l-.52-.42-1.05-.56-7.09-5.96-2.76-5.68.65-1.25-.66-.69-1.3 2.64 1.32 5.54h1.184l1.05 1.11 1.05.55.39.41 6.7 5.4 1.97 2.21 2.36 1.11L119.55 34l1.05.56.92 1.94-3.81-2.77.92 1.94 2.49 1.94v1.805l.53 1.105v2.08h-1.05l-3.02-3.185.79-1.67-2.624.83-1.705-1.8-2.89-2.35-.65-1.39-2.36-.83-2.23-2.49-1.05-.56v-1.5l.53-.55h-1.05l-.53.55h-.79l-.66-1.66-.52-.56-.53-.97-1.57-1.66L99.2 26v6.5l.784 2.35-1.58 5.13.79 3.735V63.7l-.79 2.63.79 4.295v19.81l-.79 2.77.79 3.734v19.81l-.79 2.63 1.313 7.06.53.55-1.05 1.1v15.52l-.79 2.63.79 4.29.52 3.87 2.1.97-.524 1.11-1.576-1.11-.53 3.74v10.81l-.79 2.63.79 4.29.525 6.51 1.05 1.11h1.05l-1.58-1.67h1.84l.79 1.66h4.47l4.99.83zM103.27 66.9v-.554l-1.974-1.11.527-1.106-1.31-1.942.784-.69v-.555l.527-.55 1.97 2.213 2.103 1.11 1.053 1.52v.557l-1.58-.833v.833l1.974 1.384.655-1.802 1.97 2.08v.554h.52v3.18h-2.11l-1.97-1.11-3.15-3.19zm13.268 106.788L102.61 161.91l-.79-1.653-1.31-1.944 1.445-1.385 1.706.832-.78-1.806h.4l4.08 3.19 1.58 1.112 1.58 1.654H110l-2.626-1.654v.827l3.678 2.773v-1.39h.395l.526.55 2.628 1.528.66 1.524-2.49-1.386 1.97 3.052h1.57l-.79-1.53h.53l2.1 1.53 1.05 1.657h.93l2.63 2.64v1.11l-.52.55-.52 1.66 1.05 1.53v1.53l-3.15-2.49-3.02-2.21zm-6.568-54.158l-1.577-1.104-2.497-2.217-2.102-.98-3.02-3.33v-.97h1.314l-1.444-4.85h1.444l4.862 4.29 4.466 3.74 3.68 3.19.92.55 2.1 2.21v.97l-1.577-.56-2.76-2.91-3.81-2.36-2.11-2.22h-.92v1.11l1.44 1.1 5.52 5.13-2.11 1.11-1.84-1.94zm5.518-72.02l-1.972-2.08-3.02-1.662-.526-.554-2.103-1.526-.524-.55-1.447-1.107-4.86-5.12.92-.97-1.182-1.94v-3.74l9.198 7.48 1.97 2.63h-.92l-3.153-3.19h-.92l.39 1.11 11.82 10.11 2.49 2.22-1.05 1.11.52 1.11v.97h-1.05l-2.5-2.63-2.1-1.66zm-14.715-8.033v-.834l2.497 1.39v1.105l-.394.55-.53-1.104-1.572-1.107zm15.242 18.42v-.692l1.312-1.39-1.838-1.796h-1.45l1.97 2.08-.66.68-2.37-1.25-1.05-.97-1.45-1.11-2.89-2.91-2.24-.83-4.6-4.85v-1.52l2.49 1.94v-2.62l2.1 1.11 3.02 3.18 4.07 3.32 2.1 2.08 1.44.83 5.12 4.44v.69l-1.18.56 1.18 2.63h-1.05l-1.97-2.08-2.1-1.53zm22.598 48.614l-2.233-1.52-1.974-1.1-1.048-1.11-3.023-1.52-2.626-2.77-5-3.18-3.55-3.74-1.58-2.08-3.03-1.66-2.63-2.63-2.1-.83-1.97-3.04-3.03-3.18-2.76-1.38-1.32-2.91v-1.11h1.05l.52.56h.93l-.93-.97v-1.67l2.5 2.08 3.02 2.22 9.72 8.03 3.54 2.63 4.07 3.88 1.57.98 4.6 3.74 4.99 3.88.52.42 2.11 1.66 3.54 3.19 1.45 1.11 2.1 2.22-3.03.97H145l-6.44-1.11zm-22.598.14l-9.328-7.2-5.912-6.23v-1.66h2.496l3.16 1.67.66 1.38 1.32.7.53.56 1.06.56.53.56v-1.81l-3.55-2.77v-.82h.4v-.55l-5.25-5.54-.79-2.49.53-1.66h1.05l3.02 2.77 1.05.55 6.04 4.29 2.76 1.39 1.32 2.91 2.5 2.63 1.05.56.52.56 9.72 8.03 1.98 1.11-.53.55h-6.05l-1.6-1.68-1.44-1.1-5.91-5.12-.79.84-1.97 1.38 8.28 7.07-.79.83.66 2.08-.52.42-4.59-3.18-1.57-1.53zM117.59 141l-.92-.965-.92 1.93h-.654l-2.104-1.38v-1.247l1.05-1.108-1.05-.97h-1.05l-.527 1.523-1.972-1.104v-2.64l-1.837-1.39.79 1.93-.66.69-1.31-.7-.528-1.1-2.367-1.25.79-.83h-1.44l-1.05-1.1v-1.67l-1.05-2.08 1.84-1.25 3.28 2.34 1.97 2.08 8.67 6.93 1.06.55 1.97 1.66 1.84 1.24.79 2.5v1.1l-1.57-1.66-3.02-2.08zm-16.293-.554l.527-.553v-1.11l-1.05-1.103v-.42h2.103l.918.97 2.103 1.107V141H108l3.417 2.63v.556h-.918l-.66 2.082h-1.45l-3.81-2.36-3.29-3.463zm4.6 33.797l-.526-1.104h-.78l-.79-1.53-1.45-.83v-3.47l-1.05-.56-.52-1.11 1.19-1.25 7.49 5.54 1.06 1.11 1.97.96.52.55 3.03 2.21 2.63 2.63 3.55 2.49v2.35l-.52.56-.52 1.11-1.58-.55h-1.44l-2.65-1.37-9.59-7.76zm11.694-39.752h-1.57l-3.02-3.18v-1.11l-1.97-.55-.52-.97-2.23-.83-.92-1.93H105l-1.71-2.63-1.312-.69-.66-1.52.525-.55.52-1.52-1.44-2.22h2.626l5.91 5.4 11.17 9.15V133l-.53.41v1.665l1.57 1.67.52 1.52-.52.557-3.29-2.495-.79-1.8zm-.52 30.06l-1.97-2.07-4.6-3.74-5.12-5.4-2.49-1.38v-1.39l-1.84-2.76 1.84-1.94 1.97 2.08h-1.05v1.11l3.42 2.36.79-.97 1.97.7v1.1l-.52.56v.83l1.71-.97 2.89 2.22 3.03 1.94v.83l-1.84.56.79.97 2.1 1.11v-1.8l2.1 1.11 1.45 2.91v.55l.53.98v3.33h-1.05l-1.97-1.66-2.1-1.11zm1.05-47.23l-4.07-3.18-2.62-2.76-1.44-.97-.53-.55-1.05-.55-1.05-1.1h-.65l-4.86-3.88v-.96l.52-.55v-1.52h.93l1.05 1.11h1.05v-1.11l-3.02-1.66v-2.08l7.1 5.27 1.06 1.11 10.25 8.45-.92 1.11-3.81-2.91v1.38l3.15 2.22 2.5 2.63-.66 1.53 1.19 1.24v.84l-3.02-1.93-1.06-1.11zm-1.58-50.41l-2.62-.69-2.89-3.04-1.7-.97-1.05-2.07-3.42-1.8-1.05-1.1-1.71-.55.79-2.08.65-.69-.65-1.52v-1.11l3.55 3.88h.53l.66 2.77 1.31 1.52H110v-1.11l1.444.56 1.054 2.07-.79.83 1.84 1.94 1.97.97 1.578 1.11h1.05l-2.1-2.08v-.83l3.15 1.52v1.38h-.52l-.526.56.524 1.11.526 1.52.92.55-.66.7-1.705-.83-1.187-2.49zm-11.69 56.93h3.03l-.52-1.1-2.36-1.8-1.05 1.11.92 1.81zm-.52-69.25h.53l-.52-.55v.55zm0 1.53l.53-.56h-.52v.56zm0 58.03h.53v-.55l-.52.56zm2.11-79.5l-1.05-1.11v1.11h1.06zm0 114.41l.53.56h-.52l-.52-.56h.53zm6.56-20.23v-.7l-3.02-3.32h-.52v1.67l1.06.56.92 1.11 1.58.7zm6.18-47.92l-2.1-2.22-1.05-.55-1.44-2.08-2.36-.83-1.97-2.08.79-1.38 1.97.55.53.97h1.97l-1.97-2.63h.53l2.5 2.08 2.11 1.53v.7h-1.58l4.6 4.85v1.52h-1.05l-.52-.41h-.92zm-8.67-20.5h.92l-.39-.55h-.52v.56zm1.97-53.61v-.56l-1.06-1.66h2.1l4.6 1.67 2.37.56.66 2.08 1.19 1.8-.65 1.39-2.1 1.11h.53l-3.02-1.53-4.6-4.84zm5.12 147.65l-2.63-2.21-1.97-2.63-1.57-.83v-1.94l1.58.56 1.32-1.38.79.83-.53.56v.83l1.84-.96 3.15 3.33h-1.44l4.6 4.85-1.31.7 1.19 2.35-3.42-2.5-1.57-1.52zm-5.13-84.9l.52.56h-.52l-.52-.55h.53zm0 85.87v-.55h-.53l.53.55zm.52-116.48l.53.56H113l-.52-.56h.52zm4.08-4.84l.53-.55-1.05-.41-3.02-2.22V32l1.58 1.522 1.97.557zm0 90.72l-1.05-.41-.92-1.11h-.53l-1.05-1.11.53-.55.66.69 1.32-.69.53 1.12 1.06.55 1.58 1.11.65-.82-1.45-1.67 1.06-1.1 2.76 3.6h-2.1l.65 1.94-1.18 1.24-2.49-1.8v-.97zm-2.5-84.76l1.45 1.66h-.52l-1.44-1.66h.53zm-.52 56.93h.53l-.52-.55v.55zm2.24 47.23l.79-1.66 3.02 1.94v.84h-1.45l-1.58-1.11h-.79zm.26 34.35h.53l-.52-.56v.56zm3.55-103.05v.56h-.53l-.39-.55h.92zm.52-8.58h-1.05l.53-.55.52.55zm.53 36.43l-1.05.55h-.53l1.06-.55h.53zm.26 47.79l.79 1.66h-.52l-1.57-1.66h1.31zm-.26-46.68v.55h-.53v-.55h.53zm0 41.84v.55h-.53v-.55h.53zm1.58-40.72l.53.55h-.52l-.52-.55h.53zm24.44-2.77l-.52-.41-2.1-1.11-1.45-1.66-1.57-.55-1.97-2.08-2.62-1.66-6.04-5.4-6.17-3.18V85.2h2.62l.66-1.525 4.6 1.8.79.69 1.05.56 1.45 1.658 1.05.557 2.63 2.08 3.42 2.492 1.58 3.464 1.58 1.52 1.58 1.104.4.552 1.05.556 8.01 6.374h-5.39l-2.1-2.08-2.5-2.22zm-13.79-5.27V97l-1.97-1.66v1.11l1.97 1.106zm8.15-9.14l-2.5-2.08v-1.67l-.65-1.39 2.1.84.52 1.11h1.05l3.03 3.19h.52l5.12 4.02v1.8h-1.57l-4.07-2.08-3.55-3.74zm1.57 17.18v-.6h-.52l.53.56zm30.49.56l-1.71-1.94.79-.83h-1.57v-2.08h-2.5l-1.6-1.68h-1.05l-1.97-2.08-.52-1.11-1.83-.97-3.81-3.32V91l1.05-.552h-3.02v-.56l1.18-1.243-2.49.833-1.18-2.354-1.57-.972-1.05-.967h3.55l1.97 2.078 4.07 2.216 2.1 2.07 3.55 3.04.52 1.25 5.91 3.6 2.76 2.91 1.05 1.52h1.18l6.96 5.67v5.12h-.53l-6.18-6.51-4.07-2.09zm9.2 16.62l-1.05-.56-.53-1.11-3.02-1.53-3.54-3.32-.53-.97h-1.05l-1.45-1.66-3.02-2.63-1.05-1.11-3.02-2.22v-.97l-.53-.55-1.05.56-.52-.56-1.57-1.11-.52-1.1-1.45-.55-3.54-3.74-1.58-3.18-.53-.55h1.06l1.57 1.66 3.03.97 3.02 3.33 4.08 2.08 5.12 5.4 1.58 1.11 1.98 1.53 6.17 4.3 5.52 5.95v1.67h-2.5l-1.05-1.1zm-1.05-20.36l-.92-.56-.52-.56-1.57-.83v-.83l-.53-1.11-1.44.83-1.05-2.35-2.36-1.8-1.7-2.49h-1.57l-2.63-2.91.79-1.8-1.71.97-.52-.55h-.52v-1.66L164 87.84l-.92-4.297h.92l8.67 6.37 1.977 2.22 8.8 6.786.92 1.8 1.97 2.08h-1.443l-.65 1.25-2.5-1.66zm0 30.61l-2.5-2.22-1.05-1.66-2.23-1.53-.78-1.66-2.76-1.38-7.49-6.37v-.83l-1.18-2.49 1.19-.69.52-1.11 3.81 3.33 1.85.97.79-.83 2.5 3.88 3.29 2.36 3.15 3.18 2.89.84.66 1.38v2.08l.53 2.22-.65 1.8-1.97-1.24h-.53zm1.58-39.2l-1.57-1.11h-.52l-.92-1.11-1.58-.83-1.71-2.76.79-.83-2.1-1.25v1.39h-.52l-.53-.55-1.58-1.11-1.44-1.52-1.7-.55.92-2.22h-.8l-1.05.56-.92-.97-2.1-1.52V77.1L164 75l.53-.55h.93l.53.552 4.6 3.74.53 1.11 1.05.55 7.1 5.26 1.58 1.67 4.08 2.91v1.94l-.66.69.79 1.94h-1.71v-.97zm-5.12 48.76l-1.05-.56-7.62-6.37-1.18-2.07 4.07 2.21 1.05-1.1-4.47-2.22h-.92v1.39l-3.16-2.35v-1.25l1.06-.96-1.98-2.77 1.45-.55.53-1.1 2.1 2.21 2.5 1.39v-1.25l-6.04-4.85V121l4.73 3.19 2.89 2.91 3.02 2.08 10.11 9.004v1.24h-.39l-.53-.55-2.1-1.104v.55l1.58 1.66.53 2.07 1.97 2.22-2.5 1.11.52.55v1.66l-6.17-4.98zm2.1 29.5h-1.05l-3.02-3.18-3.15-2.08-.92-1.1-2.1-1.52v-1.12l-1.05.41-3.54-3.74v-.83l3.54 2.22v-1.38l-1.44-1.52-3.55-2.91v-.83l.53-.54.53-1.25 4.47 3.32 2.1 2.22 6.04 4.3 2.63 2.64 6.04 4.57v2.91l-1.31 1.52 1.06 2.23h-1.71l-4.07-4.3zm-3.15-98.76l-5.52-5.26-3.02-2.22-3.68-3.74 1.05-.55v-2.08l-.66-2.21h1.32l6.17 4.85h1.84l-7.75-6.37-2.63-3.6.66-.83v-2.1l6.18 3.75h1.05L166.51 47h-1.18l-.79-2.63.66-1.39-.65-1.246v-1.66H166l2.1 2.07 1.97 1.11 6.57 5.4h2.63l-1.577-1.66-6.045-5.27-3.02-3.33-1.58-2.08-1.18.56-1.052-3.33h1.71l1.05.56h1.05l-3.15-3.18V29.8l2.1 1.66 3.02 2.075 1.05 1.11 3.023 1.66 3.02 3.18 2.63 2.217.92.97 3.28 1.8.79 2.498v2.22l1.05 2.08v1.107h-1.7l-4.07-3.19h-1.31l1.05 2.08 4.99 5.408-1.18.69 1.71 2.49-1.98 2.216-.53-1.11-2.1-2.07h-1.98l-1.58-1.66-1.45-.55v.55l2.5 2.21.52.42 7.62 7.06-3.15 3.32.65 1.52v6.37h-1.05l-.53-.55-5.65-4.29zm-.39 76.87l-1.05-.55v-1.11l-2.5-.83-.53-1.38h-1.05l-1.05-.97-4.73-3.33-1.32-3.73.66-.69-.92-1.81 1.97-1.1 14.98 12.19.52.56 3.55 2.76v4.29l-.92 1.52h-1.05l-6.18-4.84-.4-.97zm4.95-110.7l-1.97-1.11-4.59-4.85v-.97h-.52l-.52.97-.66-1.94.65-.69h1.57l-3.55-3.74h-1.05v.56l1.05 1.11v2.91l-7.23-5.68v-1.11l2.1-.41-1.05-1.66v-.56h-1.58l.52-2.63 1.57 1.53 1.57.97 5.52 4.44 7.62 5.4 4.72 4.99-.66 2.49-.52 3.05-2.5-1.94-.53-1.11zM164.5 169.13v-1.38h1.45l4.07 3.324v-1.67l-2.5-2.074-1.573-.834v-3.73l5.125 4.566 1.58 1.53 3.03 2.22 1.05.97.92.56 1.05 1.11 7.1 5.27v1.66h-3.02v.55l1.58 1.66h-2.63l-2.89-.96-14.32-12.74zm0 3.464h.395l1.577 1.66 2.76 2.084h-1.71l-3.02-2.36v-1.384zm16.95-89.06l-4.336-3.74v-.557l-1.446.55v-.56l-2.76-.7-1.05-1.25.917-.98-1.18-1.38-2.1-1.11v1.11l1.05 1.1h-.79l-2.76-2.08-2.102-2.77v-2.21l.53-.55v-2.35l2.63 1.39 4.6 3.74 3.55 2.63.92 1.11 8.41 6.92.79 1.66h-1.97v1.1l1.45 1.52-2.23.83-2.1-3.46zm-5.52 75.9l.788-.694.395-1.107-1.97 1.106-2.1-2.21-3.02-2.08-.52-1.1-1.97-1.11-1.57-1.66v-2.08l-1.05-1.1v-3.19h2.37l10.38 9.14 4.07 2.78v1.52h1.58l1.97 2.08v1.66l1.05 1.66-1.05.98 1.05 2.21-1.44.56-1.05-1.1-7.88-6.24zm-7.357 23.964l-2.365-2.494-.92-2.77.658-.694 1.05 1.11 1.05.552 2.5 2.08 1.05-.976-1.05-1.656h2.23l6.306 5.4h-4.47l-1.98-.554h-4.07zm11.16-155.69V26.6l.527-.553h-3.154l-1.446-1.527-1.05-2.213h-1.844l-1.18-2.635-1.05-1.11v1.105h-.527l-1.05-1.11V18h-1.32l-.65-2.08-1.57-1.108v-1.66l1.05-.554v-.554h-.52v-1.94l2.63 1.942 1.45 1.66 1.06.552 14.19 11.64v2.63l-3.16 1.662-2.36-2.49zM168.04 7.758l-1.05-.42-1.05-1.104 1.443-.83 4.73 1.665v.96l-2.62 1.38h.53l-1.05-.55-.92-1.11zm-2.1 174.514l1.05 1.12h-1.05v-1.11zm1.574-31.15h.526v-.55l-.526.56zm1.052-126.18h.394l-.394-.41h-.526l.526.42zm3.022 21.89v-1.11l-3.548-2.49v1.11l3.548 2.5zm-1.05-10.52h.527l-.527-.55h-.526l.526.55zm2.496 137.13v-1.38l-.92-.96h-1.576v.97l2.496 1.38zM183.28 21.75l-3.548-3.737-2.76-1.385-3.413-4.57v-.973l-.53-.553v1.105h-.92V9.28l2.5.694.52 1.105h2.75l2.89 1.94v.69l2.23 1.66 1.84 4.29 1.71 1.8-.79.83-.92-.56h-1.58zm-10.248 32.83h.527v-1.11h-1.45l.92 1.11zm-.92 127.147h.524v-.547h-.524v.55zm.92-143.352h.527l-.53-.555v.557zm.528 114.96h1.05l-1.05-.553h-.527l.527.55zm1.703 12.19L174.61 164l-1.577-.693v.97l2.23 1.246zm1.183-114.544l.66-.69-3.024-2.21h-.522l2.886 2.91zM174.082 105h.527l-.53-.553h-.52l.52.55zm3.023 34.35l-1.446-1.66h-1.58l.79 1.66h2.23zm-.396 27.98h.92l-1.45-1.66h-1.05l1.57 1.66zm0-146.68v-.418h-.53l.52.42zm0 11.91h.39V32h-.4v.555zm2.49 10.94v-1.39l-2.5-1.245v1.246l2.49 1.39zm-1.57-19.54v-1.106h-.53v.554l.52.552zm0 101.942h1.05l-1.05-1.108h-.52l.53 1.108zm-.53 8.03h.52l-.53-.553v.55zm.52 42.942h.53l-.52-.547v.547zm5.13-166.35l-1.97-1.104-1.05-1.11-1.05-.553-.53-.97h4.6l1.05.97 1.05 3.322v1.52l-1.58-.98-.53-1.11zm-1.05 25.213v-.557l-2.23-1.662h-.79l1.05 1.11 1.97 1.11zm-3.02 105.818h.52V141l-.53.555zm2.49-113.853l1.57-.554v-1.664h-.53l-.53 1.11-.53.554v.554zm2.62 9.696l-1.05-1.108h-.53v1.108h1.57zm-1.58 106.788h.52v-.555l-.53.56zm1.05-113.85h1.05v1.106h-1.05v-1.107zm1.05 17.174v-.556l-.53-.554v.554l.53.556z\"/><path fill=\"#F9D472\" d=\"M201.673 183.94v-3.323l2.496-7.757.52-5.54.52-2.217.52-2.635 1.05-2.77.52-4.298 1.44-6.37.52-4.292 1.58-3.738.52-4.848.52-2.22.39-2.625 1.57-6.514.52-3.74 1.97-6.925 1.58-11.77 2.1-4.295V92.66l1.97-4.294v-3.184l2.1-8.587.39-3.325 2.1-9.142.53-3.737 1.05-2.63.39-3.19 1.05-3.74 1.05-8.17 2.49-6.65v-6.23l1.58-3.18 1.97-11.22 1.05-3.74 1.18-6.78 1.18-2.49 2.8-1.54h22.33l2.49 2.63 1.18 7.07v2.08l1.84 4.02 2.23 13.72 1.97 7.06.52 4.29 1.05 3.75 1.18 7.48 1.84 5.96.52 4.3.52 2.63.53 4.29 2.49 10.25v2.91l1.71 4.58 2.89 14.96 1.05 4.3 1.97 10.25 1.05 3.74.52 4.29 1.97 5 .92 9.56 3.28 10.67-.66 2.77 2.1 6.37 1.58 7.06.91 3.74 1.58 10.11.65 1.94-.92 2.91-3.28 1.67h-14.8l-3.55-.56h-4.07l-1.71-1.79-1.84-8.44-1.05-2.09v-4.85l-2.5-7.75-.79-9.29-2.23-7.06-1.05-7.62-1.58-4.72h-24.7l-1.19 4.3-1.31 8.86-1.84 5.96-.92 7.62-1.58 3.32-.66 7.62-1.84 5.68-1.71 9-3.42 1.8H210.8l-7.1-1.11-2.1-2.07zm8.145 1.386l2.496-.832h14.847l1.58-1.665 1.05-8.32 2.5-7.07v-2.91h-1.05l-2.63-1.53-.92-1.11-1.05-.55-1.05-1.11-1.97-1.53-3.15-3.33-1.44-.97-.52-.55-1.05-.56-1.05-1.11-.92-.55-1.57-1.53V149l-1.18-1.94 2.63-2.91 12.87 10.665 1.45 1.103 2.76 2.92-1.97 3.46 1.31.69 1.97-4.29v-2.775h-1.97l-3.55-2.63-.52-.55-1.58-1.106-1.57-1.53-6.04-4.294-4.33-4.57 1.31-1.384v-2.22h1.19l4.86 4.28 3.55 2.22 1.58 1.66 3.03.96 3.55 3.74-.53 1.11 1.06 1.65.52 1.25 1.06-4.99 1.45-6.51 1.05-5.82.52-2.22.53-4.85 9.85.55 5.25-.56 5.91.83 2.37-.83h3.02l1.97.69 2.24 7.9.39 1.66.53 5.82 1.58 4.02 1.84.96.92-.97-3.28-3.47h1.57l.53 1.11h.4v-1.11l.78-1.52.79 2.62h1.05l1.05 1.11 3.02 2.64.52.54 2.5 2.22.52.42 12.09 9.84.66 3.6 1.05 1.11v1.7h-2.11l-1.97-1.67v-1.11l.4-.55-1.44-.42-1.05.41-1.05-.98h-.52l-.92-2.22-2.1-1.11-1.71-2.91-.79.83h-1.05l-1.97-2.22-.79-1.52h-1.84l-2.24-2.5.79-.7v-.55l-2.5 1.25-1.18-2.36-1.45-1.66v2.77l1.05 3.74.92 7.48 1.58 4.85.66 4.71.92 2.77 1.7 6.51h1.84l-1.57-1.67.53-.55 1.97 2.22-.39.55 3.29.83 3.28-.84h14.19V179l-1.84-5.818-2.37-14.69-3.02-7.34.66-1.11v-2.77l-.79-2.355-.79-4.01-1.97-8.59V129l-1.57-4.713-.52-4.293-.39-1.657-1.05-3.745-1.58-4.85v-3.74l-1.97-7.62-2.1-11.77-1.45-4.293-.92-6.79-2.23-7.2-.53-3.74-.79-2.63-2.49-.83-.78.83 1.05 1.11v.55l-1.97-1.11-1.57-1.66h1.57V59.8L258.8 48.87v.83l.527.55v.98l-2.1-2.08-1.45-1.1-6.7-5.26v-2.77l-.92.55h-1.18l.66-2.216.53-.556-1.05-.41h-2.49l-.65.55-5.78-4.57.79-.83v-1.67l1.58-.83 3.55 2.77 2.497 1.245 4.07 4.294 2.5 1.67 1.05 1.11 1.05.55 5.52 4.44 1.57.83 1.05 1.11 4.6 3.19 3.02 3.325 3.94 2.635.656 2.217 1.05 2.08v-4.86L274 44.872l-1.45-4.844v-4.85l-1.71-4.29-4.99-2.63-10.11-8.036-4.6-4.843-1.05-.55-6.57-5.13V7.34l1.45-.55.53-.555h1.44l7.23 5.82.52.56 4.07 3.32 1.054.97 5.772 4.44 1.844 3.6 1.05 1.66v1.11l1.84 1.938-1.31-8.447v-4.02l-1.974-5.12-1.05-7.21-2.365-1.11-20.49-.822-1.84 1.796-1.58 9.144-2.23 6.926-.65 6.92-1.44 3.185-.53 5.405-4.07 18.285-.53 5.265-1.05 2.213-1.31 5.957-.66 5.264-.53 1.66-2.51 10.665v4.85l-2.1 2.21v6.23l-2.49 7.2-1.05 8.03-1.05 4.3-.52 3.18-.92 2.77-.52 3.18-.52 2.08-.52 4.29-1.05 2.78-.52 3.74-1.44 4.85-.66 5.68-1.44 3.87-.53 5.95-.79 1.81-.65 3.59-1.05 2.64-.52 7.34-2.23 5.68 1.05 2.35 5.26 1.11zm-1.576-2.497l-2.495-2.64 1.707-.69-1.18-2.63h2.495v-.97l-.93-2.22v-1.11h1.57l-.79-2.49 1.18-1.25 5.12 3.74 4.07 3.74 4.59 3.32 3.02 3.18-4.07.69-5.13-1.26-6.05-4.84h-1.84l2.36 3.18 2.49 2.21v.7l-4.07-.7h-2.1zm9.723-9.7l-1.972-2.08.395-.56-.395-.55-1.05 1.11-3.02-3.33-1.052-.42-1.05-2.22v-4.3l.53-.55.53-1.11 2.5 2.77 6.17 4.85.53.55 4.47 3.18 2.63 2.63 1.05.55v2.64l.66 1.38-3.68 1.52-4.21-4.42-3.02-1.66zm4.07-6.94l.53-.55v-.56l-1.053.55-1.972-1.12-.524-.56-2.104-1.53-1.97-2.21-2.364-1.25-1.446-2.91 2.235-.7v-2.91l1.575.83 9.197 7.48 3.02 2.21 3.28 3.33-1.58 2.5 1.05 2.07-1.58.69-2.24-1.11-4.08-4.29zm-8.667-8.03h.524v-.56l-.524.55zm14.975-13.57l-2.757-1.53h-1.05l-1.055-2.5-2.49-1.25-3.94-4.16-.92-3.87.92-1.94 3.02 1.94 2.5 2.07 3.02 2.21 3.02 2.63 3.16 1.66 1.98 2.07v1.12l1.44 2.9-1.44 1.39.92 1.8-2.1-1.11-4.2-3.46zm-2.757-11.64l-3.55-3.88-2.495-1.26-.52-1.94-.52-1.11v-3.74h1.58l1.97 1.67 3.02 2.07.53.55 6.18 4.85 4.07 4.29v1.66l-.52 1.11 1.31 1.94-1.31.69h-2.1l-1.44-1.67-6.17-5.26zm-6.045 27.29h.92l-.92-.56h-.52l.53.56zm7.63-36.99l-4.07-2.22-3.02-3.19v-1.11l1.58-1.8-.65-1.94h1.32l11.44 9.7 4.6 3.18 2.36 2.49-1.31.69-3.28 2.35-3.41-2.36-5.52-5.82zm17.74 5.39l-1.71-.69-.78-1.52h-1.05l-1.97-2.08-.52-1.11-1.57-.55-3.02-2.5-1.57-.7v-2.21l-1.71.97-2.36-3.6h-.92l-.52-1.11-1.05-.56v-.56l-.52-1.52-.53.41h-1.97l-1.31-2.77 1.18-3.61 2.63.69 4.6 4.16 4.07 3.19.52.55L250.56 127v1.66l-1.057.972h-3.547v-1.527l-1.05.55zm8.67-1.66l-1.44-1.11-1.05-1.11-1.05-.42-.53-.55-2.49-2.22-1.05-1.11-1.05-.42-.4-1.11-1.05-.55-1.57-1.67-1.44-.55-.52-.97h-1.05l-7.62-6.51-2.63-2.64-1.44-.55-3.02-3.19-1.45-3.05 1.45-.83.4-.41 1.84-.7 5.39 4.99 1.45.97 6.7 5.4 1.45 1.11 12.73 10.68 1.58 1.1 3.02 2.77 5.52 4.29h-2.5l-4.2 1.39-3.94-3.05zm35.74 20.36l-2.1-1.53-1.97-2.22-3.54-2.63-8.14-7.07-1.57-.97-2.49-2.22-2.1-1.11-1.05-2.08-3.94-2.08-8.8-8.17-1.44-1.11-4.08-3.19-1.58-1.11-1.05-.96-1.97-1.67-7.62-6.93-1.57-1.11-1.97-1.66-7.22-4.99V92.1l1.58-.554-1.32-2.08 1.84-.97 10.1 9.004 5.12 3.46.92 3.183 6.57 2.773 1.71 1.8 10.64 9.14 1.58.56 4.6 3.73 1.97 2.224h3.16l-2.1-2.22-1.06-.55-1.97-2.08-16.29-13.434.52-.554h2.49l4.07 2.077.92.97.79-2.5 1.84.97 1.05 1.1 1.05.55 5.38 4.57 1.71.82 1.05 1.11 6.57 5.26 1.05 1.11 1.45 1.11 2.1 1.65 1.05.41.92 1.11 1.57 1.1 1.05 1.65 1.44 1.53-1.97.56 2.37 2.49.79 4.72-1.58-.7-5.65-4.3-1.58-1.11-2.5-2.76h-1.05v1.1l4.07 4.29 2.1.83 5.91 4.56h-1.83l3.02 3.74.53 2.63 1.05 1.1v1.11l.92 2.08h-2.5l-3.02-3.18zm-50.98-53.18l-1.05-.97-1.44-.56-1.57-1.66-4.46-3.05-2.63-3.47v-.97l.52-.56V79.2h.92l3.68 3.184v.97l1.97.693 2.1 2.08 1.97 1.11 1.05 1.105 4.08 2.77v4.71l-1.18 1.246-2.89-2.355-1.05-.558zm-11.16 28.25l1.45-.83-.92-.56-.52.55v.82zm8.15-41.13h-.92l-5.13-4.02-.66-3.19 1.58-.83.53-2.63 2.5 2.63 4.47 3.6.66 1.24-.52.55h-.52v1.11l4.08 4.29 3.15 2.07v2.22h-1.05l-7.22-5.12-.92-1.94zM244 79.2l.52-.553-.92-2.63-.92 1.94-1.84-.97-1.71-1.8-6.432-4.013-.92-.554V68l-1.05-2.22v-1.52l3.545 3.047v-1.52l-2.496-2.63v-1.11l.917-1.11.526-1.524.653-.83-.658-1.39h.526l1.05 1.105 1.58 1.11 3.42 2.635h1.05l-3.55-3.74-3.02-1.658v-1.52l-.92-1.8 4.86 2.49-.91.835v.553h2.1v1.106l6.05 6.37-.52 1.11.53.55 1.71-.97 1.45 1.53v.55h-2.63l3.02 3.18v1.66l-.92.97-1.05-.97-1.05-.55-1.05-1.67h-1.44l-1.04-1.12-.79-1.53h-1.7l-1.05-1.11-1.57-1.11-1.97-1.52v.42l1.45 2.21 1.58 1.1 2.1 2.07h-1.05l-.52-.55-.52.55v1.11l1.58 1.66h.92l.53.97 5.65 5.4-.52.55-.52 1.66-1.05-1.11-.92-.56zm4.07-17.17l-2.1-1.66-1.45-.977-3.15-3.32-1.97-1.527-3.02-2.77-1.58-.975 1.7-.96 1.84 1.94 4.6 3.32h.53l-1.97-2.62-6.7-5.12v-1.94h1.58l5.52 4.85 4.072 3.19-.79.83 2.365 2.36 1.05 1.66.394.56 1.05 2.08 2.63 2.22-1.97.55-1.7-1.66h-.92zM235.32 68h.52l-.527-.555h-.52l.53.55zm35.07-1.11l-5.128-4.29v-1.1h-1.447l-2.63-2.08-3.547-2.767-.92-1.112-2.11-.96h-1.05l10.77 9.28v1.53l-8.67-7.61-3.02-1.66-1.58-1.52-8.278-7.62h1.18l3.28 2.08-.79-1.52-5.52-4.01-1.58.83-1.05-1.66 1.05-.55-2.76-2.9 1.572-1.66 2.63 1.95 5.123 5.4 6.172 4.29 4.99 4.29 1.574 1.11 2.5 2.08 1.58.83 1.57 2.35.79-.69 2.24 2.36h1.58l.92 2.22L273 65.8l3.55 3.74v2.91l-6.17-5.538zM240.04 80.6l-1.317-2.63 7.228 5.68v.97h-1.05l-2.5-2.77-2.36-1.25zm28.9-32.547h-1.575l-1.05-1.107v-.55l-1.052-2.078-3.02-.554-.525-1.11-2.36-1.25-1.18-2.5h-1.448v-2.07h-1.577l-2.1-1.108h-.394l-.53-.558.92-1.107.52.55V33.5l-1.45-.97-.53.554v.415l-.53.55-1.05-.97v-.55h-.79l-.79-2.36-1.45.69-.52-1.11-1.05-.56v-2.63h-.92l-.53 1.1h-1.45l-1.71-2.77.52-.97.65-2.49 5.52 4.01 1.97 2.22 1.58 1.1 1.58 1.53h.78l5.78 5.26v.69h1.31l3.81 2.63 3.02 3.18 2.1 1.11.39 1.1 1.05 1.11v2.08L273 49.7l-1.05 1.52-3.02-1.52v-1.67zm-2.1-10.664l-1.054-.56-1.966-2.22-1.05-.56-1.58-.97-1.442-.83v-1.1l-3.55-1.94-1.05-.97V26.3l-1.577.83-.52-1.664-.92.55-.52-1.11-2.1-.97-1.31-2.08-1.7-.69v-1.52h-1.97l-1.05-1.107V18h.53v-.554l-1.05-1.107v-1.52l-.53-.56V12.6h1.05l10.78 8.724 1.97 2.08 1.97 1.11 1.58 1.53v1.105h1.44l3.16 2.63 1.45 1.1 3.16 3.19v2.21l1.44 1.52-.92 2.22-1.71-.98-.92-1.66zM242.4 71.75h1.053l2.496 2.63h-1.05l-2.5-2.63zm.527 51.52h.526l-.526-.55v.55zm1.972-21.465v-2.77l2.1-2.632.52-5.402 2.49-11.77 1.05-7.89 2.49-6.64h.52l1.05 4.3.52 5.41 1.44 4.85.52 4.3 1.05 3.74v3.88l2.49 7.21v6.1h-12.21l-3.42-.83-.66-1.79zm3.67-38.643l1.44 2.074h-1.05l-2.76-2.908 2.36.834zm10.11 39.196V97.51l-2.37-7.76-.66-4.567-.53-2.218-.66-4.985-1.45-3.74L250 89.476l-1.05 3.184v5.126l-1.974 2.908v1.663h11.696zm-.53-89.75l-4.6-3.19-3.55-3.74 2.63-.556.52-.688 3.81 1.108.65-1.525 1.05.552 3.68.83 2.5 3.74v.83h-1.58l.52 2.08 1.44 1.66v1.1l.52 1.1v3.19h-1.44l-6.18-6.51zm-7.62 1.104h.52l-.52-.554v.554zm1.57 8.59l-1.57-1.663v1.66h1.57zm-1.05 37.534l1.05 1.105h-.52l-1.05-1.1h.52zm.53-2.63h.52v1.105h-.53l-.53-.55.52-.55zm.52-3.742h.53l-.53-.554v.554zm3.02 9.14v1.11h-.53l-1.05-1.11h1.57zm1.58 2.08h.92l1.05 1.108V66.9l-1.97-2.217zm20.89 23.683h1.44v-.55l-.53-.557v-1.11l-1.45-.556-2.63-1.52v.554l2.62 2.632v1.244l-7.22-6.092h2.1l-1.05-1.524-1.45-.554-1.06.554-2.1-2.217 1.57-.55v-.55l-1.05-.55-1.58-.97-1.97-1.1-.53-.55h-.53v.56l2.63 2.63h-.66l-4.73-3.6-1.05-2.21h.79v-.56l-2.1-.69V67.2l3.15 2.354.52.557 15.77 12.88 3.55 3.74v1.66l1.58 2.63-.79.83-3.29-3.47zm-14.84-18.282l-1.06-1.662-1.45-.415-1.05-1.108 1.18-1.248 2.62.97 4.86 5.128-.52.552 2.1 2.63h-.53l-4.6-3.182-1.57-1.67zm-3.55 10.25l.53-.55 1.05.55v1.522l-.53.556-1.05-.556v-1.522zm1.97-7.064l-1.44-1.52v1.52h1.44zm.52-64.4h.52l-1.44-1.53h-.53v.42l1.44 1.11zm7.75 95.02v-.83l3.02 1.94 1.05.56 1.97 2.08h1.58l-1.05-1.52-1.05-.55-.53-.55-.92-.55.39-.55-1.84-.55-.92-2.08h-1.05l-2.76-2.21-1.05-.97-1.05-.55-.92-1.66v-1.7l-1.71.97-1.45-1.38-.39-1.66.92-2.22 1.05 2.22 7.61 5.4 5.65 4.85 1.58.97.92 1.11 1.05.55 2.49 2.64 2.1 1.11 1.58 3.18-.53 1.11-3.94-2.07-.79 2.36-7.88-5.96-3.16-3.46zm9.59-4.84l-2.5-2.07-4.6-3.18-2.5-2.77-2.11-1.11-2.5-2.63-.53-1.66-3.41-2.9 2.1-1.11 9.99 8.3.53 1.11 1.97 1.11 7.35 5.96-.79 1.66 2.1 1.53-1.05 1.11-2.5-2.21-1.58-1.1zm-15.77-59.56l-2.11-1.11v1.11h2.1zm.13 59h.92l.52.56 2.49 2.22.52 1.11h-1.05l-1.58-.83-1.84-3.05zm18.26 22.58l-3.15-3.18-6.04-4.29-4.6-4.84h-1.18l-1.44-2.08-1.44-1.66v-2.22h1.96l1.31 2.77 2.37 1.53 4.07 3.31 3.02 2.08 10.51 8.87.65 1.94-1.05 2.07v-.55l-1.97-2.07-3.02-1.67zm-16.81-55.82h1.44l3.15 3.19V69l-3.16-2.08-1.45-1.667zm.39 25.22h-.39v-.56l.39.56zm.52.55h1.05l2.63 2.22v.55l-2.1-1.11-1.58-1.66zm4.07 24.94v-.7l-1.97-2.21h-1.05l.92 1.8 2.1 1.11zm-1.97-58.17l.53.55h-.53l-.53-.55h.52zm1.58 14.55l1.44 1.52h-1.05l-1.45-1.52h1.05zm2.89 4.99l-2.5-1.25h2.63l1.45-1.66-.93-2.08-1.05-.55-1.58-1.66v-.56l2.36.84 4.86 5.13v.83l-3.02-1.52-.65.69 1.05 1.11v.97l-1.97-.97-.66.7zM270.9 94.2l2.1 2.215v.553h-.524l-2.63-2.77h1.05zm18.39 61.766l-1.314-.69-1.973-3.053h-1.574l-3.82-2.624-.52-.56-3.02-2.77-1.05-.97h-.53l-3.55-3.74V141l-1.05-2.77 1.05-.55.66-1.81 1.84 1.39 3.15 1.523 1.44 1.662v1.11l1.57.41 1.05 1.115 12.61 11.08v1.793l2.1 4.303-1.19 1.385-4.99-3.46-.92-2.22zm-16.8-81.586v1.106l-1.05-1.107h1.05zm3.547 24.1l1.577 1.66v.555l-3.155-2.216h1.57zm1.705 29.916l-.655-1.385-1.578-.83v1.11l2.23 1.11zm14.323 50.144l-1.84-3.19-1.97-.688v-2.078h1.05v-.973h-1.578l-1.84 1.25-2.23-2.35-1.97-1.11-3.945-4.01-.655-2.36-1.578-3.32v-.97h1.05l3.02 2.08 2.5 2.64 4.59 3.33 2.1 2.08 3.02 1.66 2.1 2.08 4.07 2.91 2.49 3.6-.53 1.11 1.05 1.52-2.37 1.25-2.24-1.79-4.34-2.63zm-15.503-88.65v.56l-.526-.56h.526zm0-11.22l.524-.55.92.55v.557l1.052 1.108v.554l-2.496-1.39v-.83zm4.07 32.553v-1.386l-3.02-1.662v.966l3.02 2.09zm5.783 72.164l-5.255-4.847h-.79l-1.31-2.633-1.446-1.665v-3.87l1.97.69 2.102 1.52 7.62 5.4 4.994 5.404v.693l-5.518-.7h-2.367zm-5.255-59.007v-.55l-3.418-1.532 1.84 2.082h1.578zm-1.577-41.415v1.11l-.524-.553.52-.557zm0 18.84l.527.554h-.527l-.524-.56h.52zm1.577.968l.92 1.108v.56h-.92l-.79-1.66h.79zm0 10.803h1.972l4.596 4.85h-1.968l-4.6-4.85zm2.496-8.588v.556h-.524v-.556h.524zm0 22.577h.525l-.52-.555v.555zm5.125 11.772l-1.05-1.108v1.1h1.06zm1.45 34.905h1.06v-.554l-1.05.554z\"/><path fill=\"#76A9D8\" d=\"M317.157 182.97v-8.036l-.787-4.432.787-2.628V148.62l-.787-4.99.787-2.496v-19.386l-.787-4.294.787-2.632v-19.39l-.787-4.983.787-2.5V68.56l-.787-4.568.787-2.355V41.69l-.787-4.292.787-2.635V15.51l-.787-4.43.787-2.63.526-5.124 3.545-1.8h20.89l3.813 1.247 1.32 4.154V156.1h3.55l2.37-1.25 4.73 1.25h17.87l2.5-1.388 4.6 1.39h4.61l2.5 1.25.93 12.323-.92 5.813v9.284l-2.76 1.936H320.2l-2.23-1.248-.79-2.49zm27.987 1.524l1.84-.553 9.327.56h14.32l1.71-.55 11.43.69 4.21-.82v-10.53l.53-8.59-.65-5.81-4.46-.56-3.68-.69-2.5.69h-18.79l-4.07-.69-3.28 1.11-5.91-1.1-.53-21.19.53-2.07-.52-24.1.53-2.76-.52-24.1.52-2.63-.52-23.68.53-2.63-.52-24.23.53-2.08L344.62 5l-2.5-1.39h-14.85l-8.145.97v26.45l.524 3.187-.53 3.186v19.944l.52 3.737-.53 2.638V78.26l.52 4.845-.53.556.65 4.02-.66 2.36v30.61l.52 3.74-.53 2.77v19.81l.52 3.75-.52 3.33v10.11l.79 3.05 1.31.7 6.04 4.29 4.6 4.85 1.57 1.11 2.49 2.08 3.15 2.21v1.39l-4.07-1.4-4.86-.69-4.33-3.59-1.58-.55-2.37-1.66.92-2.63-.53-2.08-1.97-2.78h-1.18v15.65h2.1l.52-.55 4.07.97h19.31zm-9.2-103.605l-12.22-10.12-1.18-.69-1.316-2.08-.522-2.08h1.315l7.36 5.95.79.69 2.24.83v-.84l-11.17-9.14V61.2l6.05 4.71 4.08 3.74 1.58 1.107 4.6 3.74 4.21 2.91.92 1.935.92 1.53h-2.36l1.97 2.77-1.05 1.11v.967h-.52l-2.11-2.07-3.54-2.77zm-14.714 2.76l.52.55h-.527l-.523-.56h.523zm-.53 98.2v-.56l1.05-.56.524-.97.526-.56.53-1.39 2.625 3.87-.92.97-2.76-.83H320.7zm17.87-127.7l-2.63-2.22-2.494-2.63-2.104-1.67-.393-.56-1.05-.56-1.06-.97h-.66l-7.23-5.96 1.84-.56v-1.66l-.53-.97v-2.2h1.44l1.58 1.66 13.14 9.97 3.67 4.02-.52.97 1.05 1.66-.53 1.1v2.63h-1.58l-1.97-2.08zm0 18.7l-1.05-.56-1.578-1.53-6.567-5.4-1.446-.69.92-.97h-1.58l-4.73-3.74-1.58-2.5 1.31-.7v-1.11l.66-.69-1.58-2.5h1.18l2.75 2.21 1.58.97 3.02 3.33 1.97.97.52.55 1.58 1.1.52.55 1.97 1.53 3.02 2.77 1.45.69.66 1.38v6.92l-2.5-2.07-.53-.55zm.526 30.05l-1.578-.56-.526-.42-2.498-1.66h-1.578l-.528-.56-1.05-.55v-1.11l-2.234-.69-1.84-1.94-1.97-1.11v-2.08l-1.447.69-.655-1.25v-1.1l-1.976-2.09 1.58-.55v-2.77h.916l.527.55 4.59 3.74 1.05 1.11 12.21 9.97v5.12l-2.37-1.25-.66-1.52zm.39 45.71l-1.05 1.24-.92-1.81-2.495-.69v-.97l.92-.56v-.41h-1.44l-.52-.56h-1.18l-1.44-2.22-.92-.55v-.83l-3.54-1.81-1.05-1.11H324l-.79-1.52-1.315-1.52.92-3.33-1.58-2.21h1.05l1.974 2.21 2.63 1.52.39.55 10.77 8.03 4.6 4.85v1.1l.52 1.11v1.38l-2.1-1.39-1.06.96h-.92l.92-1.52h-.53zm1.578-52.64l-1.053-1.11h-2.49v-3.18l-1.05-.56-1.05-1.11h-.92l-.66-.69-2.23.83-4.73-3.88-.53-.56-2.63-2.08v-1.66l2.63 2.77h.79l-1.84-3.05-3.02-1.52-.65-5.13h.66l1.98 2.08 1.71.96 3.42 2.77 5.65 4.29.92 1.1 2.11 1.66 5.26 5.54-.79 1.8 1.58 1.8h-1.97l-1.44.69-.65-.7 1.05-1.11zm-5.65-75.21l.525-.56-.53-.42-.92.97-3.16-3.19-.92-.56-4.08-4.3-2.1-1.53-.53-1.66 1.05-1.12-1.06-.55h-1.97v-1.5h4.73l7.49 5.81 3.02 2.77 4.6 3.6v2.77l1.57 1.66-1.32 1.39 1.31 1.24v.83l-4.6-2.35-3.15-3.33zm4.072 104.71l-.918-.56-1.055-.96-4.072-3.33-6.17-5.4-1.44-.42-3.81-4.02.79-1.39.4-.56-.39-1.66-1.05-.98 1.19-1.94 4.34 4.02 1.06.55 4.07 3.19v2.08l4.08 2.77 1.05-.55.53.55 1.97 1.39.52 1.38 1.06.41 1.32 4.3h-.79l-4.07-3.19-2.63-2.63-1.44-.56-2.1-2.22-4.07-2.08v.83l2.63 1.81.53.55 2.5 2.21 2.5 2.63 2.11 1.1.53.55 2.89 2.49.79 1.52-1.71-.83-1.05-1.11zm-12.22 25.21v-2.91l-1.44.83v-1.11l1.05-.56v-.83l-2.76 1.8-1.842-2.08.527-2.35-.65-2.37.79-.82 3.94 4.01 1.45 1.11 1.06 1.51h1.58l1.71 1.94-.79.83.52.97 1.84.69.93 1.94-2.62.69-1.18-1.11-4.07-2.22zm2.632-123.41l-.53 1.1-.527-.55-.52-2.36-5.38-4.71-.66-1.53V15.9l.53-.415.4-2.213 13.53 10.94 1.84 1.94 3.02 2.213 1.84 1.95-1.7.97 1.45 2.91v3.19L331.1 27.28h-1.18zm7.615 16.06l-2.103-1.66-3.548-3.74-3.024-1.53h-.524l-.66-1.53-1.31-.69-4.074-4.3V25.6h1.84l2.762 2.216 3.022 1.52 4.072 3.325 1.05.42.656 1.53 1.84.69 5.124 5.4v1.53l-.53 1.11.795 1.8-.92 1.11-2.89-1.25-1.58-1.66zm-3.02 16.07l.918-.97h-.39l-1.05.55-1.84-.69-.79-1.52h-.92l-2.1-2.08-.52-1.11-1.44-.56-1.57-1.67-1.57-.83v-1.8l-.92-3.19V43.9h2.5l3.55 3.737L334 51.93l.527.56 6.83 5.54 2.496 4.99-1.71 1.8h-1.572l-1.97-1.1-4.07-4.29zm-12.22 12.46l1.973 2.08h-1.05l-.923-1.11v-.98zm0 42.94h1.445l3.55 3.74v1.1l-1.44.41-3.553-2.22v-3.04zm1.446 12.87l-.92-.55-.53-1.67.53-1.11v-3.74l3.41 2.49.66 1.25-.92 1.8 2.36 2.48h1.84l-.79-1.52-1.58-1.1v-1.39l7.22 5.69v1.11h-3.15v1.11l1.45 2.07h-1.45l-6.04-4.85-2.11-2.09zm19.58 54.72l-2.24-1.66-4.07-4.28-1.32-2.64h-1.71l-.92-1.94-1.71.83-1.97-2.08-3.03-1.67-4.08-4.3v-2.63l.53-3.74 2.5 2.63 4.6 3.74 1.97 2.22 1.05.42 2.5 2.21 2.63 1.66 9.59 8.02 3.68 2.64-1.19 1.24-2.5-.7h-4.33zm-4.73-70.36l-1.57-1.1-2.77-2.91-6.44-4.02v1.94l-2.37-1.66.92-.83-.52-.56h-1.58l-1.05-.97v-1.11l-.4-1.11.39-1.11-.4-.55V94.3l8.54 7.06 2.1 2.08 6.05 4.29 3.02 3.04-.92 1.8 1.05 1.66v.98l-4.08-3.18zm-2.1 55.27l-4.6-4.7-.53-1.12-2.37-1.25-.66-1.53h-1.97l-3.55-3.74v-3.74h1.97l2.49 2.77 3.15 2.08 1.97 2.21h1.05v5.27h1.05v-3.75h1.44l3.15 3.18h.52l2.49 3.33 2.23.84-.79.69-1.97-.55h-5.13zm-11.7-56.37l-1.06-.97v.97h1.05zm-1.05 13.43l.52-.41-.53-.56v.97zm0 21.47h2.1l-1.06-.97-1.05.56v.41zm3.54-32.41v-.83l-1.97-1.11v.83l1.97 1.11zm1.31 6.64l2.36 1.11v.55l.92 1.66-.92.97-4.21-3.74 1.84-.56zm.26-33.79h.52l-1.05-1.11h-1.05l1.57 1.1zm-.53 19.94h1.05l1.58 1.52v1.1l-2.63-2.63zm10.25-19.39l-.53-.56-4.08-3.19-3.55-3.74h.66l7.48 5.82 1.47 1.14 2.63 2.77v.83L340 87.95l-1.443-1.11zm-7.62 1.11h.39l-.39-.56h-.53l.53.55zm7.62-74.66h-1.05l-2.1-2.08-.4-1.11-2.1-1.11-1.97-1.67h1.97l.52.56 1.05-.97h4.33l3.41 2.36-.66 1.39 1.57 2.08-2.5 2.49-1.58-.83-.53-1.11zm-6.7 40.31h.52l-.52-.56v.55zm1.58 37.53h-.53v-.55l.52.55zm1.97 36.01h-.92l-.53-1.11-1.05-.55v-2.63l2.1 2.08 1.44 1.11 1.05 1.65 1.58 2.08-.79.83-1.84-1.94-1.06-1.52zm-1.97 22.99h-.53l.52-.42v.41zm.52-14.41h-.53v-.55l.52.55zm5.12 20.37h-1.05l-.53 1.1h-.5v-1.67l-1.06.56-1.32-.7 1.31-1.38v-2.36l3.29 1.24 3.41 4.44v1.93l-1.06.55-1.06-.55-1.45-3.19zM335 98.05h.92l-.525-.41-.395.415zm2.497 36.01l-2.23-1.11.783-1.66 4.47 3.19v1.8l-1.97-1.11-1.053-1.11zm-1.05-107.9v-.55h-.526l.53.556zm-.527 136.44h.527v-.56h-.52v.57zm.528-24.79v-.56h1.05l1.32.7 2.62-1.38 1.71 1.79-1.574.56h-1.98l2.89 3.736h-1.442l-4.6-4.83zm.53 16.2l.52-.55h-.5v.56zm2.1-143.91h.92l-.92-.55v.55zm0 60.12h.39l-.39-.55v.552zm.92 60.12l1.58 1.104v1.25l-2.24-.84.65-1.51zm.52-14.548l1.05 1.1v.556l-1.06-.557v-1.1zM342.1 6.38l-.53.552-.53-.554h1.05zm-.53 144.32v.553h-.53v-1.11l.52.556zm1.59-143.36l-.524.554v-.56h.52zm11.69 164.826l-1.575-1.52-.527-1.106-1.44-.56v-.56h.92l1.05-.55-1.58-.56-.4-2.08-1.05-1.11-1.44.69-2.1-2.21h-2.1l-1.05-.565 1.06-2.215v1.66h4.07l5.124 4.017v1.39h1.97l1.576 1.52v.83l-1.576-.83-.394.554.66 1.4 4.334.83-1.973.41-.52 1.11-.53-.56h-2.5zm-1.575 7.066l-1.053.97-1.97-2.07-.527-1.11h-1.577l-3.55-3.73 1.05-1.11h-2.105v-3.46l1.842-.83 8.405 7.06.527.56 1.97.98 1.575 1.658 3.02 2.074 1.578 1.67-2.1.55-2.1.693-2.496-1.246-2.497-2.63zm-9.195-8.58h1.05v-1.1l-1.05 1.11zm3.15-5.54l1.975.69h1.575l-.525 1.53-3.022-.97v-1.24zm6.046-3.6l-.525-.56h3.03v1.11l-1.97-.55h-.52zm24.44 17.18l-1.976-2.21h-.52l-1.71-1.662-1.703.83.787.835h-1.18L368 173.853l.79-2.22h-1.445l-.79 1.665-.53-2.635-1.05.56-.527-1.106h-1.442L361.96 169v-1.66h-1.575l-1.182-1.81-2.63-1.934.79-1.53-.523-1.11 2.628-.686 12.22 9.84.915 1.106 1.58.966 1.97 1.66 1.58 1.1 4.593 3.746 2.49 1.8v1.39h-3.55l-2.5-2.636-1.05-.55zm-8.93 3.74l-2.238-1.66h-1.575l-1.443-1.52 1.962-.69v-2.075h-.526l-.53 1.66-.913-.55-.527-1.105h-1.58v.55l.53.56h-1.05l-.525-3.186-.52-.553-.39.557h-2.1v-.553l1.58-.556v-1.11h1.45l1.05.56h1.85l.92 2.08 2.63.97 1.18 1.24v.56h.53l6.7 5.12v.84l-3.15-1.11h-3.28zm-10.385-12.88v.56l-.52-.556h.53zm22.87 2.077l-.53-1.52-1.97-.56-1.58-1.67-3.02-1.53-3.55-3.73h-2.1l1.18 2.35 2.89 2.21v.69h-.91l-1.05-.97-2.1-1.66-.92-1.11-2.1-1.52-.52-.56-1.44-1.11v-1.11h.92l2.63 2.21h1.31l-1.57-2.49 3.28.83h.92l2.63 2.22 4.08 2.62.52.55 1.98 1.11 2.63 2.63 3.55 2.77v2.08h-1.05l-3.02-3.19-1.05.41zm-5.12-9.56l-1.97-2.22h1.57l.4.55 1.58 1.11 1.57 2.08h-1.05l-1.57-1.53h-.52zm-1.44 7.48h1.04v1.11h-1.05v-1.11zm3.54 2.63v.55l-.52-.56h.52zm1.97-13.44h1.05v2.21h-1.05v-2.21zm0 5.95h1.05l2.1 2.22-.79.69-2.37-2.36v-.56zm0 9.15l1.57 1.66h-1.58v-1.66zm2.1-11.22v-2.78l3.42 1.81-1.32 1.38-.53-.41h-1.58zm2.1 4.71l.91 1.1v1.11h-.52l-.92-2.22h.53z\"/><path fill=\"#D8ABD7\" d=\"M403.213 186.57l-1.968-2.076v-12.466l-.527-14.82.794-4.297-.794-21.88.794-5.12-.794-21.88.794-4.16-.794-22.02.794-5.12-.794-21.74.794-4.29-.794-22.02.527-3.46V3.46l1.71-1.66 3.414-.97h20.36l2.75 1.525.79 2.214v8.03l.78 4.15-.79 6.64V38.9l.52 2.77v6.93l3.02-3.186 1.05-3.327 2.89-3.05 1.7-4.427 2.89-1.8.91-3.88 3.81-4.016.92-3.05 3.2-3.864 9.58-15.23L464.3.83h24.57l3.545 1.247 1.45 3.045v2.214l-3.54 4.294-3.02 4.715-2.1 2.77-1.44 3.188-3.02 3.182-1.57 3.325-2.49 3.184-1.05 2.08-3.55 4.845-3.55 5.95-3.15 3.74L463 52.9l-5.26 7.48-4.073 6.51-5.91 8.167-1.18 3.05-2.89 3.05 1.836 4.02 2.894 4.424 4.205 8.46 3.81 5.68 3.145 8.45 4.733 8.86 1.05 1.67 2.622 5.4 2.5 4.3 6.175 12.33 5.252 8.31 5.12 12.88 2.22 3.47 3.69 7.48 3.02 5.4v2.23l-1.05.97-4.61 1.67h-17.73l-3.68-.56h-4.6l-2.5-2.63-1.98-4.29v-2.49l-4.47-5.81-3.68-7.9-1.44-3.74-2.23-3.74-14.19-28.39-1.32-3.46-1.19-1.94-1.05 7.48v15.66l.78 4.15-.79 6.51v16.08l.78 4.3-.92 6.78-1.58 3.46-6.44.56-3.55-.55H403.2zm18.53-1.244l2.358-.832 3.16-.553.92-1.11v-68.7h1.45l1.58 4.99 3.15 4.72 4.6 9.55 3.02 5.41 12.75 25.77 1.06 1.66 5.91 10.67 2.63 6.8 7.89 1.66 3.42-1.38v-.55l-1.58-.56-3.02-1.65h-1.57l2.1 2.22h-1.05l-3.02-1.66-5.12-5.39v-.42h1.05l2.5 2.63 3.03 1.66H470l-8.94-7.61-.79-2.08-1.967-2.21v-.55h1.187l8.53 7.61 3.024 2.08 1.056 1.11 3.02 2.08 4.2 3.88h14.06v-2.91l-3.812-6.65-1.71-4.43-11.43-20.23-4.063-9.97-1.846-3.05-2.5-5.41-3.15-4.84-1.45-3.18-1.58-2.77-5.65-11.78-1.44-1.66v-.55l-1.06-1.52-1.57-.83-1.58.83-3.42-2.77-3.82-2.63-6.96-6.37-8.54-7.06h1.44V85.6l-.65-.69-1.58.83-2.36-1.106-1.05-1.107-3.55-2.494v.83l3.54 3.737v.556h-.4l-4.07-4.294v-.97l-1.06-1.105h-1.58V78.4l2.63-1.385-2.24-1.524 1.44-.69 8.41 6.51 2.49 2.77 2.1 1.11.4.41 11.3 9.15.92-.97h.52l-.52.97 4.59 4.85v1.66l3.15 2.09.4.55h.53v-1.24l-3.54-6.23-5.13-10.25-2.5-4.43v-1.39l2.5-2.77 4.59-7.48 2.64-3.18 6.03-9.69 3.02-4.29 4.07-6.51 3.29-4.02 1.84-4.01L473 34.1l1.58-3.19 3.02-3.735 1.05-2.22 4.464-5.54 2.106-4.57 2.626-2.77 1.976-3.74 2.1-2.08V4.57l-1.05-.97-8.54-.688-5.26.55h-13.8l-2.5 3.876-2.49 3.188-2.1 3.74-2.23 2.91-1.315 3.74-2.89 1.94-1.314 4.43-3.28 2.218-.925 4.848-3.15 2.216-2.104 4.018-2.1 3.185-1.97 3.75-4.2 4.99-1.84 4.02-.66-3.6V5.13l-1.31-1.385-20.89-.83-2.762 1.38v15.37l1.055 4.847h.52l.52-1.105.79.83.79-.83.394 1.11 1.58.416 7.62 5.403 3.02 3.18 2.11 1.66.53.56 3.03 2.075v1.53l-2.49-1.8v1.11l3.02 2.08v2.21l-1.58-.83h-.92l1.19 2.08-2.75-1.52-1.57-1.52-2.1-1.66 1.44-.69-2.37-2.5H416v.83l1.58.69v1.11l-2.103-1.11-1.446-1.52-2.1-1.11v-1.1h2.1l1.06-.55H417v-.96l-2.49-1.38v1.39l-.796.7-3.28-2.36-1.576-.55 1.05-1.11.528-.97-1.708.83-1.445-1.39v-.55l-4.074-2.21V46.4l.92 2.628-.93 3.327v20.36l.79 3.74-.79 2.215v20.92l.79 3.044-.79 2.91v20.36l.79 3.188-.79 3.32v20.36l.79 2.904-.79 3.052v14.41l.52 1.658-.53.553v3.74l1.18 5.4H417l4.736.83zm17.73-114.132l-1.567-1.11-1.585-1.66-1.44-.97-2.1-1.662-1.97-1.386v-.692h3.54l-2.1-2.216-.92-.556-2.1-2.076-4.06-3.326-6.57-5.813-1.58-1.11-3.02-2.63-2.1-1.11-.92-1.107-4.86-4.292-1.31-2.08v-1.66l-.52-1.664V32.55l-.65-1.94 1.71.833.53.552 4.21 3.604-1.18 1.24h1.05l1.06-.56.39.55-.66.83.66.69.53-.97 1.05.97v1.11l1.31 1.38 1.19-1.38 3.68 3.74v1.1h.92v.55l-2.36.69 1.83 1.94 3.16 2.22 3.02 3.18 1.58 3.19 3.02 1.66h1.97V56.1l1.05-.558.52-.967 1.97 2.08 4.6 3.184L442 61.5l1.98 1.1 3.94 4.02L446.6 68l-2.753-1.53.78 1.66 1.977 1.38.524 1.11-3.416.69-2.757-2.91h-1.45v.97l4.73 3.74-1.05.97-3.68-2.91zm-4.595 5.402v-.555l-1.052-.55v-.55l-.522-1.11.522-.55-5.91-2.49-.658-.69-1.574-1.11-.525-.55-1.98-1.52-1.05-1.1-4.08-2.91v-2.5h-.52l-.53 1.1-1.06-.55v-1.11l1.05-.97-2.63-4.15-1.97-.69h-1.45v-1.11l-2.11.56 1.57 1.66 1.44.69v1.8l-1.97-1.52-1.58-1.53-1.45-1.11-.53-1.11 1.31-.69-2.89-3.05 1.18-.69-2.24-4.71.66-1.93 1.44 1.39 1.05 2.35 1.57-.69 3.94 2.63-1.45.56h-1.05v.69l4.07 3.6 4.07 4.29 5.12 3.32 1.98 2.08 3.02 2.22.52.41 1.57 1.11 11.95 9.83-1.84 1.95v2.77h-1.97l-.52-.55-3.03-2.63zm-15.764-48.894l-1.44-.693-1.19-2.5-3.026-1.11-2.49-2.77-2.63-1.66-4.465-4.02 1.442-.7-1.05-1.11v-2.08l15.24 12.88 3.16 2.08 3.673 4.01-.654 1.38v1.39l-3.55-1.94-3.02-3.19zm-4.075 71.886l-4.08-3.74-4.47-3.466-2.24-3.46h1.84l3.81 3.187 5.12 5.4 3.55 2.63.91 1.66-.39.55h-1.06l-.52-.56-2.5-2.22zm-6.18 83.8l-1.58-.56h-1.58l-1.06-3.042.79-.828-1.18-3.747 2.63.7 2.23 1.53-.92-4.57-1.06.97-1.32-.69v-2.07l-1.58-1.67h3.02l3.15 2.64 6.04 4.3h.52l-.52-.97-3.03-2.21-4.59-4.85v-1.66l-3.55-3.04v-2.77l-.66-2.63 10.91 8.87 5.51 3.46h1.05l-.52-1.66.52-.56-1.05-.96V169l-7.1-6.514h1.44l.79-1.527 7.36 6.79 2.1 1.1v1.66l-.52 1.11-.53-.55v-.7l-2.23.69 1.18 2.62-.4.55-2.63-2.21-3.02-2.08-3.68-3.19H412l1.577 2.49 2.89 1.81 3.023 3.18 3.672 2.5v1.24l-.784.84 1.185 1.79-.4.55v1.65h-1.83l-4.86-3.32v.69l2.36 3.74h-.79l-.52-.56h-8.677zm9.19-41.423l-3.55-3.736-8.42-6.93-1.71-2.64h1.44l5.12 4.3 2.49 2.62 1.97 1.11 3.15 3.18 1.96 1.1.52.96-.52 1.11h-1.05l-.39-.56-1.06-.57zm0-5.813l-2.63-3.186-3.42-1.8-.66-1.525-6.05-4.98v-.82l1.97.55 2.1 2.08h2.49l-1.97-1.11-2.11-2.07-3.03-2.49v-1.25l.52-.55.79-1.79 2.76 2.91-.65 1.39 1.18.69 1.57 1.67 8.54 7.48 4.07 3.19 2.62 2.77h-2.1l-.52.42.52 1.11 1.71.97 1.18 2.36-1.83-.55V143l-6.31-5.127-.79-1.676zm-11.69 6.93l.52.69.92.278.79-.832 1.84.412h1.18l5.91 5.265 1.57 1.8v-.138h.92l2.63 2.216 2.75 1.938-1.32 1.25-2.49-2.63-1.45-.69-4.47-.55-3.28-1.79v-1.25l-1.06-.55-3.94-3.74h-1.05l-1.58-1.66h1.58zm.52-133.108v1.105h-.53l-1.05-1.11h1.57zm2.5 79.915l-1.59-.97-2.5-2.77v-.69l1.58.69 2.5 2.77 2.49 1.24v1.79l-1.98-1.52-.52-.56zm-4.08 59.14h.52l1.05 1.11v.41l-1.58-.69v-.84zm7.1 10.25l-7.1-5.96v-1.11h1.05l.52 1.25 2.5.96v-1.11l-2.11-1.11v-1.1h1.05l3.02 2.77-1.18 1.93 2.76 1.8 2.49 2.64v.82l-1.45-.83-1.05.54-.53-.55v-.98zm-6.84-91.27h1.31l.39.97 1.05 1.66-.66.69 1.45 2.35-2.5-1.25-1.05-4.43zm3.81 46.67l-2.5-1.66-1.19-2.5.66-.69 1.44 1.52 2.63 1.66 1.45 1.66 4.06 3.6v1.24l-5.39-3.6-1.18-1.25zm-3.55-59.15l.53-.55 5.52 4.42v1.94l-6.05-4.71v-1.11zm.53 5.4l-.53-.55V58.3l4.07 4.295h-1.58l-.79.833-1.18-1.385v-1.11zm-.53 19.95h.53l.52.41-.53.55-.53-.56v-.42zm0 13.85l1.05.55.39 1.11h-.4l-1.05-1.11v-.56zm9.2 18.83l-2.63-2.63h-1.98l.66-1.53-3.28-1.8-1.45-3.19 1.18-.56-1.71-2.64v-1.11l1.05-.55 1.44 1.66.53 1.53h1.05l1.05 1.11 4.46 3.74 2.1 2.21 1.05.55 1.97 2.08v.56h-1.05L415 109.8v1.11l2.5 2.63 3.02 2.08v.964l-4.33-3.047h-1.18zm-7.22 23.14l-1.98-2.22v-1.39l7.61 6.51v1.4h-.52l-3.02-3.32-2.1-.97zm13.8-117.05l-2.11-1.11-4.08-4.3v-.55h-1.44l-2.1-2.08-5.78-4.85 2.23-1.11 2.63 2.07 1.97 1.11 2.49 2.76 2.62 1.52.53.55 4.07 3.18 2.49 2.77v3.05l-1.98-1.53-1.57-1.53zm-15.23 45.58l1.96 1.11v1.38l-1.97-1.11v-1.38zm.52 50.42h1.44l1.57 1.65v.55h-1.05l-1.98-1.39v-.83zm0 24.51l1.84.96.92 1.95h-1.32l-1.45-1.53v-1.38zm2.5-88.37h.52v-.56l-1.58-1.53h-1.05l2.1 2.07zm-1.59-5.4h.52l-.53-.42v.41zm0 30.19h.52l1.58 1.52v1.66l-.52 1.1-.93-.97-.66-3.33zm1.05 21.88l-1.06-1.53h1.05l1.57 1.11v1.52l-.53-.56-1.05-.56zm10.25-77.84l-4.08-2.08-6.7-5.82v-.69h1.05l5.12 4.29 1.44 1.1 2.1 1.66 2.5 1.8v.83h-1.44v-1.1zm21.81 69.81l-.53-1.53-.66 1.38-1.32-1.39-1.05-.56h2.49l-1.96-2.77-2.11-.97-.92-1.11-7.62-5.96-1.45-1.39-1.71.83-1.44-1.53-1.32-.69-1.31-1.53-2.77-3.74-.92-.28-1.32-.83v-.96l-1.58-1.67h2.5l-2.36-2.63-.79 3.04-1.45-1.53h-1.44l-1.05-.56 1.05-.42.53-.55h1.97l1.05-2.36 4.08 3.32 1.05 1.11.91.55 2.63 2.22 14.19 11.77 1.05.55 2.1 2.08.39 1.66.53-.55h.53v1.66l1.04.97v1.11l1.08 1.69.53 1.52.91 1.66-.53.55h-1.45v-2.2h-1.57zm-29.96 75.75h.92v-1.1l-2.5-1.39v1.39l1.57 1.1zM409.9 31.97l1.44 1.11-.39.414-1.05-.96V32zm3.02 42.94l-2.5-1.66-.53-.97h.52l1.44.97h2.1v-1.52h.53l1.965 2.074v1.11h-.79l-.92-1.93-.785.83v1.11l1.05.56v.83l-1.58-.826-.52-.556zm-3.02 31.164h.52l-.53-.55v.56zm3.02 15.52l-1.58-1.52-1.18-.69.79-1.79 1.45.83 1.04 2.074 3.02 2.22 2.1 2.07h-1.06l-1.58-1.52-3.02-1.663zm5.13-109.97l-2.11-2.21-1.44-1.11-.53-.55-1.57-.97-1.45-1.66h1.18l3.8 2.635.53.55 1.05.55 1.96 1.66 1.05.55 2.62 2.08h.92l-.922-1.53-2.1-1.1v-1.1l-1.577-.56-.39-1.11-2.63-1.67V4.84l3.55.974V3.88l2.1.69 2.63.695 1.44 1.522v2.077h-1.04v.555l1.58 1.65.52 1.53-2.1 1.1v1.1l1.31 2.63h-.78l-2.35-1.23-5.25-4.58zm-7.1 62.75l1.44 1.66h-1.45v-1.66zm1.97 12.33l-1.58-1.52v-3.33l-.39-.97v-1.8l1.97.7 6.18 4.983v1.385l-3.29-2.07.66 1.52 1.05.56v1.11H417l-.52-.55h-3.55zm-.53 14.54l-.53-1.1.52-.553 1.045 1.11 1.582 1.11v.97h.91l-.52.56h-.92l-.66-1.39-1.444-.69zm-.53 53.19h1.05v.97h-1.05v-.97zm1.05-83.79v.555l-.53-.56h.523zm0 21.47l.78-.834.8.834v1.66l-1.06-.55-.52-1.11zm3.54-1.66l-2.495-2.63 1.32-.696 3.282 3.33.913.552 3.42 3.46-.79.83-3.545-3.74-2.1-1.106zm-1.965 66.067h1.307l5.253 4.85v.97l-6.564-4.71v-1.1zm.916-15.51l1.06.56v.98l-1.05-.57V141zm1.6-96.12v.56l1.06-2.21-1.06.56h-1.05v.56l1.05.55zm-.52 22.03v-.55h-.53l.53.56zm.53-24.24v-.55h-.52l.52.56zm.67 52.08l12.6 10.24.14.14-.4.14-.79.83v-.55l-.65.28-12.09-10.53 1.19-.55zm-.66 8.59l2.11 1.66h-1.57l-1.05-1.66h.53zm0 16.76l1.05.98h-.52l-1.05-.97h.52zm6.17 38.65l-1.05-1.11-.52 1.1h-.66l-.91-2.77-1.97-2.07h1.06l.92.97 4.47 3.6.66 1.25h-.53l-.53-.56-.92-.41zm-4.07-127.85v-.83l1.44.83V32l-.52-.555-.92-.556zm.39 48.34h1.58l-1.57-1.66-.39.55.39 1.11zm0 42.93l1.06 1.12h-.52l-.92-1.11h.39zm1.58 7.49l-1.96-1.53v-2.77h1.18l4.86 3.74 1.58.83v2.49l.52.97v1.11l-2.63-1.53-3.54-3.33zm-1.04-44.05l3.15 3.32v.55l-3.14-2.5V85.6zm.53 3.88l.52.41-.52.56-.52-.56.53-.42zm1.06 15.51l-1.57-1.66v-1.53l4.07 3.18 3.16 2.08v1.66h-1.05l-3.03-3.19-1.57-.56zm-1.57 3.18V105l5.12 5.4h-1.58l-1.97-2.22h-1.57zm0 37.67h1.04l1.06.42-.52.54-1.57-.55v-.42zm3.14-116.35v-.69l-2.62-2.08v1.52l2.62 1.25zm-1.31-7.48l1.31 1.38-.52.55-1.59-1.11.79-.83zm-.79 17.45h.53v-.56l-.53-.56v1.11zm0 83.93l4.6 3.6h-1.05l-3.55-2.49v-1.12zm1.05-90.86l.53.55v.42l-1.06-.41.52-.56zm1.7 113.57l-1.17-1.93-1.05-.56v-1.24l2.49 1.8 3.3 3.46-.66.83-1.05-1.11-1.84-1.25zm-1.7 16.35v.55l-.52-.55h.52zm2.5-41.97l-1.84-.55-.92-2.08h1.31l1.98 2.21v2.07l-.53-.55v-1.1zm-2.49-64.96l.53.56v.55l-.53-.55v-.56zM422.7 91h-.53v-.55l.53.55zm-.53 59.14l.53-1.11h1.44l.53.56h1.05l1.05.968-.53.557-3.03-.97h-1.045zm1.18-36.43l3.42 3.6v1.526l-4.2-3.46.78-1.67zm.27-63.984v-.56l-.916-1.11.65-2.08 3.42 3.74-1.444.69-.66-1.25-1.05.56zm23.52 65.51l-3.15-1.664-4.08-4.29-7.224-5.127-9.59-8.86h1.18l5.52 4.3 1.05 1.11.92.55.52.56 2.1 1.523 6.05 5.4 2.63 1.8 4.07 3.6 3.153 2.495-1.32 1.525-1.84-2.91zm-23.93-23.66l.4-.556V89.9l.52-.415 3.55 2.49v.69l-1.445.56-1.58.83-1.45-2.497zm0 71.88h.4l4.595 3.326h-1.44l-3.156-2.216-.4-1.11zm.92-106.232l1.057 1.1h-.53l-1.05-1.11h.52zm-.52 121.05l2.102 1.11v1.1l-2.102-1.11v-1.11zm.52-154.3l1.582 1.52v1.11h-.524l-1.06-1.11v-1.52zm.527 6.92h.53v-.55h-.53v.55zm.53 13.44v.55l-.53-.56h.53zm-.53 47.78h1.058v-.56h-1.06v.557zm1.058-56.93v.56l-.53-.56h.52zm1.57 52.63v1.11h-.53l-1.06-1.103h1.57zm-1.58 55.267l1.97 1.11-.4.55-1.58-1.11v-.55zm.52 12.87l1.05.56h-1.06l-.52-.56h.52zm.53-62.18l.25-.27 1.18-.28 1.05.97 3.686 2.77 5.52 3.74 1.97 1.66v2.63l.53.56-.79.83-.66-.82V105l-3.15-1.66-9.06-7.62v-.42l-1.45-.69.92-.83zm0-56.92h-.53v-.55l.53.55zm0 86.98h-.53v-.56l.53.56zm1.57-63.02l1.45.7v1.39l-2.11-1.39.65-.69zm.39 29.09v.56l-.53-.56h.52zm17.34 35.45l-1.05-.96-1.98-1.66-2.1-2.22-3.02-1.52-.533-1.66-4.594-3.18-1.05-1.1-3.55-2.5v-2.21l8.675 6.92 2.1 2.08 3.02 2.21.528.55 3.02 2.08 3.56 3.75v.56h-.53l-.52-.56-1.97-.56zm-13.8-32.68l1.05 1.11h-1.06v-1.11zm.52 15.52v.56l-.53.55v-1.1h.526zm.53-27.28h1.04l-.522-.55h-.523v.55zm8.93 35.32l-1.31-.55-2.5-1.25v-1.1l-1.19-.42-.914-.97-3.01-2.63h2.1l.4.56.92 1.66.14-.13h1.58l.79 1.66h1.19l2.23 2.91.92-.42v.69l1.58.98-.67.69H443l-1.443-1.38.65-.27zm22.86 28.53h-.79l-.92-1.11h-1.57l-3.55-3.74h-.53l-.52-.55-1.44-1.11v-.97l-1.05-.55-2.63-2.22h-.39l-3.68-3.74-5-3.72-4.074-4.28h-1.58l-4.07-4.3v-1.81l4.6 3.88 1.05 1.11 1.98 1.11 2.1 2.07 4.07 2.22v1.66h1.45l.53.98 1.04.56.53.55 1.98 1.67.53.55 2.63 1.94v.69l1.97 1.11 12.09 9.97-2.49 1.66-2.24-3.6zm-30.213-79.5v-.55l-.53-.55v.55l.53.56zM445 62.06l-1.05-.552-4.08-3.187-.4-1.11-3.15-2.08-1.44-1.66v-1.11l.79.97.79-1.8-1.574-2.49 3.025-2.07.52-.55 1.44-.41v-1.66l-.4-1.11.4-.56H443l2.49 2.77 7.624 5.4 3.024 3.18v2.64l-2.364 2.63-2.107-1.52h-1.05v.83l1.442.83.65 1.25-3.43 1.8-.78 2.22-1.98-.97-1.58-1.66zm-9.593-2.22v-.42h-.52l.526.42zm3.028 8.17h.527l-1.45-2.21h-2.1l3 2.21zm-2.103 8.59h1.05v-.553h-1.05v.56zm0 19.81l1.58 1.104v.55h-.53l-1.05-1.11v-.54zm12.22-39.75h1.05l-1.05-1.53H448l-3-3.31-1.973-.97-2.63-2.21-1.97-1.106v.558l3.02 3.187.523 1.1h.525l4.076 2.21 1.98 2.08zm-9.59 41.82h.92l4.07 4.294H443l-4.073-4.3zm.52 29.086h-.52V127l.52.556zm7.62 12.88l-1.05-.55-.53-1.66-2.49-2.64-.8-1.67-2.36-1.52v-2.214l-.394-1.107.4-.976 2.1 1.52 1.59 1.11 1.965 1.66 1.05.56 1.05.96 4.996 3.74v.55h-1.98l-4.2-2.64H445l3.02 3.19 4.07 3.46-3.545-.69-1.448-1.11zm-4.605-75.21l-1.57-1.52h-1.05l1.58 1.52h1.05zm.79-15.79l.66-.83-.92-1.1v-1.1h-2.63l2.89 3.044zm14.45 71.05l-6.04-4.29-7.224-6.37-.65-1.52-3.16-1.66 3.285-1.665.526.56-.52.55.526.55 1.05-.55 3.03 3.19 4.593 3.18 1.055 1.11 1.05.56.92 1.53 1.84 2.63.78 2.22 1.97 1.52v1.81l-3.02-3.33zm-16.14-81.56h1.448l1.97 1.53v-.96l-1.71-1.805.92-1.11 2.36-.83-.92-1.94 2.37-1.25-1.18-1.94 3.28-.97v-1.39l-.523-1.1.66-.69 2.49.97-.66-2.35 1.57-1.66V21.2l1.58-.972.65-1.522 1.31-.69.524-1.11.53-.552v-.97l2.49-1.8V11.64l2.104-2.212 1.44-.555.92-2.49 1.18-.694h2.5l2.1-.56h5.124l4.33-.69 4.866 4.29-2.105 4.98h-1.57l-3.55-2.5v.83l4.073 3.46v2.08l-3.81 2.77-4.34-3.46h-2.1l6.05 5.12-.92.83v1.94l-1.45.69v2.22h-2.1l-1.18 2.63-3.027 2.08 1.71 1.66-3.02.69v3.05h-1.57l-1.57-1.52h-1.44l2.5 2.63v1.11l-1.97.55-2.63-2.22h-1.05l3.41 3.6-1.83 1.8v3.74h-1.06v1.66l-.92 1.11h-1.57v2.08h-2.1l-12.19-10.1-2.36-3.33zm2.89 96.13h.53V133.4l-1.052.55.52 1.11zm1.047-40.3H445l.52-.557v.55zm-.52 9.14h1.053l1.97 2.21h-.92l-2.1-2.213zm0 23.68l.52-.554H445v.552zm18.92 12.33l-3.16-3.185-1.305-.7-.66-1.53h-1.06l-1.57-1.53-3.03-1.66-1.05-1.66-.91-.55-1.59-1.53.79-1.66 6.57 5.41h.78v-.56l-.53-.55-.53-1.1-.92-.43-1.05-1.1-1.44-.69-.66-1.53-1.97-.96-2.1-2.22 1.05-.55h-1.97l-2.36-2.36.78-.82H448l.525 1.1 1.574 1.53.52 1.1h1.44l1.57 1.67 8.94 8.18.79 1.38 1.45.55 1.06 1.11-.66.69-2.37-1.24-3.41-2.63h-1.18v.56l4.07 3.74 5.91 4.3 2.24 3.19 1.05 1.11v.84l-3.02-1.66-4.6-4.01zm-14.32-96.68v-.554l-1.573-.97v.7l1.57.84zm-1.05 63.43h1.047l2.5 2.63v.55l-2.23-1.25-1.32-1.94zm6.7-63.44h.526l-3.16-3.19-2.5-1.67h-.53l3.55 3.74 2.1 1.11zm-5.126-9.14h.523v-.56l-.53.55zm1.575 109.56v.55h-.52l-.53-.56h1.05zm36.66 34.91h-.783l-2.364-1.67-3.544-3.74h-.923l-3.15-3.19-3.68-2.63.66-.56-1.05-1.66-1.19-2.64H471v2.36l-3.29-2.495.796-1.52 1.97 1.52v-1.94l-6.438-4.99-6.038-1.66-7.362-5.82h1.053l.92.56 1.59-.55.52-1.11.53.56h.92l-1.44-2.08-.53.97h-.54l-.52-1.52h2.63l4.46 4.86.52.96.79-.69 7.89 6.09 3.55 3.19 3.55 2.5 6.18 5.68 1.57.97 3.03 3.32v1.53l-.79.83 1.31 1.38 1.45 3.19v1.11h-.91v-1.11zm-37.17-25.77l-.53-1.11h1.05l2.236 2.49-.79.69-.53 1.1v-.55l-.92-.97-.52-1.66zm7.35-27.7l-7.35-5.55v-1.66h.91l1.576 1.66 3.03 2.07 3.55 3.188 2.11 1.66.52 1.66.53.98h-1.05l-3.81-4.02zm-4.33 15.93l-2.11-1.67h2.63l2.236 2.35-.93 1.11-1.83-1.8zm0-30.06l.52.41h-1.053l-.52-.414h1.056zm19.83 66.48l-6.04-5.4-5.12-3.184-7.09-7.48v-.56l4.07 2.63 2.5 2.77 3.02 2.08 4.08 3.324h1.05l-2.5-2.77-2.1-1.53-3.544-3.33-2.5-1.52-2.1-2.21-1.58-1.113-2.63-2.76.78-1.67 1.84.966v.84h.52l2.63 1.66 2.49 2.63 1.57 1.1 1.97 1.52 4.73 2.91 6.56 5.96 2.49 1.39 1.58 1.66.93.56 2.63 2.08 1.97 1.11 1.19 2.49 2.76 1.39-1.31 1.39-7.36-1.11-7.5-5.82zm-19.31-28.4h.53v-.55h-.528v.555zm1.45-99.86l-.92-1.104v1.11h.92zm-.395 62.746l1.44 1.66h-1.44v-1.66zm1.44-67.04h.527l-1.05-1.11h-.523l1.05 1.102zm1.58 1.52h1.04l-.52-.415h-.53v.416zm0 96.13l1.96 2.21-.92.56-1.05-1.115v-1.66zm.52-99.87h.91l-.4-.555h-.52v.56zm1.97 103.61l.78-.695 2.23 2.35-.66.7-1.84-1.25-.524-1.106zm.52 9.41l1.57.836.53.56 3.54 2.49v1.793h-1.05l-4.596-4.84v-.84zm12.74 1.94l-3.026-2.22-.528-1.52-3.024-1.11-2.1-2.216-1.31-.69 1.05-1.11 1.84 1.38 1.445.7v1.38h1.05l2.107.7v-1.79l-2.49-1.24 1.7-1.67 1.32 1.396 1.57.83-.65 1.793-.92 1.11 3.02 3.19 2.24 1.797-.79 1.39-1.97-.97-.526-1.11zM469.41 23.94v-.55l-2.5-2.076v2.08h1.05l1.45.555zm-1.975 113.3l1.05.97h-1.05l-.53-.97h.53zm3.02-121.89h.53l-1.572-1.66h-.522v.83l1.58.83zM469.4 147.9v.556h-.524v-.556h.526zm3.54-120.776h.536l-1.45-1.66h-.53v.834l1.44.83zm-.91 145.99v-.552h-.53l.53.558zm1.45 1.66h.52l-1.05-1.11h-.39l.923 1.11zm3.543-163.72v-1.1h-.92l.92 1.108zm2.1 149.73v.56l-.528-.56h.525zm4.6-156.236l2.49.554h2.103v3.2h-1.58l-4.983-3.74h1.964z\"/><path d=\"M1.116 226.64v-2.907l.552-2.18V198.84l12.293-1.904 20.03 1.173 6.63-1.31 20.03 1.3 4.15-.88h8.57l5.25 1.31 1.11 2.47-1.1 3.34.69 3.63v20.24l-2.21 1.17h-4.7l-2.21.58H50.42l-3.588-.87-3.452.88h-19.2l-3.868-.74-3.178.73H4.29l-3.174-3.36zm21.407 1.027h3.73l-3.867-.58-4.697-4.948-1.52-1.18-.55-.58-8.29-5.83-.83-2.62-1.11-2.33 1.1-.44.55-2.48 1.52 2.47h.55l3.17 1.6 1.11 1.16 2.48 1.3 1.24 2.62h1.38l4 3.36 4.56 3.2 2.62 4.08-2.35.73h7.87l.83-2.63-2.07 1.02-1.66-.88-.69-1.6h-.55l-2.35-1.17-1.38-2.18-2.21-1.16-2.63-2.19-1.11-.59v-2.18l-.97.43h-1.1l-2.21-3.34h-.97l-1.65-1.6v-2.33L12 208.14l-4-4.073v-.586l-.41-.58.414-.58 3.32.88 1.52-.87 2.76 1.16 5.8 4.38v2.32h1.103l2.49 2.04 1.795 2.48 2.21 1.16 1.52 1.76v1.61l1.105-.59v1.31l2.626 1.02 3.31 2.76 2.625 1.9v1.6h6.35l4.01.73 12.16-1.16-5.94-1.31-3.18-2.77-2.21-1.75-2.62-2.77-1.66-.87v-2.04l1.106-.57-1.38-.72-1.247 1.3-2.35-1.16-13.807-11.2-.55-1.32 2.76.74h2.07V201l3.45.877 3.04 3.192 3.176 1.75 4.834 5.1h1.1l6.91 5.67 1.66 1.02 3.176 3.49 2.21 1.01.417.58 2.763 1.89v1.16l-3.593-1.02-.69.87 1.106.59h9.53l3.18.57 1.1-1.17v-19.2l-.41-2.76-.69-4.52h-18.1l-3.87-.7-9.54.72H31.09l-3.315-.73-9.533.72h-7.458l-7.044.58v25.33l1.108 1.17h6.49l-1.106-1.17-2.21-1.17-.967-2.18-2.207-2.33 1.104-.59 1.24-3.2 1.938 2.04 6.49 4.51 3.313 3.65 3.59.87zm-6.904-8.44l1.51-1.032h-1.51l-.56.45.55.583zm24.58 1.165l-2.49-1.32-.69-1.45-.97.875-.69-1.458-1.11-.59-.56-1.17-2.07-1.17-.55-1.02-1.66-.58-.42-.59-6.49-4.52-4.42-4.66 6.49-1.31 3.31 2.62 3.18 3.34 6.49 5.68.96.59 2.21 1.59 4.28 3.06 8.7 7.71h-8.15l-5.39-5.67zm29.97 4.502l-1.38.734-1.8-1.896-.55-2.18h-2.48l-1.24-2.91-2.22-1.022-1.52-1.752-1.66-.582v-1.164l-3.73-1.453-1.11-2.48H50l-1.793-2.77-1.107-.58-.556-.59-.965-.59-1.11-2.76-1.38 1.45-1.25-1.45.41-.59h1.65l.55-.58h4.28l4.83 3.34 11.74 9.62.55.57 5.94 4.66v1.6l.96-1.02.55 2.18 1.38 2.03-3.18 1.75-1.38-1.61zm0-9.026h-1.38l-.83-2.465-1.52.72V213.1l-2.22-2.32-1.52-.592-.56-1.012H60.5V208l-3.177-1.155-4.835-5.098v-.582l3.73.582 1.66.584 4.97.73 11.05 9.18v2.48l.55 1.75v1.74l-2.62-.57-1.66-1.75zm-6.91.586h.41l-.42-.586h-.55l.55.586zm5.24-10.778l-1.52-1.013-1.66-1.748h8.15l1.24 3.784-1.11 2.47h-1.79l-3.32-3.5zm2.65 20.965v-2.9l.55-2.18v-22.72l12.29-1.9 20.02 1.18 6.63-1.31 20.03 1.31 4.14-.87h8.56l5.24 1.32 1.1 2.47-1.11 3.35.69 3.64v20.25l-2.21 1.17h-4.69l-2.21.59h-19.75l-3.59-.88-3.46.88H94.23l-3.87-.73-3.174.73H74.34l-3.174-3.36zm21.41 1.03h3.73l-3.87-.58-4.7-4.95-1.52-1.17-.56-.57-8.29-5.82-.83-2.62-1.11-2.33 1.11-.43.55-2.48 1.52 2.48h.55l3.17 1.61 1.11 1.17 2.49 1.3 1.24 2.62h1.38l4.01 3.36 4.55 3.2 2.63 4.08-2.35.73h7.87l.82-2.63-2.07 1.03-1.66-.87-.69-1.6h-.55l-2.32-1.2-1.38-2.18-2.21-1.15-2.63-2.19-1.11-.58v-2.18l-.97.43h-1.1l-2.21-3.34h-.97l-1.66-1.6v-2.33l-2.49 1.31-4.01-4.07v-.58l-.41-.57.41-.58 3.31.88 1.52-.87 2.76 1.16 5.8 4.38v2.33h1.11l2.48 2.04 1.79 2.48 2.21 1.16 1.52 1.75v1.6l1.1-.58v1.3l2.62 1.02 3.31 2.77 2.62 1.9v1.6h6.35l4.01.73 12.15-1.16-5.94-1.31-3.18-2.77-2.21-1.75-2.62-2.77-1.66-.87v-2.04l1.1-.57-1.38-.73-1.24 1.31-2.35-1.17L99.4 203l-.554-1.314 2.77.74h2.07v-1.31l3.46.87 3.04 3.2 3.18 1.75 4.835 5.09h1.11l6.91 5.68 1.65 1.02 3.18 3.5 2.22 1.01.41.58 2.76 1.9v1.17l-3.59-1.02-.69.87 1.11.59h9.53l3.18.575 1.1-1.16V207.5l-.41-2.76-.69-4.52h-18.1l-3.86-.72-9.53.72h-13.4l-3.31-.72-9.53.72H80.8l-7.04.59v25.33l1.11 1.17h6.49l-1.1-1.17-2.21-1.17-.97-2.18-2.2-2.33 1.11-.6 1.24-3.2 1.93 2.04 6.5 4.51 3.31 3.64 3.6.87zm-6.91-8.44l1.52-1.03h-1.52l-.56.45.55.59zm24.58 1.17l-2.49-1.32-.69-1.45-.97.88-.69-1.46-1.11-.58-.56-1.17-2.07-1.16-.55-1.02-1.66-.57-.41-.58-6.49-4.52-4.42-4.66 6.49-1.3 3.31 2.63 3.17 3.35 6.49 5.68.97.59 2.21 1.6 4.28 3.06 8.7 7.72h-8.14l-5.39-5.67zm29.97 4.5l-1.38.74-1.8-1.89-.55-2.18H134l-1.24-2.91-2.21-1.02-1.517-1.75-1.66-.58v-1.16l-3.73-1.45-1.105-2.48h-2.488l-1.796-2.76-1.104-.58-.556-.58-.963-.58-1.1-2.76-1.38 1.45-1.24-1.45.41-.58h1.66l.55-.58h4.28l4.84 3.34 11.74 9.63.55.57 5.94 4.66v1.61l.97-1.02.55 2.18 1.39 2.04-3.18 1.76-1.38-1.61zm0-9.02h-1.38l-.83-2.46-1.52.72v-1.03l-2.21-2.32-1.52-.59-.56-1.01h-1.66V208l-3.18-1.155-4.84-5.098v-.582l3.73.582 1.66.584 4.97.73 11.05 9.18v2.48l.55 1.75v1.74l-2.63-.57-1.66-1.75zm-6.91.59h.41l-.42-.58h-.55l.55.59zm5.24-10.78l-1.52-1.01-1.66-1.74h8.15l1.25 3.78-1.11 2.48h-1.8l-3.31-3.5zm2.65 20.97v-2.9l.55-2.18v-22.72l12.29-1.9 20.02 1.18 6.63-1.31 20.02 1.31 4.15-.87h8.56l5.25 1.31 1.1 2.48-1.11 3.35.69 3.64v20.25l-2.21 1.17h-4.7l-2.21.59H190.5l-3.593-.87-3.457.88h-19.19l-3.87-.73-3.174.74h-12.85l-3.177-3.36zm21.41 1.03h3.72l-3.86-.58-4.7-4.95-1.52-1.17-.55-.58-8.29-5.82-.83-2.62-1.11-2.33 1.1-.44.55-2.48 1.52 2.48h.55l3.18 1.61 1.1 1.17 2.48 1.31 1.24 2.62h1.38l4.01 3.36 4.56 3.2 2.62 4.08-2.35.73h7.88l.82-2.63-2.07 1.03-1.66-.87-.68-1.6h-.55l-2.33-1.2-1.38-2.18-2.21-1.16-2.63-2.19-1.1-.58v-2.18l-.97.43h-1.11l-2.21-3.34h-.97l-1.66-1.6v-2.33l-2.49 1.31-4.01-4.07v-.58l-.42-.57.41-.58 3.31.88 1.52-.87 2.76 1.16 5.8 4.38v2.32h1.1l2.48 2.04 1.79 2.48 2.21 1.16 1.52 1.75v1.61l1.1-.59v1.3l2.62 1.02 3.31 2.77 2.62 1.9v1.61h6.36l4 .73 12.15-1.17-5.94-1.31-3.18-2.77-2.21-1.74-2.63-2.77-1.66-.87v-2.04l1.1-.57-1.38-.73-1.24 1.31-2.35-1.17L169.4 203l-.55-1.32 2.76.73h2.07v-1.31l3.46.88 3.03 3.194 3.18 1.76 4.83 5.1h1.1l6.91 5.68 1.66 1.03 3.18 3.5 2.21 1.01.42.58 2.76 1.896v1.164l-3.59-1.02-.69.87 1.1.59h9.53l3.175.575 1.1-1.16V207.5l-.413-2.76-.69-4.52H197.9l-3.87-.724-9.53.726h-13.39l-3.31-.722-9.53.73h-7.45l-7.04.59v25.34l1.106 1.17h6.49l-1.104-1.17-2.21-1.17-.965-2.18-2.21-2.325 1.1-.59 1.25-3.2 1.94 2.044 6.49 4.5 3.32 3.64 3.582.87zm-6.91-8.44l1.52-1.03h-1.52l-.55.45.55.58zm24.59 1.17l-2.49-1.32-.69-1.45-.97.88-.69-1.46-1.11-.58-.56-1.16-2.07-1.16-.56-1.02-1.66-.57-.41-.58-6.49-4.52-4.42-4.66 6.49-1.3 3.32 2.63 3.17 3.35 6.49 5.68.97.59 2.21 1.6 4.28 3.06 8.7 7.72h-8.15l-5.39-5.67zm29.97 4.5l-1.38.74-1.8-1.89-.56-2.18h-2.49l-1.25-2.91-2.21-1.02-1.52-1.75-1.66-.58v-1.16l-3.73-1.45-1.1-2.48h-2.49l-1.8-2.76-1.1-.58-.55-.58-.97-.59-1.1-2.76-1.38 1.45-1.25-1.45.41-.58H184l.55-.58h4.28l4.834 3.34 11.74 9.62.555.58 5.94 4.66v1.61l.97-1.02.55 2.18 1.38 2.04-3.18 1.76-1.38-1.61zm0-9.02h-1.38l-.83-2.46-1.52.72v-1.03l-2.21-2.32-1.52-.59-.56-1.01h-1.66V208l-3.18-1.155-4.83-5.098v-.582l3.73.582 1.65.584 4.97.73 11.05 9.18v2.48l.55 1.75v1.74l-2.62-.57-1.66-1.75zm-6.91.59h.41l-.42-.58h-.56l.55.59zm5.24-10.78l-1.52-1.01-1.66-1.75h8.15l1.24 3.79-1.11 2.48h-1.79l-3.32-3.5zm2.65 20.97v-2.9l.55-2.18v-22.72l12.29-1.9 20.03 1.17 6.63-1.31 20.03 1.3 4.14-.87h8.56l5.25 1.31 1.1 2.48-1.11 3.34.69 3.64v20.25l-2.21 1.17h-4.69l-2.21.59h-19.75l-3.59-.88-3.45.88h-19.2l-3.87-.73-3.18.74H214.4l-3.18-3.36zm21.41 1.03h3.73l-3.87-.58-4.7-4.95-1.5-1.18-.56-.57-8.29-5.83-.83-2.62-1.11-2.33 1.1-.43.55-2.48 1.51 2.48h.55l3.17 1.61 1.11 1.17 2.48 1.3 1.24 2.62h1.38l4 3.36 4.56 3.2 2.62 4.08-2.34.73h7.87l.83-2.63-2.07 1.03-1.66-.88-.69-1.6h-.56l-2.34-1.17-1.38-2.18-2.21-1.15-2.63-2.19-1.1-.59v-2.18l-.97.43h-1.11l-2.21-3.34h-.96l-1.66-1.6v-2.33l-2.49 1.31-4-4.07v-.59l-.41-.58.41-.58 3.32.88 1.52-.87 2.76 1.16 5.8 4.37v2.33h1.1l2.49 2.04 1.8 2.48 2.21 1.16 1.52 1.75v1.61l1.11-.58v1.3l2.62 1.02 3.31 2.77 2.62 1.9v1.6h6.36l4.01.73 12.15-1.16-5.94-1.31-3.18-2.77-2.21-1.74-2.63-2.78-1.65-.87v-2.04l1.1-.57-1.38-.73-1.24 1.3-2.35-1.16-13.81-11.21-.56-1.32 2.76.74h2.07v-1.31l3.45.87 3.03 3.19 3.18 1.76 4.83 5.1h1.11l6.9 5.68 1.66 1.03 3.18 3.49 2.21 1.01.41.58 2.76 1.9v1.17l-3.59-1.02-.69.87 1.11.6h9.53l3.18.57 1.11-1.17V207.5l-.42-2.77-.69-4.52H268l-3.866-.73-9.53.72H241.2l-3.313-.72-9.525.723h-7.46l-7.05.59v25.33l1.1 1.17h6.49l-1.106-1.17-2.21-1.17-.96-2.18-2.21-2.33 1.103-.59 1.24-3.2 1.93 2.04 6.49 4.51 3.31 3.64 3.59.87zm-6.91-8.44l1.52-1.03h-1.52l-.56.45.55.59zm24.58 1.17l-2.49-1.32-.69-1.45-.96.88-.69-1.46-1.11-.58-.56-1.17-2.07-1.16-.55-1.02-1.66-.57-.42-.58-6.49-4.52-4.42-4.66 6.49-1.3 3.32 2.63 3.17 3.35 6.49 5.68.97.59 2.2 1.6 4.29 3.07 8.7 7.72h-8.15l-5.39-5.67zm29.97 4.5l-1.38.74-1.8-1.89-.56-2.18h-2.48l-1.25-2.91-2.21-1.02-1.52-1.75-1.66-.58v-1.16l-3.72-1.45-1.11-2.48h-2.48l-1.8-2.76-1.11-.58-.56-.58-.97-.59-1.1-2.76-1.38 1.45-1.24-1.45.42-.58h1.66l.55-.58h4.28l4.84 3.34 11.73 9.62.55.58 5.93 4.66v1.61l.97-1.02.55 2.18 1.38 2.04-3.18 1.76-1.38-1.61zm0-9.02h-1.38l-.83-2.46-1.52.72v-1.03l-2.21-2.32-1.52-.59-.55-1.01h-1.66V208l-3.17-1.155-4.84-5.098v-.582l3.73.582 1.65.584 4.97.73 11.05 9.18v2.48l.55 1.75v1.74l-2.63-.57-1.66-1.75zm-6.91.59h.41l-.41-.58h-.56l.55.59zm5.24-10.78l-1.52-1.01-1.66-1.75h8.15l1.24 3.79-1.1 2.48h-1.8l-3.31-3.5zm2.65 20.97v-2.91l.55-2.18v-22.72l12.3-1.9 20.02 1.17 6.63-1.31 20.03 1.3 4.15-.87h8.56l5.25 1.32 1.1 2.47-1.1 3.35.69 3.64v20.24l-2.21 1.16h-4.7l-2.21.59H330.6l-3.593-.87-3.456.88h-19.2l-3.87-.73-3.17.74h-12.84l-3.17-3.36zm21.41 1.03h3.73l-3.86-.58-4.7-4.95-1.52-1.17-.56-.57-8.29-5.83-.82-2.62-1.1-2.33 1.1-.43.55-2.47 1.52 2.48h.55l3.18 1.6 1.1 1.16 2.49 1.31 1.24 2.62h1.38l4.01 3.36 4.55 3.2 2.62 4.08-2.35.73h7.87l.83-2.63-2.08 1.03-1.66-.87-.69-1.6h-.55l-2.35-1.17-1.38-2.18-2.21-1.16-2.62-2.19-1.11-.59v-2.18l-.97.43h-1.11l-2.21-3.34h-.97l-1.66-1.6v-2.33l-2.48 1.31-4.01-4.08v-.58l-.41-.57.41-.58 3.31.88 1.52-.87 2.76 1.16 5.81 4.37v2.32h1.1l2.48 2.05 1.79 2.48 2.21 1.16 1.52 1.75v1.61l1.1-.59v1.3l2.62 1.02 3.31 2.77 2.63 1.89v1.61h6.35l4 .73 12.15-1.17-5.93-1.31-3.19-2.77-2.2-1.75-2.62-2.77-1.66-.87v-2.04l1.11-.57-1.32-.8-1.25 1.31-2.34-1.16-13.81-11.21-.55-1.31 2.76.74h2.07v-1.31l3.46.88 3.04 3.19 3.17 1.76 4.84 5.1h1.1l6.91 5.68 1.66 1.02 3.18 3.5 2.21 1.01.42.58 2.76 1.89v1.17l-3.59-1.02-.69.86 1.11.59H353l3.174.57 1.104-1.17v-19.21l-.413-2.76-.69-4.52h-18.092l-3.867-.72-9.536.73h-13.394l-3.316-.72-9.528.72h-7.46l-7.044.59v25.33l1.104 1.17h6.493l-1.106-1.17-2.21-1.17-.97-2.18-2.22-2.33 1.1-.59 1.24-3.2 1.93 2.04 6.49 4.51 3.31 3.65 3.59.87zm-6.9-8.44l1.52-1.03h-1.52l-.55.45.55.58zm24.59 1.16l-2.49-1.32-.69-1.45-.96.88-.7-1.46-1.11-.58-.55-1.17-2.07-1.16-.55-1.02-1.66-.57-.42-.59-6.49-4.52-4.42-4.66 6.49-1.31 3.31 2.63 3.18 3.34 6.48 5.68.97.59 2.21 1.6 4.28 3.06 8.7 7.72h-8.15l-5.38-5.67zm29.97 4.51l-1.38.74-1.8-1.9-.55-2.18h-2.49l-1.25-2.91-2.21-1.02-1.52-1.75-1.65-.58v-1.16l-3.74-1.45-1.11-2.48h-2.48l-1.79-2.77-1.11-.58-.55-.58-.98-.58-1.11-2.76-1.38 1.45-1.23-1.45.41-.58h1.66l.55-.58h4.29l4.82 3.34 11.75 9.62.55.58L352 220v1.605l.97-1.02.56 2.184 1.38 2.03-3.18 1.75-1.38-1.61zm0-9.02h-1.38l-.83-2.47-1.52.72v-1.03l-2.21-2.32-1.52-.59-.55-1.01h-1.66V208l-3.17-1.155-4.84-5.098v-.582l3.73.582 1.66.584 4.97.73 11.05 9.18v2.48l.56 1.75v1.74l-2.63-.57-1.66-1.75zm-6.91.58h.42l-.42-.58h-.56l.55.59zm5.25-10.78l-1.52-1.01-1.66-1.74h8.15l1.25 3.78-1.11 2.48H352l-3.31-3.5zm2.64 20.97v-2.91l.55-2.18V198.9l12.29-1.906 20.02 1.174 6.63-1.31 20.03 1.3 4.15-.88h8.56l5.25 1.31 1.1 2.47-1.1 3.347.68 3.633v20.245l-2.21 1.167h-4.69l-2.21.59H400.6l-3.594-.875-3.46.88H374.4l-3.86-.74-3.187.73h-12.85l-3.18-3.36zm21.41 1.02h3.72l-3.87-.58-4.69-4.95-1.5-1.18-.56-.57-8.29-5.83-.83-2.62-1.11-2.33 1.11-.44.56-2.48 1.51 2.48h.55l3.18 1.61 1.11 1.16 2.49 1.31 1.24 2.62h1.38l4 3.36 4.55 3.2 2.63 4.08-2.36.73h7.88l.82-2.63-2.07 1.03-1.66-.87-.69-1.61h-.55l-2.35-1.18-1.39-2.18-2.21-1.15-2.63-2.19-1.11-.59v-2.17l-.97.43h-1.1l-2.21-3.34h-.96l-1.66-1.6v-2.33l-2.49 1.31-4.01-4.08v-.59l-.41-.58.41-.58 3.31.88 1.52-.88 2.77 1.16 5.8 4.37v2.32h1.1l2.49 2.04 1.79 2.48 2.21 1.16 1.53 1.75v1.6l1.1-.58v1.3l2.62 1.02 3.31 2.77 2.62 1.9v1.6h6.35l4 .73 12.16-1.16-5.94-1.31-3.18-2.77-2.22-1.75-2.61-2.77-1.66-.87v-2.04l1.11-.57-1.39-.73-1.24 1.3-2.35-1.16-13.82-11.21-.55-1.32 2.76.73h2.07v-1.31l3.46.88 3.03 3.19 3.17 1.75 4.85 5.1h1.1l6.9 5.67 1.66 1.03 3.17 3.49 2.21 1.01.41.58 2.76 1.89v1.16l-3.59-1.02-.7.86 1.11.59h9.53l3.17.57 1.1-1.16V207.4l-.41-2.76-.7-4.52h-18l-3.87-.725-9.53.72h-13.4l-3.31-.72-9.53.72H361l-7.04.59v25.33l1.1 1.17h6.49l-1.11-1.17-2.206-1.17-.965-2.18-2.21-2.325 1.1-.59 1.23-3.2 1.94 2.04 6.49 4.507 3.31 3.645 3.58.873zm-6.9-8.44l1.51-1.03h-1.51l-.55.45.55.59zm24.58 1.17l-2.48-1.32-.7-1.45-.97.87-.69-1.46-1.11-.58-.55-1.17-2.07-1.16-.55-1.02-1.66-.57-.42-.58-6.49-4.52-4.42-4.66 6.49-1.31 3.31 2.62 3.18 3.35 6.49 5.68.97.59 2.21 1.6 4.27 3.07 8.71 7.71h-8.15l-5.38-5.67zm29.97 4.5l-1.38.73-1.8-1.9-.56-2.18h-2.48l-1.24-2.91-2.21-1.02-1.52-1.75-1.65-.58v-1.16l-3.73-1.45-1.11-2.48h-2.49l-1.79-2.76-1.11-.58-.55-.59-.97-.58-1.11-2.76-1.38 1.45-1.24-1.45.41-.58h1.66l.55-.59h4.3l4.83 3.35 11.74 9.62.56.57 5.93 4.66v1.61l.97-1.02.56 2.18 1.38 2.04-3.18 1.75-1.39-1.61zm0-9.03H419l-.83-2.47-1.52.72v-1.02l-2.22-2.32-1.516-.59-.55-1.01h-1.655V208l-3.18-1.155-4.84-5.098v-.582l3.73.582 1.66.584 4.97.73 11.05 9.18v2.48l.55 1.75v1.74l-2.63-.57-1.66-1.75zm-6.9.59h.41l-.41-.59h-.55l.55.59zm5.24-10.78l-1.51-1.01-1.66-1.75h8.15l1.24 3.78-1.11 2.48h-1.8l-3.32-3.5zm2.65 20.97v-2.91l.55-2.18V198.9l12.3-1.9 20.02 1.17 6.62-1.305 20.03 1.3 4.14-.873h8.56l5.25 1.31 1.1 2.47-1.1 3.35.68 3.64v20.24l-2.21 1.17h-4.69l-2.22.59h-19.7l-3.6-.875-3.46.88h-19.2l-3.88-.735-3.18.73h-12.84l-3.18-3.36zm21.41 1.03h3.72l-3.87-.58-4.7-4.95-1.5-1.17-.56-.58-8.29-5.82-.82-2.62-1.11-2.33 1.11-.44.55-2.47 1.51 2.48h.55l3.17 1.6 1.1 1.16 2.49 1.3 1.24 2.63h1.38l4.01 3.36 4.55 3.2 2.62 4.08-2.34.73h7.87l.82-2.63-2.08 1.02-1.66-.87-.69-1.6h-.55l-2.34-1.18-1.38-2.18-2.22-1.15-2.62-2.19-1.11-.59v-2.18l-.98.43h-1.1l-2.21-3.34h-.96l-1.66-1.61v-2.33l-2.49 1.31-4.01-4.07v-.58l-.41-.58.4-.58 3.32.87 1.52-.87 2.76 1.16 5.8 4.37v2.32h1.11l2.48 2.04 1.79 2.48 2.21 1.16 1.53 1.75v1.61l1.11-.58v1.3l2.62 1.02 3.32 2.76 2.63 1.9v1.6h6.35l4 .73 12.15-1.16-5.93-1.31-3.19-2.77-2.21-1.75-2.62-2.77-1.66-.87v-2.04l1.11-.57-1.39-.73-1.24 1.3-2.34-1.17-13.81-11.21-.55-1.31 2.76.73h2.1v-1.31l3.46.87 3.03 3.2 3.17 1.75 4.84 5.1h1.1l6.91 5.68 1.65 1.03 3.17 3.5 2.21 1.01.42.58 2.76 1.9v1.16l-3.59-1.02-.7.87 1.1.6H493l3.17.57 1.1-1.16V207.5l-.41-2.76-.7-4.52H478.1l-3.87-.72-9.55.725H451.3l-3.31-.73-9.54.73H431l-7.05.584v25.33l1.1 1.17h6.48l-1.11-1.17-2.21-1.17-.96-2.18-2.21-2.32 1.104-.59 1.24-3.2 1.94 2.04 6.49 4.51 3.32 3.64 3.592.87zm-6.91-8.44l1.51-1.03h-1.52l-.55.45.55.58zm24.59 1.16l-2.49-1.32-.7-1.45-.96.88-.69-1.46-1.11-.58-.55-1.17-2.07-1.16-.56-1.02-1.66-.57-.42-.58-6.48-4.52-4.43-4.66 6.49-1.31 3.31 2.63 3.18 3.35 6.48 5.68.97.59 2.21 1.6 4.28 3.06 8.7 7.72h-8.15l-5.38-5.67zm29.96 4.51l-1.38.73-1.79-1.9-.55-2.18h-2.49l-1.25-2.91-2.21-1.02-1.52-1.75-1.66-.58v-1.16l-3.73-1.45-1.1-2.48h-2.5l-1.79-2.76-1.11-.58-.55-.58-.97-.58-1.11-2.76-1.38 1.45-1.24-1.45.41-.58h1.66l.54-.58h4.3l4.83 3.34 11.74 9.62.55.58 5.94 4.66v1.61l.97-1.02.55 2.18 1.4 2.03-3.18 1.76-1.38-1.61zm0-9.03h-1.38l-.83-2.46-1.51.72v-1.03l-2.22-2.32-1.53-.59-.55-1.01h-1.65V208l-3.17-1.155-4.84-5.098v-.582l3.73.582 1.65.584 4.98.73 11.05 9.18v2.48l.55 1.75v1.74l-2.63-.57-1.66-1.75zm-6.91.59h.42l-.43-.59h-.5l.55.59zm5.24-10.78l-1.51-1.02-1.67-1.75h8.14l1.26 3.79-1.12 2.48h-1.8l-3.32-3.5z\" fill=\"#72D4D7\"/></svg>",
      "size_chars": 73253,
      "sha256": "d717acba7b8938ae3080ef2402fdf5c753818416f13d3582abf0beaca51ba02f",
      "estimated_tokens": 18313
    },
    {
      "path": "package.json",
      "content": "{\n\t\"name\": \"chalk\",\n\t\"version\": \"5.6.2\",\n\t\"description\": \"Terminal string styling done right\",\n\t\"license\": \"MIT\",\n\t\"repository\": \"chalk/chalk\",\n\t\"funding\": \"https://github.com/chalk/chalk?sponsor=1\",\n\t\"type\": \"module\",\n\t\"main\": \"./source/index.js\",\n\t\"exports\": \"./source/index.js\",\n\t\"imports\": {\n\t\t\"#ansi-styles\": \"./source/vendor/ansi-styles/index.js\",\n\t\t\"#supports-color\": {\n\t\t\t\"node\": \"./source/vendor/supports-color/index.js\",\n\t\t\t\"default\": \"./source/vendor/supports-color/browser.js\"\n\t\t}\n\t},\n\t\"types\": \"./source/index.d.ts\",\n\t\"sideEffects\": false,\n\t\"engines\": {\n\t\t\"node\": \"^12.17.0 || ^14.13 || >=16.0.0\"\n\t},\n\t\"scripts\": {\n\t\t\"test\": \"xo && c8 ava && tsd\",\n\t\t\"bench\": \"matcha benchmark.js\"\n\t},\n\t\"files\": [\n\t\t\"source\",\n\t\t\"!source/index.test-d.ts\"\n\t],\n\t\"keywords\": [\n\t\t\"color\",\n\t\t\"colour\",\n\t\t\"colors\",\n\t\t\"terminal\",\n\t\t\"console\",\n\t\t\"cli\",\n\t\t\"string\",\n\t\t\"ansi\",\n\t\t\"style\",\n\t\t\"styles\",\n\t\t\"tty\",\n\t\t\"formatting\",\n\t\t\"rgb\",\n\t\t\"256\",\n\t\t\"shell\",\n\t\t\"xterm\",\n\t\t\"log\",\n\t\t\"logging\",\n\t\t\"command-line\",\n\t\t\"text\"\n\t],\n\t\"devDependencies\": {\n\t\t\"@types/node\": \"^16.11.10\",\n\t\t\"ava\": \"^3.15.0\",\n\t\t\"c8\": \"^7.10.0\",\n\t\t\"color-convert\": \"^2.0.1\",\n\t\t\"execa\": \"^6.0.0\",\n\t\t\"log-update\": \"^5.0.0\",\n\t\t\"matcha\": \"^0.7.0\",\n\t\t\"tsd\": \"^0.19.0\",\n\t\t\"xo\": \"^0.57.0\",\n\t\t\"yoctodelay\": \"^2.0.0\"\n\t},\n\t\"xo\": {\n\t\t\"rules\": {\n\t\t\t\"unicorn/prefer-string-slice\": \"off\",\n\t\t\t\"@typescript-eslint/consistent-type-imports\": \"off\",\n\t\t\t\"@typescript-eslint/consistent-type-exports\": \"off\",\n\t\t\t\"@typescript-eslint/consistent-type-definitions\": \"off\",\n\t\t\t\"unicorn/expiring-todo-comments\": \"off\"\n\t\t}\n\t},\n\t\"c8\": {\n\t\t\"reporter\": [\n\t\t\t\"text\",\n\t\t\t\"lcov\"\n\t\t],\n\t\t\"exclude\": [\n\t\t\t\"source/vendor\"\n\t\t]\n\t}\n}\n",
      "size_chars": 1640,
      "sha256": "ef029c254479723c952a24c0d8d758378bd8ddf031f5bd6f027f65e1a3d030f3",
      "estimated_tokens": 410
    },
    {
      "path": "paleae.py",
      "content": "#!/usr/bin/env python3\n# SPDX-License-Identifier: MIT\n# Copyright (c) 2025 Paul Tiffany\n# Project: paleae - Snapshot your repo for LLMs\n# Website: https://paleae.com\n# Source:  https://github.com/PaulTiffany/paleae\n\n\"\"\"\npaleae - Create JSON/JSONL snapshots of your repository for LLMs.\n\nA single-file, zero-dependency tool that scans your codebase and creates\nstructured snapshots optimized for AI analysis and processing.\n\"\"\"\nimport argparse\nimport fnmatch\nimport hashlib\nimport json\nimport re\nimport sys\nimport time\nfrom pathlib import Path\nfrom typing import Any, Optional\n\n# Project metadata (also embedded in output)\n__version__ = \"1.2.0\" # Version bump for ignore negation feature\n__license__ = \"MIT\"\n__website__ = \"https://paleae.com\"\n__source__ = \"https://github.com/PaulTiffany/paleae\"\n\n# --- Configuration ---\nMAX_SIZE = 10 * 1024 * 1024  # 10MB\nPALEAEIGNORE = \".paleaeignore\"\n\nTEXT_EXTS = {\n    \".py\", \".md\", \".rst\", \".txt\", \".json\", \".yaml\", \".yml\", \".toml\", \".ini\",\n    \".cfg\", \".xml\", \".csv\", \".tsv\", \".html\", \".css\", \".js\", \".ts\", \".tsx\",\n    \".c\", \".h\", \".cpp\", \".hpp\", \".java\", \".kt\", \".go\", \".rs\", \".rb\", \".php\",\n    \".sh\", \".ps1\"\n}\n\nDEFAULT_SKIP = [\n    r\"(^|/)\\.(git|hg|svn)($|/)\",\n    r\"(^|/)__pycache__($|/)\",\n    r\"(^|/)\\.(pytest|mypy|ruff)_cache($|/)\",\n    r\"(^|/)(\\.?venv|env)($|/)\",\n    r\"(^|/)node_modules($|/)\",\n    r\"(^|/)(build|dist)($|/)\",\n    r\"(^|/)coverage($|/)\",\n    r\"(^|/)htmlcov($|/)\",\n    r\"(^|/)\\.coverage($|/)?\",\n    r\"(^|/)\\.env($|/)\",\n    r\"(^|/)\" + re.escape(PALEAEIGNORE) + r\"($|/)?\", # Ignore our own config file\n]\n\nPROFILES = {\n    \"minimal\": {\"include\": [r\".*\"], \"exclude\": DEFAULT_SKIP},\n    \"ai_optimized\": {\n        \"include\": [\n            r\"^(src|tests)(/.*)?$\",\n            r\"^pyproject\\.toml$\",\n            r\"^README(\\.md|\\.rst)?$\",\n            r\"^(ROADMAP|CHANGELOG)\\.md$\",\n        ],\n        \"exclude\": DEFAULT_SKIP + [r\"(^|/)docs/\"]\n    },\n}\n\n# --- Core Logic ---\n\nclass PaleaeError(Exception):\n    \"\"\"Base exception for paleae operations.\"\"\"\n\ndef token_estimate(text: str) -> int:\n    \"\"\"Estimate tokens using 4-char heuristic.\"\"\"\n    return max(1, len(text) // 4) if text else 0\n\ndef is_text_file(path: Path) -> bool:\n    \"\"\"Check if file should be treated as text.\"\"\"\n    if not path.is_file():\n        return False\n    try:\n        size = path.stat().st_size\n        if size == 0:\n            return path.suffix.lower() in TEXT_EXTS or path.suffix == \"\"\n        if size > MAX_SIZE:\n            return False\n        with path.open(\"rb\") as f:\n            chunk = f.read(min(1024, size))\n        if b\"\\x00\" in chunk:\n            return False\n        chunk.decode(\"utf-8\")\n        return True\n    except (OSError, UnicodeDecodeError, PermissionError):\n        return False\n\ndef _translate_globs_to_regex(globs: list[str]) -> list[str]:\n    \"\"\"Translate shell globs to regex strings with normalization.\"\"\"\n    regex_list: list[str] = []\n    for glob_pattern in globs:\n        line = glob_pattern.strip()\n        if not line or line.startswith(\"#\"):\n            continue\n        # fnmatch.translate handles **, *, ?, and char classes\n        regex_list.append(fnmatch.translate(line))\n    return regex_list\n\ndef read_paleaeignore(root: Path) -> tuple[list[str], list[str]]:\n    \"\"\"Return (positive_globs, negative_globs) from .paleaeignore.\"\"\"\n    pos: list[str] = []\n    neg: list[str] = []\n    path = root / PALEAEIGNORE\n    if not path.is_file():\n        return pos, neg\n    try:\n        lines = path.read_text(encoding=\"utf-8\", errors=\"ignore\").splitlines()\n        for line_item in lines:\n            line = line_item.strip()\n            if not line or line.startswith(\"#\"):\n                continue\n            if line.startswith(\"!\"):\n                neg.append(line[1:].strip())\n            else:\n                pos.append(line)\n    except (OSError, PermissionError):\n        print(f\"Warning: Could not read {PALEAEIGNORE}\", file=sys.stderr)\n    return pos, neg\n\ndef compile_patterns(patterns: Optional[list[str]]) -> list[re.Pattern[str]]:\n    \"\"\"Compile regex patterns with error handling.\"\"\"\n    if not patterns:\n        return []\n    compiled = []\n    for pattern in patterns:\n        try:\n            compiled.append(re.compile(pattern))\n        except re.error as e:\n            raise PaleaeError(f\"Invalid regex '{pattern}': {e}\") from e\n    return compiled\n\ndef matches_any(text: str, patterns: list[re.Pattern[str]]) -> bool:\n    \"\"\"Check if text matches any pattern.\"\"\"\n    return any(p.search(text) for p in patterns)\n\ndef collect_files(\n    root: Path,\n    inc_patterns: list[re.Pattern[str]],\n    exc_patterns: list[re.Pattern[str]],\n    ign_pos_patterns: list[re.Pattern[str]],\n    ign_neg_patterns: list[re.Pattern[str]]\n) -> list[str]:\n    \"\"\"Collect files matching all filter criteria.\"\"\"\n    if not root.is_dir():\n        raise PaleaeError(f\"Directory not found: {root}\")\n    \n    files = []\n    try:\n        for path in root.rglob(\"*\"):\n            if not path.is_file():\n                continue\n            try:\n                rel_path = path.relative_to(root).as_posix()\n            except ValueError:\n                continue\n\n            # Step 1: Check if the path is excluded by default, CLI, or .paleaeignore\n            is_excluded = (matches_any(rel_path, exc_patterns) or \n                           matches_any(rel_path, ign_pos_patterns))\n\n            # Step 2: A negative pattern (!) in .paleaeignore overrides any exclusion\n            if is_excluded and matches_any(rel_path, ign_neg_patterns):\n                is_excluded = False\n\n            if is_excluded:\n                continue\n\n            # Step 3: Check if the path meets the inclusion criteria\n            if inc_patterns and not matches_any(rel_path, inc_patterns):\n                continue\n\n            if is_text_file(path):\n                files.append(rel_path)\n    except (OSError, PermissionError) as e:\n        raise PaleaeError(f\"Error traversing {root}: {e}\") from e\n    return sorted(files)\n\ndef build_snapshot(root: Path, rel_files: list[str], ignore_meta: dict[str, Any]) -> dict[str, Any]:\n    \"\"\"Build complete snapshot data, including metadata.\"\"\"\n    files_data, total_chars, total_tokens = [], 0, 0\n    for rel_path in rel_files:\n        full_path = root / rel_path\n        try:\n            content = full_path.read_text(encoding=\"utf-8\", errors=\"ignore\")\n            if not content.strip():\n                continue\n        except (OSError, PermissionError, UnicodeDecodeError):\n            continue\n\n        chars = len(content)\n        tokens = token_estimate(content)\n        files_data.append({\n            \"path\": rel_path,\n            \"content\": content,\n            \"size_chars\": chars,\n            \"sha256\": hashlib.sha256(content.encode(\"utf-8\", errors=\"ignore\")).hexdigest(),\n            \"estimated_tokens\": tokens,\n        })\n        total_chars += chars\n        total_tokens += tokens\n        \n    return {\n        \"meta\": {\n            \"tool\": \"paleae\", \"version\": __version__, \"license\": __license__,\n            \"website\": __website__, \"source\": __source__,\n            \"timestamp\": time.strftime(\"%Y-%m-%dT%H:%M:%SZ\", time.gmtime()),\n            \"root_directory\": str(root),\n            \"ignore_file\": ignore_meta,\n            \"summary\": {\n                \"total_files\": len(files_data),\n                \"total_chars\": total_chars,\n                \"estimated_tokens\": total_tokens\n            }\n        },\n        \"files\": files_data\n    }\n\ndef write_output(path: Path, data: dict[str, Any], format: str) -> None:\n    \"\"\"Write data as JSON or JSONL file.\"\"\"\n    try:\n        path.parent.mkdir(parents=True, exist_ok=True)\n        if format == \"json\":\n            content = json.dumps(data, indent=2, ensure_ascii=False)\n            path.write_text(content, encoding=\"utf-8\")\n        else: # jsonl\n            with path.open(\"w\", encoding=\"utf-8\") as f:\n                f.write(json.dumps({\"type\": \"meta\", **data[\"meta\"]}, ensure_ascii=False) + \"\\n\")\n                for row in data[\"files\"]:\n                    f.write(json.dumps({\"type\": \"file\", **row}, ensure_ascii=False) + \"\\n\")\n    except (OSError, PermissionError) as e:\n        raise PaleaeError(f\"Error writing {path}: {e}\") from e\n\n# --- CLI and Main Execution ---\n\ndef create_parser() -> argparse.ArgumentParser:\n    \"\"\"Create CLI argument parser.\"\"\"\n    parser = argparse.ArgumentParser(\n        description=\"Create JSON/JSONL snapshot of your repo for LLMs\"\n    )\n    parser.add_argument(\n        \"directory\", nargs=\"?\", default=\".\", help=\"Directory to snapshot (default: .)\"\n    )\n    parser.add_argument(\n        \"-o\", \"--out\", help=\"Output file (auto-named if not specified)\"\n    )\n    parser.add_argument(\n        \"-f\", \"--format\", choices=[\"json\", \"jsonl\"], default=\"json\", help=\"Output format\"\n    )\n    parser.add_argument(\n        \"--profile\", choices=list(PROFILES.keys()), default=\"minimal\",\n        help=\"File inclusion profile\"\n    )\n    parser.add_argument(\n        \"--include\", action=\"append\", help=\"Extra include regex (repeatable)\"\n    )\n    parser.add_argument(\n        \"--exclude\", action=\"append\", help=\"Extra exclude regex (repeatable)\"\n    )\n    parser.add_argument(\"--version\", action=\"version\", version=f\"paleae {__version__}\")\n    parser.add_argument(\"--about\", action=\"store_true\", help=\"Show project info and exit\")\n    return parser\n\ndef main() -> int: # noqa: PLR0911\n    \"\"\"Run the main entry point.\"\"\"\n    parser = create_parser()\n    args = parser.parse_args()\n\n    if args.about:\n        print(\n            f\"paleae {__version__} ({__license__})\\n\"\n            f\"Website: {__website__}\\n\"\n            f\"Source:  {__source__}\"\n        )\n        return 0\n\n    try:\n        # --- Setup ---\n        root = Path(args.directory).resolve()\n        if not root.is_dir():\n            print(f\"Error: '{args.directory}' is not a directory\", file=sys.stderr)\n            return 1\n\n        # --- Pattern Compilation ---\n        profile = PROFILES.get(args.profile, PROFILES[\"minimal\"])\n        inc_cli = compile_patterns((args.include or []) + profile[\"include\"])\n        exc_cli = compile_patterns((args.exclude or []) + profile[\"exclude\"])\n\n        pos_globs, neg_globs = read_paleaeignore(root)\n        ign_pos_rx = compile_patterns(_translate_globs_to_regex(pos_globs))\n        ign_neg_rx = compile_patterns(_translate_globs_to_regex(neg_globs))\n        ignore_meta = {\n            \"file\": PALEAEIGNORE,\n            \"present\": bool(pos_globs or neg_globs),\n            \"patterns\": len(pos_globs),\n            \"negations\": len(neg_globs),\n        }\n\n        # --- File Collection ---\n        files = collect_files(root, inc_cli, exc_cli, ign_pos_rx, ign_neg_rx)\n        if not files:\n            print(\"No text files found matching criteria.\", file=sys.stderr)\n            return 1\n\n        # --- Snapshot Generation & Output ---\n        data = build_snapshot(root, files, ignore_meta)\n        out_path = Path(args.out) if args.out else Path(f\"repo_snapshot.{args.format}\")\n        write_output(out_path, data, args.format)\n\n        # --- Summary ---\n        s = data[\"meta\"][\"summary\"]\n        print(f\"✓ Snapshot saved to {out_path}\")\n        print(\n            f\"  Files: {s['total_files']}  \"\n            f\"Characters: {s['total_chars']:,}  \"\n            f\"Tokens: {s['estimated_tokens']:,}\"\n        )\n        return 0\n\n    except PaleaeError as e:\n        print(f\"Error: {e}\", file=sys.stderr)\n        return 1\n    except KeyboardInterrupt:\n        print(\"\\nCancelled by user\", file=sys.stderr)\n        return 1\n    except Exception as e:\n        print(f\"Unexpected error: {e}\", file=sys.stderr)\n        return 1\n\ndef cli_entrypoint() -> None:\n    \"\"\"Console entry point (kept tiny so tests can patch sys.exit).\"\"\"\n    sys.exit(main())\n\nif __name__ == \"__main__\":\n    cli_entrypoint()\n",
      "size_chars": 11773,
      "sha256": "b1dea0471bc5030b6abc21ba342c0c4f5297b6b3c838f126b59dfc4811a1add0",
      "estimated_tokens": 2943
    },
    {
      "path": "readme.md",
      "content": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"320\" src=\"media/logo.svg\" alt=\"Chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Coverage Status](https://codecov.io/gh/chalk/chalk/branch/main/graph/badge.svg)](https://codecov.io/gh/chalk/chalk)\n[![npm dependents](https://badgen.net/npm/dependents/chalk)](https://www.npmjs.com/package/chalk?activeTab=dependents)\n[![Downloads](https://badgen.net/npm/dt/chalk)](https://www.npmjs.com/package/chalk)\n\n![](media/screenshot.png)\n\n## Info\n\n- [Why not switch to a smaller coloring package?](https://github.com/chalk/chalk?tab=readme-ov-file#why-not-switch-to-a-smaller-coloring-package)\n- See [yoctocolors](https://github.com/sindresorhus/yoctocolors) for a smaller alternative\n\n## Highlights\n\n- Expressive API\n- Highly performant\n- No dependencies\n- Ability to nest styles\n- [256/Truecolor color support](#256-and-truecolor-color-support)\n- Auto-detects color support\n- Doesn't extend `String.prototype`\n- Clean and focused\n- Actively maintained\n- [Used by ~115,000 packages](https://www.npmjs.com/browse/depended/chalk) as of July 4, 2024\n\n## Install\n\n```sh\nnpm install chalk\n```\n\n**IMPORTANT:** Chalk 5 is ESM. If you want to use Chalk with TypeScript or a build tool, you will probably want to use Chalk 4 for now. [Read more.](https://github.com/chalk/chalk/releases/tag/v5.0.0)\n\n## Usage\n\n```js\nimport chalk from 'chalk';\n\nconsole.log(chalk.blue('Hello world!'));\n```\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nimport chalk from 'chalk';\n\nconst log = console.log;\n\n// Combine styled and normal strings\nlog(chalk.blue('Hello') + ' World' + chalk.red('!'));\n\n// Compose multiple styles using the chainable API\nlog(chalk.blue.bgRed.bold('Hello world!'));\n\n// Pass in multiple arguments\nlog(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz'));\n\n// Nest styles\nlog(chalk.red('Hello', chalk.underline.bgBlue('world') + '!'));\n\n// Nest styles of the same type even (color, underline, background)\nlog(chalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n));\n\n// ES2015 template literal\nlog(`\nCPU: ${chalk.red('90%')}\nRAM: ${chalk.green('40%')}\nDISK: ${chalk.yellow('70%')}\n`);\n\n// Use RGB colors in terminal emulators that support it.\nlog(chalk.rgb(123, 45, 67).underline('Underlined reddish color'));\nlog(chalk.hex('#DEADED').bold('Bold gray!'));\n```\n\nEasily define your own themes:\n\n```js\nimport chalk from 'chalk';\n\nconst error = chalk.bold.red;\nconst warning = chalk.hex('#FFA500'); // Orange color\n\nconsole.log(error('Error!'));\nconsole.log(warning('Warning!'));\n```\n\nTake advantage of console.log [string substitution](https://nodejs.org/docs/latest/api/console.html#console_console_log_data_args):\n\n```js\nimport chalk from 'chalk';\n\nconst name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> 'Hello Sindre'\n```\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `chalk.red.yellow.green` is equivalent to `chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.level\n\nSpecifies the level of color support.\n\nColor support is automatically detected, but you can override it by setting the `level` property. You should however only do this in your own code as it applies globally to all Chalk consumers.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nimport {Chalk} from 'chalk';\n\nconst customChalk = new Chalk({level: 0});\n```\n\n| Level | Description |\n| :---: | :--- |\n| `0` | All colors disabled |\n| `1` | Basic color support (16 colors) |\n| `2` | 256 color support |\n| `3` | Truecolor support (16 million colors) |\n\n### supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, use the environment variable `FORCE_COLOR=1` (level 1), `FORCE_COLOR=2` (level 2), or `FORCE_COLOR=3` (level 3) to forcefully enable color, or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n### chalkStderr and supportsColorStderr\n\n`chalkStderr` contains a separate instance configured with color support detected for `stderr` stream instead of `stdout`. Override rules from `supportsColor` apply to this too. `supportsColorStderr` is exposed for convenience.\n\n### modifierNames, foregroundColorNames, backgroundColorNames, and colorNames\n\nAll supported style strings are exposed as an array of strings for convenience. `colorNames` is the combination of `foregroundColorNames` and `backgroundColorNames`.\n\nThis can be useful if you wrap Chalk and need to validate input:\n\n```js\nimport {modifierNames, foregroundColorNames} from 'chalk';\n\nconsole.log(modifierNames.includes('bold'));\n//=> true\n\nconsole.log(foregroundColorNames.includes('pink'));\n//=> false\n```\n\n## Styles\n\n### Modifiers\n\n- `reset` - Reset the current style.\n- `bold` - Make the text bold.\n- `dim` - Make the text have lower opacity.\n- `italic` - Make the text italic. *(Not widely supported)*\n- `underline` - Put a horizontal line below the text. *(Not widely supported)*\n- `overline` - Put a horizontal line above the text. *(Not widely supported)*\n- `inverse`- Invert background and foreground colors.\n- `hidden` - Print the text but make it invisible.\n- `strikethrough` - Puts a horizontal line through the center of the text. *(Not widely supported)*\n- `visible`- Print the text only when Chalk has a color level above zero. Can be useful for things that are purely cosmetic.\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `blackBright` (alias: `gray`, `grey`)\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright` (alias: `bgGray`, `bgGrey`)\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n## 256 and Truecolor color support\n\nChalk supports 256 colors and [Truecolor](https://github.com/termstandard/colors) (16 million colors) on supported terminal apps.\n\nColors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying `{level: n}` as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red).\n\nExamples:\n\n- `chalk.hex('#DEADED').underline('Hello, world!')`\n- `chalk.rgb(15, 100, 204).inverse('Hello!')`\n\nBackground versions of these models are prefixed with `bg` and the first level of the module capitalized (e.g. `hex` for foreground colors and `bgHex` for background colors).\n\n- `chalk.bgHex('#DEADED').underline('Hello, world!')`\n- `chalk.bgRgb(15, 100, 204).inverse('Hello!')`\n\nThe following color models can be used:\n\n- [`rgb`](https://en.wikipedia.org/wiki/RGB_color_model) - Example: `chalk.rgb(255, 136, 0).bold('Orange!')`\n- [`hex`](https://en.wikipedia.org/wiki/Web_colors#Hex_triplet) - Example: `chalk.hex('#FF8800').bold('Orange!')`\n- [`ansi256`](https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit) - Example: `chalk.bgAnsi256(194)('Honeydew, more or less')`\n\n## Browser support\n\nSince Chrome 69, ANSI escape codes are natively supported in the developer console.\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [Windows Terminal](https://github.com/microsoft/terminal) instead of `cmd.exe`.\n\n## FAQ\n\n### Why not switch to a smaller coloring package?\n\nChalk may be larger, but there is a reason for that. It offers a more user-friendly API, well-documented types, supports millions of colors, and covers edge cases that smaller alternatives miss. Chalk is mature, reliable, and built to last.\n\nBut beyond the technical aspects, there's something more critical: trust and long-term maintenance. I have been active in open source for over a decade, and I'm committed to keeping Chalk maintained. Smaller packages might seem appealing now, but there's no guarantee they will be around for the long term, or that they won't become malicious over time.\n\nChalk is also likely already in your dependency tree (since 100K+ packages depend on it), so switching won’t save space—in fact, it might increase it. npm deduplicates dependencies, so multiple Chalk instances turn into one, but adding another package alongside it will increase your overall size.\n\nIf the goal is to clean up the ecosystem, switching away from Chalk won’t even make a dent. The real problem lies with packages that have very deep dependency trees (for example, those including a lot of polyfills). Chalk has no dependencies. It's better to focus on impactful changes rather than minor optimizations.\n\nIf absolute package size is important to you, I also maintain [yoctocolors](https://github.com/sindresorhus/yoctocolors), one of the smallest color packages out there.\n\n*\\- [Sindre](https://github.com/sindresorhus)*\n\n### But the smaller coloring package has benchmarks showing it is faster\n\n[Micro-benchmarks are flawed](https://sindresorhus.com/blog/micro-benchmark-fallacy) because they measure performance in unrealistic, isolated scenarios, often giving a distorted view of real-world performance. Don't believe marketing fluff. All the coloring packages are more than fast enough.\n\n## Related\n\n- [chalk-template](https://github.com/chalk/chalk-template) - [Tagged template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates) support for this module\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [strip-ansi-stream](https://github.com/chalk/strip-ansi-stream) - Strip ANSI escape codes from a stream\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n- [slice-ansi](https://github.com/chalk/slice-ansi) - Slice a string with ANSI escape codes\n- [color-convert](https://github.com/qix-/color-convert) - Converts colors between different models\n- [chalk-animation](https://github.com/bokub/chalk-animation) - Animate strings in the terminal\n- [gradient-string](https://github.com/bokub/gradient-string) - Apply color gradients to strings\n- [chalk-pipe](https://github.com/LitoMore/chalk-pipe) - Create chalk style schemes with simpler style strings\n- [terminal-link](https://github.com/sindresorhus/terminal-link) - Create clickable links in the terminal\n\n*(Not accepting additional entries)*\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n",
      "size_chars": 11690,
      "sha256": "03d260b86ecf3becaee6ae05d891ff32b291ba613661b5707d6d0121b8c2bec9",
      "estimated_tokens": 2922
    },
    {
      "path": "source/index.d.ts",
      "content": "// TODO: Make it this when TS suports that.\n// import {ModifierName, ForegroundColor, BackgroundColor, ColorName} from '#ansi-styles';\n// import {ColorInfo, ColorSupportLevel} from '#supports-color';\nimport {\n\tModifierName,\n\tForegroundColorName,\n\tBackgroundColorName,\n\tColorName,\n} from './vendor/ansi-styles/index.js';\nimport {ColorInfo, ColorSupportLevel} from './vendor/supports-color/index.js';\n\nexport interface Options {\n\t/**\n\tSpecify the color support for Chalk.\n\n\tBy default, color support is automatically detected based on the environment.\n\n\tLevels:\n\t- `0` - All colors disabled.\n\t- `1` - Basic 16 colors support.\n\t- `2` - ANSI 256 colors support.\n\t- `3` - Truecolor 16 million colors support.\n\t*/\n\treadonly level?: ColorSupportLevel;\n}\n\n/**\nReturn a new Chalk instance.\n*/\nexport const Chalk: new (options?: Options) => ChalkInstance; // eslint-disable-line @typescript-eslint/naming-convention\n\nexport interface ChalkInstance {\n\t(...text: unknown[]): string;\n\n\t/**\n\tThe color support for Chalk.\n\n\tBy default, color support is automatically detected based on the environment.\n\n\tLevels:\n\t- `0` - All colors disabled.\n\t- `1` - Basic 16 colors support.\n\t- `2` - ANSI 256 colors support.\n\t- `3` - Truecolor 16 million colors support.\n\t*/\n\tlevel: ColorSupportLevel;\n\n\t/**\n\tUse RGB values to set text color.\n\n\t@example\n\t```\n\timport chalk from 'chalk';\n\n\tchalk.rgb(222, 173, 237);\n\t```\n\t*/\n\trgb: (red: number, green: number, blue: number) => this;\n\n\t/**\n\tUse HEX value to set text color.\n\n\t@param color - Hexadecimal value representing the desired color.\n\n\t@example\n\t```\n\timport chalk from 'chalk';\n\n\tchalk.hex('#DEADED');\n\t```\n\t*/\n\thex: (color: string) => this;\n\n\t/**\n\tUse an [8-bit unsigned number](https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit) to set text color.\n\n\t@example\n\t```\n\timport chalk from 'chalk';\n\n\tchalk.ansi256(201);\n\t```\n\t*/\n\tansi256: (index: number) => this;\n\n\t/**\n\tUse RGB values to set background color.\n\n\t@example\n\t```\n\timport chalk from 'chalk';\n\n\tchalk.bgRgb(222, 173, 237);\n\t```\n\t*/\n\tbgRgb: (red: number, green: number, blue: number) => this;\n\n\t/**\n\tUse HEX value to set background color.\n\n\t@param color - Hexadecimal value representing the desired color.\n\n\t@example\n\t```\n\timport chalk from 'chalk';\n\n\tchalk.bgHex('#DEADED');\n\t```\n\t*/\n\tbgHex: (color: string) => this;\n\n\t/**\n\tUse a [8-bit unsigned number](https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit) to set background color.\n\n\t@example\n\t```\n\timport chalk from 'chalk';\n\n\tchalk.bgAnsi256(201);\n\t```\n\t*/\n\tbgAnsi256: (index: number) => this;\n\n\t/**\n\tModifier: Reset the current style.\n\t*/\n\treadonly reset: this;\n\n\t/**\n\tModifier: Make the text bold.\n\t*/\n\treadonly bold: this;\n\n\t/**\n\tModifier: Make the text have lower opacity.\n\t*/\n\treadonly dim: this;\n\n\t/**\n\tModifier: Make the text italic. *(Not widely supported)*\n\t*/\n\treadonly italic: this;\n\n\t/**\n\tModifier: Put a horizontal line below the text. *(Not widely supported)*\n\t*/\n\treadonly underline: this;\n\n\t/**\n\tModifier: Put a horizontal line above the text. *(Not widely supported)*\n\t*/\n\treadonly overline: this;\n\n\t/**\n\tModifier: Invert background and foreground colors.\n\t*/\n\treadonly inverse: this;\n\n\t/**\n\tModifier: Print the text but make it invisible.\n\t*/\n\treadonly hidden: this;\n\n\t/**\n\tModifier: Puts a horizontal line through the center of the text. *(Not widely supported)*\n\t*/\n\treadonly strikethrough: this;\n\n\t/**\n\tModifier: Print the text only when Chalk has a color level above zero.\n\n\tCan be useful for things that are purely cosmetic.\n\t*/\n\treadonly visible: this;\n\n\treadonly black: this;\n\treadonly red: this;\n\treadonly green: this;\n\treadonly yellow: this;\n\treadonly blue: this;\n\treadonly magenta: this;\n\treadonly cyan: this;\n\treadonly white: this;\n\n\t/*\n\tAlias for `blackBright`.\n\t*/\n\treadonly gray: this;\n\n\t/*\n\tAlias for `blackBright`.\n\t*/\n\treadonly grey: this;\n\n\treadonly blackBright: this;\n\treadonly redBright: this;\n\treadonly greenBright: this;\n\treadonly yellowBright: this;\n\treadonly blueBright: this;\n\treadonly magentaBright: this;\n\treadonly cyanBright: this;\n\treadonly whiteBright: this;\n\n\treadonly bgBlack: this;\n\treadonly bgRed: this;\n\treadonly bgGreen: this;\n\treadonly bgYellow: this;\n\treadonly bgBlue: this;\n\treadonly bgMagenta: this;\n\treadonly bgCyan: this;\n\treadonly bgWhite: this;\n\n\t/*\n\tAlias for `bgBlackBright`.\n\t*/\n\treadonly bgGray: this;\n\n\t/*\n\tAlias for `bgBlackBright`.\n\t*/\n\treadonly bgGrey: this;\n\n\treadonly bgBlackBright: this;\n\treadonly bgRedBright: this;\n\treadonly bgGreenBright: this;\n\treadonly bgYellowBright: this;\n\treadonly bgBlueBright: this;\n\treadonly bgMagentaBright: this;\n\treadonly bgCyanBright: this;\n\treadonly bgWhiteBright: this;\n}\n\n/**\nMain Chalk object that allows to chain styles together.\n\nCall the last one as a method with a string argument.\n\nOrder doesn't matter, and later styles take precedent in case of a conflict.\n\nThis simply means that `chalk.red.yellow.green` is equivalent to `chalk.green`.\n*/\ndeclare const chalk: ChalkInstance;\n\nexport const supportsColor: ColorInfo;\n\nexport const chalkStderr: typeof chalk;\nexport const supportsColorStderr: typeof supportsColor;\n\nexport {\n\tModifierName, ForegroundColorName, BackgroundColorName, ColorName,\n\tmodifierNames, foregroundColorNames, backgroundColorNames, colorNames,\n// } from '#ansi-styles';\n} from './vendor/ansi-styles/index.js';\n\nexport {\n\tColorInfo,\n\tColorSupport,\n\tColorSupportLevel,\n// } from '#supports-color';\n} from './vendor/supports-color/index.js';\n\n// TODO: Remove these aliases in the next major version\n/**\n@deprecated Use `ModifierName` instead.\n\nBasic modifier names.\n*/\nexport type Modifiers = ModifierName;\n\n/**\n@deprecated Use `ForegroundColorName` instead.\n\nBasic foreground color names.\n\n[More colors here.](https://github.com/chalk/chalk/blob/main/readme.md#256-and-truecolor-color-support)\n*/\nexport type ForegroundColor = ForegroundColorName;\n\n/**\n@deprecated Use `BackgroundColorName` instead.\n\nBasic background color names.\n\n[More colors here.](https://github.com/chalk/chalk/blob/main/readme.md#256-and-truecolor-color-support)\n*/\nexport type BackgroundColor = BackgroundColorName;\n\n/**\n@deprecated Use `ColorName` instead.\n\nBasic color names. The combination of foreground and background color names.\n\n[More colors here.](https://github.com/chalk/chalk/blob/main/readme.md#256-and-truecolor-color-support)\n*/\nexport type Color = ColorName;\n\n/**\n@deprecated Use `modifierNames` instead.\n\nBasic modifier names.\n*/\nexport const modifiers: readonly Modifiers[];\n\n/**\n@deprecated Use `foregroundColorNames` instead.\n\nBasic foreground color names.\n*/\nexport const foregroundColors: readonly ForegroundColor[];\n\n/**\n@deprecated Use `backgroundColorNames` instead.\n\nBasic background color names.\n*/\nexport const backgroundColors: readonly BackgroundColor[];\n\n/**\n@deprecated Use `colorNames` instead.\n\nBasic color names. The combination of foreground and background color names.\n*/\nexport const colors: readonly Color[];\n\nexport default chalk;\n",
      "size_chars": 6918,
      "sha256": "f3f76db6e76bc76d13cc4bfa10e1f74390b8ebe279535f62243e8d8acd919314",
      "estimated_tokens": 1729
    },
    {
      "path": "source/index.js",
      "content": "import ansiStyles from '#ansi-styles';\nimport supportsColor from '#supports-color';\nimport { // eslint-disable-line import/order\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex,\n} from './utilities.js';\n\nconst {stdout: stdoutColor, stderr: stderrColor} = supportsColor;\n\nconst GENERATOR = Symbol('GENERATOR');\nconst STYLER = Symbol('STYLER');\nconst IS_EMPTY = Symbol('IS_EMPTY');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m',\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nexport class Chalk {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = (...strings) => strings.join(' ');\n\tapplyOptions(chalk, options);\n\n\tObject.setPrototypeOf(chalk, createChalk.prototype);\n\n\treturn chalk;\n};\n\nfunction createChalk(options) {\n\treturn chalkFactory(options);\n}\n\nObject.setPrototypeOf(createChalk.prototype, Function.prototype);\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this[STYLER]), this[IS_EMPTY]);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t},\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this[STYLER], true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t},\n};\n\nconst getModelAnsi = (model, level, type, ...arguments_) => {\n\tif (model === 'rgb') {\n\t\tif (level === 'ansi16m') {\n\t\t\treturn ansiStyles[type].ansi16m(...arguments_);\n\t\t}\n\n\t\tif (level === 'ansi256') {\n\t\t\treturn ansiStyles[type].ansi256(ansiStyles.rgbToAnsi256(...arguments_));\n\t\t}\n\n\t\treturn ansiStyles[type].ansi(ansiStyles.rgbToAnsi(...arguments_));\n\t}\n\n\tif (model === 'hex') {\n\t\treturn getModelAnsi('rgb', level, type, ...ansiStyles.hexToRgb(...arguments_));\n\t}\n\n\treturn ansiStyles[type][model](...arguments_);\n};\n\nconst usedModels = ['rgb', 'hex', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'color', ...arguments_), ansiStyles.color.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'bgColor', ...arguments_), ansiStyles.bgColor.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this[GENERATOR].level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis[GENERATOR].level = level;\n\t\t},\n\t},\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent,\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\t// Single argument is hot path, implicit coercion is faster than anything\n\t// eslint-disable-next-line no-implicit-coercion\n\tconst builder = (...arguments_) => applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder[GENERATOR] = self;\n\tbuilder[STYLER] = _styler;\n\tbuilder[IS_EMPTY] = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self[IS_EMPTY] ? '' : string;\n\t}\n\n\tlet styler = self[STYLER];\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.includes('\\u001B')) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nObject.defineProperties(createChalk.prototype, styles);\n\nconst chalk = createChalk();\nexport const chalkStderr = createChalk({level: stderrColor ? stderrColor.level : 0});\n\nexport {\n\tmodifierNames,\n\tforegroundColorNames,\n\tbackgroundColorNames,\n\tcolorNames,\n\n\t// TODO: Remove these aliases in the next major version\n\tmodifierNames as modifiers,\n\tforegroundColorNames as foregroundColors,\n\tbackgroundColorNames as backgroundColors,\n\tcolorNames as colors,\n} from './vendor/ansi-styles/index.js';\n\nexport {\n\tstdoutColor as supportsColor,\n\tstderrColor as supportsColorStderr,\n};\n\nexport default chalk;\n",
      "size_chars": 5900,
      "sha256": "64b22b1c442e6d460069807b521bf0a84e112c00c2b4163bc59deab20a9292db",
      "estimated_tokens": 1475
    },
    {
      "path": "source/index.test-d.ts",
      "content": "import {\n\texpectType,\n\texpectAssignable,\n\texpectError,\n\texpectDeprecated,\n} from 'tsd';\nimport chalk, {\n\tChalk,\n\tChalkInstance,\n\tColorInfo,\n\tColorSupport,\n\tColorSupportLevel,\n\tchalkStderr,\n\tsupportsColor,\n\tsupportsColorStderr,\n\tModifierName,\n\tForegroundColorName,\n\tBackgroundColorName,\n\tColorName,\n\tModifiers,\n} from './index.js';\n\n// - supportsColor -\nexpectType<ColorInfo>(supportsColor);\nif (supportsColor) {\n\texpectType<ColorSupport>(supportsColor);\n\texpectType<ColorSupportLevel>(supportsColor.level);\n\texpectType<boolean>(supportsColor.hasBasic);\n\texpectType<boolean>(supportsColor.has256);\n\texpectType<boolean>(supportsColor.has16m);\n}\n\n// - stderr -\nexpectAssignable<ChalkInstance>(chalkStderr);\nexpectType<ColorInfo>(supportsColorStderr);\nif (supportsColorStderr) {\n\texpectType<boolean>(supportsColorStderr.hasBasic);\n\texpectType<boolean>(supportsColorStderr.has256);\n\texpectType<boolean>(supportsColorStderr.has16m);\n}\n\n// -- `supportsColorStderr` is not a member of the Chalk interface --\nexpectError(chalk.reset.supportsColorStderr);\n\n// -- `supportsColor` is not a member of the Chalk interface --\nexpectError(chalk.reset.supportsColor);\n\n// - Chalk -\n// -- Instance --\nexpectType<ChalkInstance>(new Chalk({level: 1}));\n\n// -- Properties --\nexpectType<ColorSupportLevel>(chalk.level);\n\n// -- Color methods --\nexpectType<ChalkInstance>(chalk.rgb(0, 0, 0));\nexpectType<ChalkInstance>(chalk.hex('#DEADED'));\nexpectType<ChalkInstance>(chalk.ansi256(0));\nexpectType<ChalkInstance>(chalk.bgRgb(0, 0, 0));\nexpectType<ChalkInstance>(chalk.bgHex('#DEADED'));\nexpectType<ChalkInstance>(chalk.bgAnsi256(0));\n\n// -- Modifiers --\nexpectType<string>(chalk.reset('foo'));\nexpectType<string>(chalk.bold('foo'));\nexpectType<string>(chalk.dim('foo'));\nexpectType<string>(chalk.italic('foo'));\nexpectType<string>(chalk.underline('foo'));\nexpectType<string>(chalk.overline('foo'));\nexpectType<string>(chalk.inverse('foo'));\nexpectType<string>(chalk.hidden('foo'));\nexpectType<string>(chalk.strikethrough('foo'));\nexpectType<string>(chalk.visible('foo'));\nexpectType<string>(chalk.reset`foo`);\nexpectType<string>(chalk.bold`foo`);\nexpectType<string>(chalk.dim`foo`);\nexpectType<string>(chalk.italic`foo`);\nexpectType<string>(chalk.underline`foo`);\nexpectType<string>(chalk.inverse`foo`);\nexpectType<string>(chalk.hidden`foo`);\nexpectType<string>(chalk.strikethrough`foo`);\nexpectType<string>(chalk.visible`foo`);\n\n// -- Colors --\nexpectType<string>(chalk.black('foo'));\nexpectType<string>(chalk.red('foo'));\nexpectType<string>(chalk.green('foo'));\nexpectType<string>(chalk.yellow('foo'));\nexpectType<string>(chalk.blue('foo'));\nexpectType<string>(chalk.magenta('foo'));\nexpectType<string>(chalk.cyan('foo'));\nexpectType<string>(chalk.white('foo'));\nexpectType<string>(chalk.gray('foo'));\nexpectType<string>(chalk.grey('foo'));\nexpectType<string>(chalk.blackBright('foo'));\nexpectType<string>(chalk.redBright('foo'));\nexpectType<string>(chalk.greenBright('foo'));\nexpectType<string>(chalk.yellowBright('foo'));\nexpectType<string>(chalk.blueBright('foo'));\nexpectType<string>(chalk.magentaBright('foo'));\nexpectType<string>(chalk.cyanBright('foo'));\nexpectType<string>(chalk.whiteBright('foo'));\nexpectType<string>(chalk.bgBlack('foo'));\nexpectType<string>(chalk.bgRed('foo'));\nexpectType<string>(chalk.bgGreen('foo'));\nexpectType<string>(chalk.bgYellow('foo'));\nexpectType<string>(chalk.bgBlue('foo'));\nexpectType<string>(chalk.bgMagenta('foo'));\nexpectType<string>(chalk.bgCyan('foo'));\nexpectType<string>(chalk.bgWhite('foo'));\nexpectType<string>(chalk.bgBlackBright('foo'));\nexpectType<string>(chalk.bgRedBright('foo'));\nexpectType<string>(chalk.bgGreenBright('foo'));\nexpectType<string>(chalk.bgYellowBright('foo'));\nexpectType<string>(chalk.bgBlueBright('foo'));\nexpectType<string>(chalk.bgMagentaBright('foo'));\nexpectType<string>(chalk.bgCyanBright('foo'));\nexpectType<string>(chalk.bgWhiteBright('foo'));\nexpectType<string>(chalk.black`foo`);\nexpectType<string>(chalk.red`foo`);\nexpectType<string>(chalk.green`foo`);\nexpectType<string>(chalk.yellow`foo`);\nexpectType<string>(chalk.blue`foo`);\nexpectType<string>(chalk.magenta`foo`);\nexpectType<string>(chalk.cyan`foo`);\nexpectType<string>(chalk.white`foo`);\nexpectType<string>(chalk.gray`foo`);\nexpectType<string>(chalk.grey`foo`);\nexpectType<string>(chalk.blackBright`foo`);\nexpectType<string>(chalk.redBright`foo`);\nexpectType<string>(chalk.greenBright`foo`);\nexpectType<string>(chalk.yellowBright`foo`);\nexpectType<string>(chalk.blueBright`foo`);\nexpectType<string>(chalk.magentaBright`foo`);\nexpectType<string>(chalk.cyanBright`foo`);\nexpectType<string>(chalk.whiteBright`foo`);\nexpectType<string>(chalk.bgBlack`foo`);\nexpectType<string>(chalk.bgRed`foo`);\nexpectType<string>(chalk.bgGreen`foo`);\nexpectType<string>(chalk.bgYellow`foo`);\nexpectType<string>(chalk.bgBlue`foo`);\nexpectType<string>(chalk.bgMagenta`foo`);\nexpectType<string>(chalk.bgCyan`foo`);\nexpectType<string>(chalk.bgWhite`foo`);\nexpectType<string>(chalk.bgBlackBright`foo`);\nexpectType<string>(chalk.bgRedBright`foo`);\nexpectType<string>(chalk.bgGreenBright`foo`);\nexpectType<string>(chalk.bgYellowBright`foo`);\nexpectType<string>(chalk.bgBlueBright`foo`);\nexpectType<string>(chalk.bgMagentaBright`foo`);\nexpectType<string>(chalk.bgCyanBright`foo`);\nexpectType<string>(chalk.bgWhiteBright`foo`);\n\n// -- Complex --\nexpectType<string>(chalk.red.bgGreen.underline('foo'));\nexpectType<string>(chalk.underline.red.bgGreen('foo'));\n\n// -- Complex template literal --\nexpectType<string>(chalk.underline``);\nexpectType<string>(chalk.red.bgGreen.bold`Hello {italic.blue ${name}}`);\nexpectType<string>(chalk.strikethrough.cyanBright.bgBlack`Works with {reset {bold numbers}} {bold.red ${1}}`);\n\n// -- Modifiers types\nexpectAssignable<ModifierName>('strikethrough');\nexpectError<ModifierName>('delete');\n\n// -- Foreground types\nexpectAssignable<ForegroundColorName>('red');\nexpectError<ForegroundColorName>('pink');\n\n// -- Background types\nexpectAssignable<BackgroundColorName>('bgRed');\nexpectError<BackgroundColorName>('bgPink');\n\n// -- Color types --\nexpectAssignable<ColorName>('red');\nexpectAssignable<ColorName>('bgRed');\nexpectError<ColorName>('hotpink');\nexpectError<ColorName>('bgHotpink');\n",
      "size_chars": 6211,
      "sha256": "63d4d24950a8e361dbbbc5b6c4e30b51f9bd5f12db1211b0fd2bed8853851a60",
      "estimated_tokens": 1552
    },
    {
      "path": "source/utilities.js",
      "content": "// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nexport function stringReplaceAll(string, substring, replacer) {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.slice(endIndex, index) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\nexport function stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.slice(endIndex, (gotCR ? index - 1 : index)) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n",
      "size_chars": 997,
      "sha256": "698ce3cb21b00b570631742d3a9e168de31df74b3a88220c4bcf18ac30fd00cd",
      "estimated_tokens": 249
    },
    {
      "path": "source/vendor/ansi-styles/index.d.ts",
      "content": "export interface CSPair { // eslint-disable-line @typescript-eslint/naming-convention\n\t/**\n\tThe ANSI terminal control sequence for starting this style.\n\t*/\n\treadonly open: string;\n\n\t/**\n\tThe ANSI terminal control sequence for ending this style.\n\t*/\n\treadonly close: string;\n}\n\nexport interface ColorBase {\n\t/**\n\tThe ANSI terminal control sequence for ending this color.\n\t*/\n\treadonly close: string;\n\n\tansi(code: number): string;\n\n\tansi256(code: number): string;\n\n\tansi16m(red: number, green: number, blue: number): string;\n}\n\nexport interface Modifier {\n\t/**\n\tResets the current color chain.\n\t*/\n\treadonly reset: CSPair;\n\n\t/**\n\tMake text bold.\n\t*/\n\treadonly bold: CSPair;\n\n\t/**\n\tEmitting only a small amount of light.\n\t*/\n\treadonly dim: CSPair;\n\n\t/**\n\tMake text italic. (Not widely supported)\n\t*/\n\treadonly italic: CSPair;\n\n\t/**\n\tMake text underline. (Not widely supported)\n\t*/\n\treadonly underline: CSPair;\n\n\t/**\n\tMake text overline.\n\n\tSupported on VTE-based terminals, the GNOME terminal, mintty, and Git Bash.\n\t*/\n\treadonly overline: CSPair;\n\n\t/**\n\tInverse background and foreground colors.\n\t*/\n\treadonly inverse: CSPair;\n\n\t/**\n\tPrints the text, but makes it invisible.\n\t*/\n\treadonly hidden: CSPair;\n\n\t/**\n\tPuts a horizontal line through the center of the text. (Not widely supported)\n\t*/\n\treadonly strikethrough: CSPair;\n}\n\nexport interface ForegroundColor {\n\treadonly black: CSPair;\n\treadonly red: CSPair;\n\treadonly green: CSPair;\n\treadonly yellow: CSPair;\n\treadonly blue: CSPair;\n\treadonly cyan: CSPair;\n\treadonly magenta: CSPair;\n\treadonly white: CSPair;\n\n\t/**\n\tAlias for `blackBright`.\n\t*/\n\treadonly gray: CSPair;\n\n\t/**\n\tAlias for `blackBright`.\n\t*/\n\treadonly grey: CSPair;\n\n\treadonly blackBright: CSPair;\n\treadonly redBright: CSPair;\n\treadonly greenBright: CSPair;\n\treadonly yellowBright: CSPair;\n\treadonly blueBright: CSPair;\n\treadonly cyanBright: CSPair;\n\treadonly magentaBright: CSPair;\n\treadonly whiteBright: CSPair;\n}\n\nexport interface BackgroundColor {\n\treadonly bgBlack: CSPair;\n\treadonly bgRed: CSPair;\n\treadonly bgGreen: CSPair;\n\treadonly bgYellow: CSPair;\n\treadonly bgBlue: CSPair;\n\treadonly bgCyan: CSPair;\n\treadonly bgMagenta: CSPair;\n\treadonly bgWhite: CSPair;\n\n\t/**\n\tAlias for `bgBlackBright`.\n\t*/\n\treadonly bgGray: CSPair;\n\n\t/**\n\tAlias for `bgBlackBright`.\n\t*/\n\treadonly bgGrey: CSPair;\n\n\treadonly bgBlackBright: CSPair;\n\treadonly bgRedBright: CSPair;\n\treadonly bgGreenBright: CSPair;\n\treadonly bgYellowBright: CSPair;\n\treadonly bgBlueBright: CSPair;\n\treadonly bgCyanBright: CSPair;\n\treadonly bgMagentaBright: CSPair;\n\treadonly bgWhiteBright: CSPair;\n}\n\nexport interface ConvertColor {\n\t/**\n\tConvert from the RGB color space to the ANSI 256 color space.\n\n\t@param red - (`0...255`)\n\t@param green - (`0...255`)\n\t@param blue - (`0...255`)\n\t*/\n\trgbToAnsi256(red: number, green: number, blue: number): number;\n\n\t/**\n\tConvert from the RGB HEX color space to the RGB color space.\n\n\t@param hex - A hexadecimal string containing RGB data.\n\t*/\n\thexToRgb(hex: string): [red: number, green: number, blue: number];\n\n\t/**\n\tConvert from the RGB HEX color space to the ANSI 256 color space.\n\n\t@param hex - A hexadecimal string containing RGB data.\n\t*/\n\thexToAnsi256(hex: string): number;\n\n\t/**\n\tConvert from the ANSI 256 color space to the ANSI 16 color space.\n\n\t@param code - A number representing the ANSI 256 color.\n\t*/\n\tansi256ToAnsi(code: number): number;\n\n\t/**\n\tConvert from the RGB color space to the ANSI 16 color space.\n\n\t@param red - (`0...255`)\n\t@param green - (`0...255`)\n\t@param blue - (`0...255`)\n\t*/\n\trgbToAnsi(red: number, green: number, blue: number): number;\n\n\t/**\n\tConvert from the RGB HEX color space to the ANSI 16 color space.\n\n\t@param hex - A hexadecimal string containing RGB data.\n\t*/\n\thexToAnsi(hex: string): number;\n}\n\n/**\nBasic modifier names.\n*/\nexport type ModifierName = keyof Modifier;\n\n/**\nBasic foreground color names.\n\n[More colors here.](https://github.com/chalk/chalk/blob/main/readme.md#256-and-truecolor-color-support)\n*/\nexport type ForegroundColorName = keyof ForegroundColor;\n\n/**\nBasic background color names.\n\n[More colors here.](https://github.com/chalk/chalk/blob/main/readme.md#256-and-truecolor-color-support)\n*/\nexport type BackgroundColorName = keyof BackgroundColor;\n\n/**\nBasic color names. The combination of foreground and background color names.\n\n[More colors here.](https://github.com/chalk/chalk/blob/main/readme.md#256-and-truecolor-color-support)\n*/\nexport type ColorName = ForegroundColorName | BackgroundColorName;\n\n/**\nBasic modifier names.\n*/\nexport const modifierNames: readonly ModifierName[];\n\n/**\nBasic foreground color names.\n*/\nexport const foregroundColorNames: readonly ForegroundColorName[];\n\n/**\nBasic background color names.\n*/\nexport const backgroundColorNames: readonly BackgroundColorName[];\n\n/*\nBasic color names. The combination of foreground and background color names.\n*/\nexport const colorNames: readonly ColorName[];\n\ndeclare const ansiStyles: {\n\treadonly modifier: Modifier;\n\treadonly color: ColorBase & ForegroundColor;\n\treadonly bgColor: ColorBase & BackgroundColor;\n\treadonly codes: ReadonlyMap<number, number>;\n} & ForegroundColor & BackgroundColor & Modifier & ConvertColor;\n\nexport default ansiStyles;\n",
      "size_chars": 5198,
      "sha256": "acfed6cc001e7f7f26d2ba42222a180ba669bb966d4dd9cb4ad5596516061b13",
      "estimated_tokens": 1299
    },
    {
      "path": "source/vendor/ansi-styles/index.js",
      "content": "const ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi16 = (offset = 0) => code => `\\u001B[${code + offset}m`;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nconst styles = {\n\tmodifier: {\n\t\treset: [0, 0],\n\t\t// 21 isn't widely supported and 22 does the same thing\n\t\tbold: [1, 22],\n\t\tdim: [2, 22],\n\t\titalic: [3, 23],\n\t\tunderline: [4, 24],\n\t\toverline: [53, 55],\n\t\tinverse: [7, 27],\n\t\thidden: [8, 28],\n\t\tstrikethrough: [9, 29],\n\t},\n\tcolor: {\n\t\tblack: [30, 39],\n\t\tred: [31, 39],\n\t\tgreen: [32, 39],\n\t\tyellow: [33, 39],\n\t\tblue: [34, 39],\n\t\tmagenta: [35, 39],\n\t\tcyan: [36, 39],\n\t\twhite: [37, 39],\n\n\t\t// Bright color\n\t\tblackBright: [90, 39],\n\t\tgray: [90, 39], // Alias of `blackBright`\n\t\tgrey: [90, 39], // Alias of `blackBright`\n\t\tredBright: [91, 39],\n\t\tgreenBright: [92, 39],\n\t\tyellowBright: [93, 39],\n\t\tblueBright: [94, 39],\n\t\tmagentaBright: [95, 39],\n\t\tcyanBright: [96, 39],\n\t\twhiteBright: [97, 39],\n\t},\n\tbgColor: {\n\t\tbgBlack: [40, 49],\n\t\tbgRed: [41, 49],\n\t\tbgGreen: [42, 49],\n\t\tbgYellow: [43, 49],\n\t\tbgBlue: [44, 49],\n\t\tbgMagenta: [45, 49],\n\t\tbgCyan: [46, 49],\n\t\tbgWhite: [47, 49],\n\n\t\t// Bright color\n\t\tbgBlackBright: [100, 49],\n\t\tbgGray: [100, 49], // Alias of `bgBlackBright`\n\t\tbgGrey: [100, 49], // Alias of `bgBlackBright`\n\t\tbgRedBright: [101, 49],\n\t\tbgGreenBright: [102, 49],\n\t\tbgYellowBright: [103, 49],\n\t\tbgBlueBright: [104, 49],\n\t\tbgMagentaBright: [105, 49],\n\t\tbgCyanBright: [106, 49],\n\t\tbgWhiteBright: [107, 49],\n\t},\n};\n\nexport const modifierNames = Object.keys(styles.modifier);\nexport const foregroundColorNames = Object.keys(styles.color);\nexport const backgroundColorNames = Object.keys(styles.bgColor);\nexport const colorNames = [...foregroundColorNames, ...backgroundColorNames];\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`,\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false,\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false,\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = wrapAnsi16();\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi = wrapAnsi16(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue(red, green, blue) {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16\n\t\t\t\t\t+ (36 * Math.round(red / 255 * 5))\n\t\t\t\t\t+ (6 * Math.round(green / 255 * 5))\n\t\t\t\t\t+ Math.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue(hex) {\n\t\t\t\tconst matches = /[a-f\\d]{6}|[a-f\\d]{3}/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet [colorString] = matches;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = [...colorString].map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t/* eslint-disable no-bitwise */\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF,\n\t\t\t\t\t/* eslint-enable no-bitwise */\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t\tansi256ToAnsi: {\n\t\t\tvalue(code) {\n\t\t\t\tif (code < 8) {\n\t\t\t\t\treturn 30 + code;\n\t\t\t\t}\n\n\t\t\t\tif (code < 16) {\n\t\t\t\t\treturn 90 + (code - 8);\n\t\t\t\t}\n\n\t\t\t\tlet red;\n\t\t\t\tlet green;\n\t\t\t\tlet blue;\n\n\t\t\t\tif (code >= 232) {\n\t\t\t\t\tred = (((code - 232) * 10) + 8) / 255;\n\t\t\t\t\tgreen = red;\n\t\t\t\t\tblue = red;\n\t\t\t\t} else {\n\t\t\t\t\tcode -= 16;\n\n\t\t\t\t\tconst remainder = code % 36;\n\n\t\t\t\t\tred = Math.floor(code / 36) / 5;\n\t\t\t\t\tgreen = Math.floor(remainder / 6) / 5;\n\t\t\t\t\tblue = (remainder % 6) / 5;\n\t\t\t\t}\n\n\t\t\t\tconst value = Math.max(red, green, blue) * 2;\n\n\t\t\t\tif (value === 0) {\n\t\t\t\t\treturn 30;\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tlet result = 30 + ((Math.round(blue) << 2) | (Math.round(green) << 1) | Math.round(red));\n\n\t\t\t\tif (value === 2) {\n\t\t\t\t\tresult += 60;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\trgbToAnsi: {\n\t\t\tvalue: (red, green, blue) => styles.ansi256ToAnsi(styles.rgbToAnsi256(red, green, blue)),\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi: {\n\t\t\tvalue: hex => styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t});\n\n\treturn styles;\n}\n\nconst ansiStyles = assembleStyles();\n\nexport default ansiStyles;\n",
      "size_chars": 5256,
      "sha256": "92efdc3e5203d02d1710ff60dea3965066f97a77c0feaaa919b2693c989b7ec1",
      "estimated_tokens": 1314
    },
    {
      "path": "source/vendor/supports-color/browser.d.ts",
      "content": "export {default} from './index.js';\n",
      "size_chars": 36,
      "sha256": "09d791bf6471207eb7553c17a6cb03d6e6bd1d789f19bbec67da2b08ec9bb570",
      "estimated_tokens": 9
    },
    {
      "path": "source/vendor/supports-color/browser.js",
      "content": "/* eslint-env browser */\n\nconst level = (() => {\n\tif (!('navigator' in globalThis)) {\n\t\treturn 0;\n\t}\n\n\tif (globalThis.navigator.userAgentData) {\n\t\tconst brand = navigator.userAgentData.brands.find(({brand}) => brand === 'Chromium');\n\t\tif (brand && brand.version > 93) {\n\t\t\treturn 3;\n\t\t}\n\t}\n\n\tif (/\\b(Chrome|Chromium)\\//.test(globalThis.navigator.userAgent)) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n})();\n\nconst colorSupport = level !== 0 && {\n\tlevel,\n\thasBasic: true,\n\thas256: level >= 2,\n\thas16m: level >= 3,\n};\n\nconst supportsColor = {\n\tstdout: colorSupport,\n\tstderr: colorSupport,\n};\n\nexport default supportsColor;\n",
      "size_chars": 607,
      "sha256": "af136d242c06422a0004775bdf11d9e25a05b1ec54a6932315dc016d22d8b440",
      "estimated_tokens": 151
    },
    {
      "path": "source/vendor/supports-color/index.d.ts",
      "content": "import type {WriteStream} from 'node:tty';\n\nexport type Options = {\n\t/**\n\tWhether `process.argv` should be sniffed for `--color` and `--no-color` flags.\n\n\t@default true\n\t*/\n\treadonly sniffFlags?: boolean;\n};\n\n/**\nLevels:\n- `0` - All colors disabled.\n- `1` - Basic 16 colors support.\n- `2` - ANSI 256 colors support.\n- `3` - Truecolor 16 million colors support.\n*/\nexport type ColorSupportLevel = 0 | 1 | 2 | 3;\n\n/**\nDetect whether the terminal supports color.\n*/\nexport type ColorSupport = {\n\t/**\n\tThe color level.\n\t*/\n\tlevel: ColorSupportLevel;\n\n\t/**\n\tWhether basic 16 colors are supported.\n\t*/\n\thasBasic: boolean;\n\n\t/**\n\tWhether ANSI 256 colors are supported.\n\t*/\n\thas256: boolean;\n\n\t/**\n\tWhether Truecolor 16 million colors are supported.\n\t*/\n\thas16m: boolean;\n};\n\nexport type ColorInfo = ColorSupport | false;\n\nexport function createSupportsColor(stream?: WriteStream, options?: Options): ColorInfo;\n\ndeclare const supportsColor: {\n\tstdout: ColorInfo;\n\tstderr: ColorInfo;\n};\n\nexport default supportsColor;\n",
      "size_chars": 1010,
      "sha256": "f61a4dc92450609c353738f0a2daebf8cae71b24716dbd952456d80b1e1a48b6",
      "estimated_tokens": 252
    },
    {
      "path": "source/vendor/supports-color/index.js",
      "content": "import process from 'node:process';\nimport os from 'node:os';\nimport tty from 'node:tty';\n\n// From: https://github.com/sindresorhus/has-flag/blob/main/index.js\n/// function hasFlag(flag, argv = globalThis.Deno?.args ?? process.argv) {\nfunction hasFlag(flag, argv = globalThis.Deno ? globalThis.Deno.args : process.argv) {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n}\n\nconst {env} = process;\n\nlet flagForceColor;\nif (\n\thasFlag('no-color')\n\t|| hasFlag('no-colors')\n\t|| hasFlag('color=false')\n\t|| hasFlag('color=never')\n) {\n\tflagForceColor = 0;\n} else if (\n\thasFlag('color')\n\t|| hasFlag('colors')\n\t|| hasFlag('color=true')\n\t|| hasFlag('color=always')\n) {\n\tflagForceColor = 1;\n}\n\nfunction envForceColor() {\n\tif ('FORCE_COLOR' in env) {\n\t\tif (env.FORCE_COLOR === 'true') {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (env.FORCE_COLOR === 'false') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3,\n\t};\n}\n\nfunction _supportsColor(haveStream, {streamIsTTY, sniffFlags = true} = {}) {\n\tconst noFlagForceColor = envForceColor();\n\tif (noFlagForceColor !== undefined) {\n\t\tflagForceColor = noFlagForceColor;\n\t}\n\n\tconst forceColor = sniffFlags ? flagForceColor : noFlagForceColor;\n\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (sniffFlags) {\n\t\tif (hasFlag('color=16m')\n\t\t\t|| hasFlag('color=full')\n\t\t\t|| hasFlag('color=truecolor')) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (hasFlag('color=256')) {\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\t// Check for Azure DevOps pipelines.\n\t// Has to be above the `!streamIsTTY` check.\n\tif ('TF_BUILD' in env && 'AGENT_NAME' in env) {\n\t\treturn 1;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10\n\t\t\t&& Number(osRelease[2]) >= 10_586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14_931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['GITHUB_ACTIONS', 'GITEA_ACTIONS', 'CIRCLECI'].some(key => key in env)) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (['TRAVIS', 'APPVEYOR', 'GITLAB_CI', 'BUILDKITE', 'DRONE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif (env.TERM === 'xterm-kitty') {\n\t\treturn 3;\n\t}\n\n\tif (env.TERM === 'xterm-ghostty') {\n\t\treturn 3;\n\t}\n\n\tif (env.TERM === 'wezterm') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = Number.parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app': {\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\t}\n\n\t\t\tcase 'Apple_Terminal': {\n\t\t\t\treturn 2;\n\t\t\t}\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nexport function createSupportsColor(stream, options = {}) {\n\tconst level = _supportsColor(stream, {\n\t\tstreamIsTTY: stream && stream.isTTY,\n\t\t...options,\n\t});\n\n\treturn translateLevel(level);\n}\n\nconst supportsColor = {\n\tstdout: createSupportsColor({isTTY: tty.isatty(1)}),\n\tstderr: createSupportsColor({isTTY: tty.isatty(2)}),\n};\n\nexport default supportsColor;\n",
      "size_chars": 3965,
      "sha256": "e82368a5f05d145e33de6ae3464056511664b620735ef58d1800a7bcda6691e5",
      "estimated_tokens": 991
    },
    {
      "path": "test/_fixture.js",
      "content": "import chalk, {chalkStderr} from '../source/index.js';\n\nconsole.log(`${chalk.hex('#ff6159')('testout')} ${chalkStderr.hex('#ff6159')('testerr')}`);\n",
      "size_chars": 148,
      "sha256": "9164bf73ed9f7f5d41768b6bce7c6a790982106ae51f5252ccd5d32a09185aa8",
      "estimated_tokens": 37
    },
    {
      "path": "test/chalk.js",
      "content": "import process from 'node:process';\nimport test from 'ava';\nimport chalk, {Chalk, chalkStderr} from '../source/index.js';\n\nchalk.level = 3;\nchalkStderr.level = 3;\n\nconsole.log('TERM:', process.env.TERM || '[none]');\nconsole.log('platform:', process.platform || '[unknown]');\n\ntest('don\\'t add any styling when called as the base function', t => {\n\tt.is(chalk('foo'), 'foo');\n});\n\ntest('support multiple arguments in base function', t => {\n\tt.is(chalk('hello', 'there'), 'hello there');\n});\n\ntest('support automatic casting to string', t => {\n\tt.is(chalk(['hello', 'there']), 'hello,there');\n\tt.is(chalk(123), '123');\n\n\tt.is(chalk.bold(['foo', 'bar']), '\\u001B[1mfoo,bar\\u001B[22m');\n\tt.is(chalk.green(98_765), '\\u001B[32m98765\\u001B[39m');\n});\n\ntest('style string', t => {\n\tt.is(chalk.underline('foo'), '\\u001B[4mfoo\\u001B[24m');\n\tt.is(chalk.red('foo'), '\\u001B[31mfoo\\u001B[39m');\n\tt.is(chalk.bgRed('foo'), '\\u001B[41mfoo\\u001B[49m');\n});\n\ntest('support applying multiple styles at once', t => {\n\tt.is(chalk.red.bgGreen.underline('foo'), '\\u001B[31m\\u001B[42m\\u001B[4mfoo\\u001B[24m\\u001B[49m\\u001B[39m');\n\tt.is(chalk.underline.red.bgGreen('foo'), '\\u001B[4m\\u001B[31m\\u001B[42mfoo\\u001B[49m\\u001B[39m\\u001B[24m');\n});\n\ntest('support nesting styles', t => {\n\tt.is(\n\t\tchalk.red('foo' + chalk.underline.bgBlue('bar') + '!'),\n\t\t'\\u001B[31mfoo\\u001B[4m\\u001B[44mbar\\u001B[49m\\u001B[24m!\\u001B[39m',\n\t);\n});\n\ntest('support nesting styles of the same type (color, underline, bg)', t => {\n\tt.is(\n\t\tchalk.red('a' + chalk.yellow('b' + chalk.green('c') + 'b') + 'c'),\n\t\t'\\u001B[31ma\\u001B[33mb\\u001B[32mc\\u001B[39m\\u001B[31m\\u001B[33mb\\u001B[39m\\u001B[31mc\\u001B[39m',\n\t);\n});\n\ntest('reset all styles with `.reset()`', t => {\n\tt.is(chalk.reset(chalk.red.bgGreen.underline('foo') + 'foo'), '\\u001B[0m\\u001B[31m\\u001B[42m\\u001B[4mfoo\\u001B[24m\\u001B[49m\\u001B[39mfoo\\u001B[0m');\n});\n\ntest('support caching multiple styles', t => {\n\tconst {red, green} = chalk.red;\n\tconst redBold = red.bold;\n\tconst greenBold = green.bold;\n\n\tt.not(red('foo'), green('foo'));\n\tt.not(redBold('bar'), greenBold('bar'));\n\tt.not(green('baz'), greenBold('baz'));\n});\n\ntest('alias gray to grey', t => {\n\tt.is(chalk.grey('foo'), '\\u001B[90mfoo\\u001B[39m');\n});\n\ntest('support variable number of arguments', t => {\n\tt.is(chalk.red('foo', 'bar'), '\\u001B[31mfoo bar\\u001B[39m');\n});\n\ntest('support falsy values', t => {\n\tt.is(chalk.red(0), '\\u001B[31m0\\u001B[39m');\n});\n\ntest('don\\'t output escape codes if the input is empty', t => {\n\tt.is(chalk.red(), '');\n\tt.is(chalk.red.blue.black(), '');\n});\n\ntest('keep Function.prototype methods', t => {\n\tt.is(Reflect.apply(chalk.grey, null, ['foo']), '\\u001B[90mfoo\\u001B[39m');\n\tt.is(chalk.reset(chalk.red.bgGreen.underline.bind(null)('foo') + 'foo'), '\\u001B[0m\\u001B[31m\\u001B[42m\\u001B[4mfoo\\u001B[24m\\u001B[49m\\u001B[39mfoo\\u001B[0m');\n\tt.is(chalk.red.blue.black.call(null), '');\n});\n\ntest('line breaks should open and close colors', t => {\n\tt.is(chalk.grey('hello\\nworld'), '\\u001B[90mhello\\u001B[39m\\n\\u001B[90mworld\\u001B[39m');\n});\n\ntest('line breaks should open and close colors with CRLF', t => {\n\tt.is(chalk.grey('hello\\r\\nworld'), '\\u001B[90mhello\\u001B[39m\\r\\n\\u001B[90mworld\\u001B[39m');\n});\n\ntest('properly convert RGB to 16 colors on basic color terminals', t => {\n\tt.is(new Chalk({level: 1}).hex('#FF0000')('hello'), '\\u001B[91mhello\\u001B[39m');\n\tt.is(new Chalk({level: 1}).bgHex('#FF0000')('hello'), '\\u001B[101mhello\\u001B[49m');\n});\n\ntest('properly convert RGB to 256 colors on basic color terminals', t => {\n\tt.is(new Chalk({level: 2}).hex('#FF0000')('hello'), '\\u001B[38;5;196mhello\\u001B[39m');\n\tt.is(new Chalk({level: 2}).bgHex('#FF0000')('hello'), '\\u001B[48;5;196mhello\\u001B[49m');\n\tt.is(new Chalk({level: 3}).bgHex('#FF0000')('hello'), '\\u001B[48;2;255;0;0mhello\\u001B[49m');\n});\n\ntest('don\\'t emit RGB codes if level is 0', t => {\n\tt.is(new Chalk({level: 0}).hex('#FF0000')('hello'), 'hello');\n\tt.is(new Chalk({level: 0}).bgHex('#FF0000')('hello'), 'hello');\n});\n\ntest('supports blackBright color', t => {\n\tt.is(chalk.blackBright('foo'), '\\u001B[90mfoo\\u001B[39m');\n});\n\ntest('sets correct level for chalkStderr and respects it', t => {\n\tt.is(chalkStderr.level, 3);\n\tt.is(chalkStderr.red.bold('foo'), '\\u001B[31m\\u001B[1mfoo\\u001B[22m\\u001B[39m');\n});\n\ntest('keeps function prototype methods', t => {\n\tt.is(chalk.apply(chalk, ['foo']), 'foo');\n\tt.is(chalk.bind(chalk, 'foo')(), 'foo');\n\tt.is(chalk.call(chalk, 'foo'), 'foo');\n});\n",
      "size_chars": 4464,
      "sha256": "eb15d65d84f303af7bee58113c8a2b003e2184806957d0aa5deef8cf265f3d09",
      "estimated_tokens": 1116
    },
    {
      "path": "test/instance.js",
      "content": "import test from 'ava';\nimport chalk, {Chalk} from '../source/index.js';\n\nchalk.level = 1;\n\ntest('create an isolated context where colors can be disabled (by level)', t => {\n\tconst instance = new Chalk({level: 0});\n\tt.is(instance.red('foo'), 'foo');\n\tt.is(chalk.red('foo'), '\\u001B[31mfoo\\u001B[39m');\n\tinstance.level = 2;\n\tt.is(instance.red('foo'), '\\u001B[31mfoo\\u001B[39m');\n});\n\ntest('the `level` option should be a number from 0 to 3', t => {\n\t/* eslint-disable no-new */\n\tt.throws(() => {\n\t\tnew Chalk({level: 10});\n\t}, {message: /should be an integer from 0 to 3/});\n\n\tt.throws(() => {\n\t\tnew Chalk({level: -1});\n\t}, {message: /should be an integer from 0 to 3/});\n\t/* eslint-enable no-new */\n});\n",
      "size_chars": 702,
      "sha256": "537b1935168d2f5f0a583255767e32854112b1fb2f2be85fa64fd44e86ec23f5",
      "estimated_tokens": 175
    },
    {
      "path": "test/level.js",
      "content": "import {fileURLToPath} from 'node:url';\nimport test from 'ava';\nimport {execaNode} from 'execa';\nimport chalk from '../source/index.js';\n\nchalk.level = 1;\n\ntest('don\\'t output colors when manually disabled', t => {\n\tconst oldLevel = chalk.level;\n\tchalk.level = 0;\n\tt.is(chalk.red('foo'), 'foo');\n\tchalk.level = oldLevel;\n});\n\ntest('enable/disable colors based on overall chalk .level property, not individual instances', t => {\n\tconst oldLevel = chalk.level;\n\tchalk.level = 1;\n\tconst {red} = chalk;\n\tt.is(red.level, 1);\n\tchalk.level = 0;\n\tt.is(red.level, chalk.level);\n\tchalk.level = oldLevel;\n});\n\ntest('propagate enable/disable changes from child colors', t => {\n\tconst oldLevel = chalk.level;\n\tchalk.level = 1;\n\tconst {red} = chalk;\n\tt.is(red.level, 1);\n\tt.is(chalk.level, 1);\n\tred.level = 0;\n\tt.is(red.level, 0);\n\tt.is(chalk.level, 0);\n\tchalk.level = 1;\n\tt.is(red.level, 1);\n\tt.is(chalk.level, 1);\n\tchalk.level = oldLevel;\n});\n\ntest('disable colors if they are not supported', async t => {\n\tconst {stdout} = await execaNode(fileURLToPath(new URL('_fixture.js', import.meta.url)));\n\tt.is(stdout, 'testout testerr');\n});\n",
      "size_chars": 1123,
      "sha256": "661d69baec222b1cde59271e90ca83296f7f607e6521bd314c04e439caa6c849",
      "estimated_tokens": 280
    },
    {
      "path": "test/no-color-support.js",
      "content": "import test from 'ava';\nimport chalk from '../source/index.js';\n\n// TODO: Do this when ESM supports loader hooks\n// Spoof supports-color\n// require('./_supports-color')(__dirname, {\n// \tstdout: {\n// \t\tlevel: 0,\n// \t\thasBasic: false,\n// \t\thas256: false,\n// \t\thas16m: false\n// \t},\n// \tstderr: {\n// \t\tlevel: 0,\n// \t\thasBasic: false,\n// \t\thas256: false,\n// \t\thas16m: false\n// \t}\n// });\n\ntest('colors can be forced by using chalk.level', t => {\n\tchalk.level = 1;\n\tt.is(chalk.green('hello'), '\\u001B[32mhello\\u001B[39m');\n});\n",
      "size_chars": 520,
      "sha256": "517faee2c18c4f6d1ef650b59ff410751b1b85af7484b0ca918768597cb71a04",
      "estimated_tokens": 130
    },
    {
      "path": "test/visible.js",
      "content": "import test from 'ava';\nimport chalk, {Chalk} from '../source/index.js';\n\nchalk.level = 1;\n\ntest('visible: normal output when level > 0', t => {\n\tconst instance = new Chalk({level: 3});\n\tt.is(instance.visible.red('foo'), '\\u001B[31mfoo\\u001B[39m');\n\tt.is(instance.red.visible('foo'), '\\u001B[31mfoo\\u001B[39m');\n});\n\ntest('visible: no output when level is too low', t => {\n\tconst instance = new Chalk({level: 0});\n\tt.is(instance.visible.red('foo'), '');\n\tt.is(instance.red.visible('foo'), '');\n});\n\ntest('test switching back and forth between level == 0 and level > 0', t => {\n\tconst instance = new Chalk({level: 3});\n\tt.is(instance.red('foo'), '\\u001B[31mfoo\\u001B[39m');\n\tt.is(instance.visible.red('foo'), '\\u001B[31mfoo\\u001B[39m');\n\tt.is(instance.red.visible('foo'), '\\u001B[31mfoo\\u001B[39m');\n\tt.is(instance.visible('foo'), 'foo');\n\tt.is(instance.red('foo'), '\\u001B[31mfoo\\u001B[39m');\n\n\tinstance.level = 0;\n\tt.is(instance.red('foo'), 'foo');\n\tt.is(instance.visible('foo'), '');\n\tt.is(instance.visible.red('foo'), '');\n\tt.is(instance.red.visible('foo'), '');\n\tt.is(instance.red('foo'), 'foo');\n\n\tinstance.level = 3;\n\tt.is(instance.red('foo'), '\\u001B[31mfoo\\u001B[39m');\n\tt.is(instance.visible.red('foo'), '\\u001B[31mfoo\\u001B[39m');\n\tt.is(instance.red.visible('foo'), '\\u001B[31mfoo\\u001B[39m');\n\tt.is(instance.visible('foo'), 'foo');\n\tt.is(instance.red('foo'), '\\u001B[31mfoo\\u001B[39m');\n});\n",
      "size_chars": 1402,
      "sha256": "0db76b58ba8d8a9814bb5801b5b121e5168ec2f3a81bfdbfb86a77b082a4f4d2",
      "estimated_tokens": 350
    }
  ]
}